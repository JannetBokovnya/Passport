//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace Services.ServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatusAnswer", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.FieldMetaData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.PassportData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.KeyParentOnSave))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.KeyCementNKT))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.BuCopyTreeVisibleForm))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.KeyPassportOnCopy))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.KeyParentOnUpdateTree))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.KeyparentofchildTree))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.KeyonShemaArcgis))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.KeyonKartaObjList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.AccessLevelObjKey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.ButtonNKTObjKey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DataEntityList_result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.PasportToXML))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.FielButtonData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DisplayLabels))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DataTreeViewOnObjkey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.TreeFullHierarchyPathToObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DataListHistoryObj))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.CalcPrivJson))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.AllPriv))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.HashPassword))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DataMediaAttribute_result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DictDataOnEntityKey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.nameNSIOnKey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.ListNsiOnSave))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DictDataOne))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.ControlAttribute))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.GridData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.ThumbnailList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.ThumbnailListBigMedia))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DataConnectList_result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DataListRelationObj))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DataListLinkedObjects))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.KeyRelationOnSave))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.KeyRelationOnDel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.GetCheckOrganizationLink_result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DataChildList_result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.CountChild_result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.NameObj_result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.PassportInfo_result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DataMGList_result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DataNitList_result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.PairAll))]
    public partial class StatusAnswer : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorMessageField;
        
        private bool IsValidField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValid {
            get {
                return this.IsValidField;
            }
            set {
                if ((this.IsValidField.Equals(value) != true)) {
                    this.IsValidField = value;
                    this.RaisePropertyChanged("IsValid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FieldMetaData", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class FieldMetaData : Services.ServiceReference.StatusAnswer {
        
        private System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.FieldMetaDataItem> FieldMetaDataListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.FieldMetaDataItem> FieldMetaDataList {
            get {
                return this.FieldMetaDataListField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldMetaDataListField, value) != true)) {
                    this.FieldMetaDataListField = value;
                    this.RaisePropertyChanged("FieldMetaDataList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PassportData", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class PassportData : Services.ServiceReference.StatusAnswer {
        
        private System.Collections.Generic.Dictionary<string, string> DataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyParentOnSave", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class KeyParentOnSave : Services.ServiceReference.StatusAnswer {
        
        private Services.ServiceReference.KeyObj_OnSave KeyObj_OnSaveObj_resultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.ServiceReference.KeyObj_OnSave KeyObj_OnSaveObj_result {
            get {
                return this.KeyObj_OnSaveObj_resultField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyObj_OnSaveObj_resultField, value) != true)) {
                    this.KeyObj_OnSaveObj_resultField = value;
                    this.RaisePropertyChanged("KeyObj_OnSaveObj_result");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyCementNKT", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class KeyCementNKT : Services.ServiceReference.StatusAnswer {
        
        private Services.ServiceReference.KeyObj_OnCement KeyObj_OnCementNKT_resultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.ServiceReference.KeyObj_OnCement KeyObj_OnCementNKT_result {
            get {
                return this.KeyObj_OnCementNKT_resultField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyObj_OnCementNKT_resultField, value) != true)) {
                    this.KeyObj_OnCementNKT_resultField = value;
                    this.RaisePropertyChanged("KeyObj_OnCementNKT_result");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BuCopyTreeVisibleForm", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class BuCopyTreeVisibleForm : Services.ServiceReference.StatusAnswer {
        
        private Services.ServiceReference.BuCopyTreeVisible_Form BuCopyTreeVisible_resultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.ServiceReference.BuCopyTreeVisible_Form BuCopyTreeVisible_result {
            get {
                return this.BuCopyTreeVisible_resultField;
            }
            set {
                if ((object.ReferenceEquals(this.BuCopyTreeVisible_resultField, value) != true)) {
                    this.BuCopyTreeVisible_resultField = value;
                    this.RaisePropertyChanged("BuCopyTreeVisible_result");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyPassportOnCopy", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class KeyPassportOnCopy : Services.ServiceReference.StatusAnswer {
        
        private Services.ServiceReference.KeyObj_OnCopy KeyObj_OnCopyObj_resultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.ServiceReference.KeyObj_OnCopy KeyObj_OnCopyObj_result {
            get {
                return this.KeyObj_OnCopyObj_resultField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyObj_OnCopyObj_resultField, value) != true)) {
                    this.KeyObj_OnCopyObj_resultField = value;
                    this.RaisePropertyChanged("KeyObj_OnCopyObj_result");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyParentOnUpdateTree", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class KeyParentOnUpdateTree : Services.ServiceReference.StatusAnswer {
        
        private Services.ServiceReference.KeyParent_OnUpdate KeyParent_OnUpdateTree_resultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.ServiceReference.KeyParent_OnUpdate KeyParent_OnUpdateTree_result {
            get {
                return this.KeyParent_OnUpdateTree_resultField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyParent_OnUpdateTree_resultField, value) != true)) {
                    this.KeyParent_OnUpdateTree_resultField = value;
                    this.RaisePropertyChanged("KeyParent_OnUpdateTree_result");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyparentofchildTree", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class KeyparentofchildTree : Services.ServiceReference.StatusAnswer {
        
        private Services.ServiceReference.Keyparentofchild Keyparentofchild_resultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.ServiceReference.Keyparentofchild Keyparentofchild_result {
            get {
                return this.Keyparentofchild_resultField;
            }
            set {
                if ((object.ReferenceEquals(this.Keyparentofchild_resultField, value) != true)) {
                    this.Keyparentofchild_resultField = value;
                    this.RaisePropertyChanged("Keyparentofchild_result");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyonShemaArcgis", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class KeyonShemaArcgis : Services.ServiceReference.StatusAnswer {
        
        private Services.ServiceReference.KeyonShema KeyonShema_resultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.ServiceReference.KeyonShema KeyonShema_result {
            get {
                return this.KeyonShema_resultField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyonShema_resultField, value) != true)) {
                    this.KeyonShema_resultField = value;
                    this.RaisePropertyChanged("KeyonShema_result");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyonKartaObjList", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class KeyonKartaObjList : Services.ServiceReference.StatusAnswer {
        
        private System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.KeyonKartaList> KeyonKartaList_resultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.KeyonKartaList> KeyonKartaList_result {
            get {
                return this.KeyonKartaList_resultField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyonKartaList_resultField, value) != true)) {
                    this.KeyonKartaList_resultField = value;
                    this.RaisePropertyChanged("KeyonKartaList_result");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccessLevelObjKey", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class AccessLevelObjKey : Services.ServiceReference.StatusAnswer {
        
        private Services.ServiceReference.AccessLevel_OnKey AccessLevel_OnKey_resultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.ServiceReference.AccessLevel_OnKey AccessLevel_OnKey_result {
            get {
                return this.AccessLevel_OnKey_resultField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessLevel_OnKey_resultField, value) != true)) {
                    this.AccessLevel_OnKey_resultField = value;
                    this.RaisePropertyChanged("AccessLevel_OnKey_result");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ButtonNKTObjKey", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class ButtonNKTObjKey : Services.ServiceReference.StatusAnswer {
        
        private Services.ServiceReference.ButtonNKT_OnKey ButtonNKT_OnKet_resultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.ServiceReference.ButtonNKT_OnKey ButtonNKT_OnKet_result {
            get {
                return this.ButtonNKT_OnKet_resultField;
            }
            set {
                if ((object.ReferenceEquals(this.ButtonNKT_OnKet_resultField, value) != true)) {
                    this.ButtonNKT_OnKet_resultField = value;
                    this.RaisePropertyChanged("ButtonNKT_OnKet_result");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataEntityList_result", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class DataEntityList_result : Services.ServiceReference.StatusAnswer {
        
        private System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataEntityList> DataEntityListsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataEntityList> DataEntityLists {
            get {
                return this.DataEntityListsField;
            }
            set {
                if ((object.ReferenceEquals(this.DataEntityListsField, value) != true)) {
                    this.DataEntityListsField = value;
                    this.RaisePropertyChanged("DataEntityLists");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PasportToXML", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class PasportToXML : Services.ServiceReference.StatusAnswer {
        
        private System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.PasportToXMLItems> PasportToXMLItemsListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.PasportToXMLItems> PasportToXMLItemsList {
            get {
                return this.PasportToXMLItemsListField;
            }
            set {
                if ((object.ReferenceEquals(this.PasportToXMLItemsListField, value) != true)) {
                    this.PasportToXMLItemsListField = value;
                    this.RaisePropertyChanged("PasportToXMLItemsList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FielButtonData", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class FielButtonData : Services.ServiceReference.StatusAnswer {
        
        private System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.FielButtonDataItem> FielButtonDataItemListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.FielButtonDataItem> FielButtonDataItemList {
            get {
                return this.FielButtonDataItemListField;
            }
            set {
                if ((object.ReferenceEquals(this.FielButtonDataItemListField, value) != true)) {
                    this.FielButtonDataItemListField = value;
                    this.RaisePropertyChanged("FielButtonDataItemList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DisplayLabels", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class DisplayLabels : Services.ServiceReference.StatusAnswer {
        
        private System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DisplayLabelsItem> DisplayLabelsItemListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DisplayLabelsItem> DisplayLabelsItemList {
            get {
                return this.DisplayLabelsItemListField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayLabelsItemListField, value) != true)) {
                    this.DisplayLabelsItemListField = value;
                    this.RaisePropertyChanged("DisplayLabelsItemList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataTreeViewOnObjkey", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class DataTreeViewOnObjkey : Services.ServiceReference.StatusAnswer {
        
        private System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataTreeViewOnObjkeyItems> DataTreeViewOnObjkeyListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataTreeViewOnObjkeyItems> DataTreeViewOnObjkeyList {
            get {
                return this.DataTreeViewOnObjkeyListField;
            }
            set {
                if ((object.ReferenceEquals(this.DataTreeViewOnObjkeyListField, value) != true)) {
                    this.DataTreeViewOnObjkeyListField = value;
                    this.RaisePropertyChanged("DataTreeViewOnObjkeyList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TreeFullHierarchyPathToObject", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class TreeFullHierarchyPathToObject : Services.ServiceReference.StatusAnswer {
        
        private System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.TreeFullHierarchyPathToObjectItems> TreeFullHierarchyPathToObjectListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.TreeFullHierarchyPathToObjectItems> TreeFullHierarchyPathToObjectList {
            get {
                return this.TreeFullHierarchyPathToObjectListField;
            }
            set {
                if ((object.ReferenceEquals(this.TreeFullHierarchyPathToObjectListField, value) != true)) {
                    this.TreeFullHierarchyPathToObjectListField = value;
                    this.RaisePropertyChanged("TreeFullHierarchyPathToObjectList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataListHistoryObj", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class DataListHistoryObj : Services.ServiceReference.StatusAnswer {
        
        private System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataListHistoryItems> DataListHistoryObjListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataListHistoryItems> DataListHistoryObjList {
            get {
                return this.DataListHistoryObjListField;
            }
            set {
                if ((object.ReferenceEquals(this.DataListHistoryObjListField, value) != true)) {
                    this.DataListHistoryObjListField = value;
                    this.RaisePropertyChanged("DataListHistoryObjList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CalcPrivJson", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class CalcPrivJson : Services.ServiceReference.StatusAnswer {
        
        private Services.ServiceReference.CalcPrivOnEditJson CalcPrivOnEditJson_resultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.ServiceReference.CalcPrivOnEditJson CalcPrivOnEditJson_result {
            get {
                return this.CalcPrivOnEditJson_resultField;
            }
            set {
                if ((object.ReferenceEquals(this.CalcPrivOnEditJson_resultField, value) != true)) {
                    this.CalcPrivOnEditJson_resultField = value;
                    this.RaisePropertyChanged("CalcPrivOnEditJson_result");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AllPriv", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class AllPriv : Services.ServiceReference.StatusAnswer {
        
        private System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.PrivItems> PrivItemsListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.PrivItems> PrivItemsList {
            get {
                return this.PrivItemsListField;
            }
            set {
                if ((object.ReferenceEquals(this.PrivItemsListField, value) != true)) {
                    this.PrivItemsListField = value;
                    this.RaisePropertyChanged("PrivItemsList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HashPassword", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class HashPassword : Services.ServiceReference.StatusAnswer {
        
        private Services.ServiceReference.HashPassword_OnLog CurrentUser_OnLog_resultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.ServiceReference.HashPassword_OnLog CurrentUser_OnLog_result {
            get {
                return this.CurrentUser_OnLog_resultField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentUser_OnLog_resultField, value) != true)) {
                    this.CurrentUser_OnLog_resultField = value;
                    this.RaisePropertyChanged("CurrentUser_OnLog_result");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataMediaAttribute_result", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class DataMediaAttribute_result : Services.ServiceReference.StatusAnswer {
        
        private System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataMediaAttribute> DataMediaAttributeListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataMediaAttribute> DataMediaAttributeList {
            get {
                return this.DataMediaAttributeListField;
            }
            set {
                if ((object.ReferenceEquals(this.DataMediaAttributeListField, value) != true)) {
                    this.DataMediaAttributeListField = value;
                    this.RaisePropertyChanged("DataMediaAttributeList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DictDataOnEntityKey", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class DictDataOnEntityKey : Services.ServiceReference.StatusAnswer {
        
        private System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DictData> DictData_resultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DictData> DictData_result {
            get {
                return this.DictData_resultField;
            }
            set {
                if ((object.ReferenceEquals(this.DictData_resultField, value) != true)) {
                    this.DictData_resultField = value;
                    this.RaisePropertyChanged("DictData_result");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="nameNSIOnKey", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class nameNSIOnKey : Services.ServiceReference.StatusAnswer {
        
        private Services.ServiceReference.nameNSI_Key nameNSIonKey_resultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.ServiceReference.nameNSI_Key nameNSIonKey_result {
            get {
                return this.nameNSIonKey_resultField;
            }
            set {
                if ((object.ReferenceEquals(this.nameNSIonKey_resultField, value) != true)) {
                    this.nameNSIonKey_resultField = value;
                    this.RaisePropertyChanged("nameNSIonKey_result");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListNsiOnSave", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class ListNsiOnSave : Services.ServiceReference.StatusAnswer {
        
        private System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.OneDictData> DictData_resultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.OneDictData> DictData_result {
            get {
                return this.DictData_resultField;
            }
            set {
                if ((object.ReferenceEquals(this.DictData_resultField, value) != true)) {
                    this.DictData_resultField = value;
                    this.RaisePropertyChanged("DictData_result");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DictDataOne", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class DictDataOne : Services.ServiceReference.StatusAnswer {
        
        private System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.OneDictData> DictData_resultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.OneDictData> DictData_result {
            get {
                return this.DictData_resultField;
            }
            set {
                if ((object.ReferenceEquals(this.DictData_resultField, value) != true)) {
                    this.DictData_resultField = value;
                    this.RaisePropertyChanged("DictData_result");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ControlAttribute", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class ControlAttribute : Services.ServiceReference.StatusAnswer {
        
        private System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.ControlAttributeItem> ControlAttributeListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.ControlAttributeItem> ControlAttributeList {
            get {
                return this.ControlAttributeListField;
            }
            set {
                if ((object.ReferenceEquals(this.ControlAttributeListField, value) != true)) {
                    this.ControlAttributeListField = value;
                    this.RaisePropertyChanged("ControlAttributeList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GridData", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class GridData : Services.ServiceReference.StatusAnswer {
        
        private System.Collections.ObjectModel.ObservableCollection<string> FieldNamesField;
        
        private System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.GridRow> RowsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> FieldNames {
            get {
                return this.FieldNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldNamesField, value) != true)) {
                    this.FieldNamesField = value;
                    this.RaisePropertyChanged("FieldNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.GridRow> Rows {
            get {
                return this.RowsField;
            }
            set {
                if ((object.ReferenceEquals(this.RowsField, value) != true)) {
                    this.RowsField = value;
                    this.RaisePropertyChanged("Rows");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ThumbnailList", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class ThumbnailList : Services.ServiceReference.StatusAnswer {
        
        private System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.Thumbnail> ThumbnailsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.Thumbnail> Thumbnails {
            get {
                return this.ThumbnailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbnailsField, value) != true)) {
                    this.ThumbnailsField = value;
                    this.RaisePropertyChanged("Thumbnails");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ThumbnailListBigMedia", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class ThumbnailListBigMedia : Services.ServiceReference.StatusAnswer {
        
        private System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.ThumbnailBigMedia> ThumbnailBigMediaField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.ThumbnailBigMedia> ThumbnailBigMedia {
            get {
                return this.ThumbnailBigMediaField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbnailBigMediaField, value) != true)) {
                    this.ThumbnailBigMediaField = value;
                    this.RaisePropertyChanged("ThumbnailBigMedia");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataConnectList_result", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class DataConnectList_result : Services.ServiceReference.StatusAnswer {
        
        private System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataConnectList> DataConnectListsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataConnectList> DataConnectLists {
            get {
                return this.DataConnectListsField;
            }
            set {
                if ((object.ReferenceEquals(this.DataConnectListsField, value) != true)) {
                    this.DataConnectListsField = value;
                    this.RaisePropertyChanged("DataConnectLists");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataListRelationObj", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class DataListRelationObj : Services.ServiceReference.StatusAnswer {
        
        private System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataListRelationObjItems> DataListRelationObjListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataListRelationObjItems> DataListRelationObjList {
            get {
                return this.DataListRelationObjListField;
            }
            set {
                if ((object.ReferenceEquals(this.DataListRelationObjListField, value) != true)) {
                    this.DataListRelationObjListField = value;
                    this.RaisePropertyChanged("DataListRelationObjList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataListLinkedObjects", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class DataListLinkedObjects : Services.ServiceReference.StatusAnswer {
        
        private System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataListLinkedObjectsItems> DataListLinkedObjectsListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataListLinkedObjectsItems> DataListLinkedObjectsList {
            get {
                return this.DataListLinkedObjectsListField;
            }
            set {
                if ((object.ReferenceEquals(this.DataListLinkedObjectsListField, value) != true)) {
                    this.DataListLinkedObjectsListField = value;
                    this.RaisePropertyChanged("DataListLinkedObjectsList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyRelationOnSave", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class KeyRelationOnSave : Services.ServiceReference.StatusAnswer {
        
        private Services.ServiceReference.KeyRelation_OnSave KeyRelation_OnSaveObj_resultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.ServiceReference.KeyRelation_OnSave KeyRelation_OnSaveObj_result {
            get {
                return this.KeyRelation_OnSaveObj_resultField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyRelation_OnSaveObj_resultField, value) != true)) {
                    this.KeyRelation_OnSaveObj_resultField = value;
                    this.RaisePropertyChanged("KeyRelation_OnSaveObj_result");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyRelationOnDel", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class KeyRelationOnDel : Services.ServiceReference.StatusAnswer {
        
        private Services.ServiceReference.KeyRelation_OnDel KeyRelation_OnDelObj_resultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.ServiceReference.KeyRelation_OnDel KeyRelation_OnDelObj_result {
            get {
                return this.KeyRelation_OnDelObj_resultField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyRelation_OnDelObj_resultField, value) != true)) {
                    this.KeyRelation_OnDelObj_resultField = value;
                    this.RaisePropertyChanged("KeyRelation_OnDelObj_result");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCheckOrganizationLink_result", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class GetCheckOrganizationLink_result : Services.ServiceReference.StatusAnswer {
        
        private Services.ServiceReference.GetCheckOrganizationLink GetCheckOrganizationLinkOnkeyPassport_resultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.ServiceReference.GetCheckOrganizationLink GetCheckOrganizationLinkOnkeyPassport_result {
            get {
                return this.GetCheckOrganizationLinkOnkeyPassport_resultField;
            }
            set {
                if ((object.ReferenceEquals(this.GetCheckOrganizationLinkOnkeyPassport_resultField, value) != true)) {
                    this.GetCheckOrganizationLinkOnkeyPassport_resultField = value;
                    this.RaisePropertyChanged("GetCheckOrganizationLinkOnkeyPassport_result");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataChildList_result", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class DataChildList_result : Services.ServiceReference.StatusAnswer {
        
        private System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataChildList> DataChildListsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataChildList> DataChildLists {
            get {
                return this.DataChildListsField;
            }
            set {
                if ((object.ReferenceEquals(this.DataChildListsField, value) != true)) {
                    this.DataChildListsField = value;
                    this.RaisePropertyChanged("DataChildLists");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountChild_result", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class CountChild_result : Services.ServiceReference.StatusAnswer {
        
        private Services.ServiceReference.CountChild CountChildOnEntityKey_resultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.ServiceReference.CountChild CountChildOnEntityKey_result {
            get {
                return this.CountChildOnEntityKey_resultField;
            }
            set {
                if ((object.ReferenceEquals(this.CountChildOnEntityKey_resultField, value) != true)) {
                    this.CountChildOnEntityKey_resultField = value;
                    this.RaisePropertyChanged("CountChildOnEntityKey_result");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NameObj_result", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class NameObj_result : Services.ServiceReference.StatusAnswer {
        
        private Services.ServiceReference.NameObj NameObjectOnEntityKey_resultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.ServiceReference.NameObj NameObjectOnEntityKey_result {
            get {
                return this.NameObjectOnEntityKey_resultField;
            }
            set {
                if ((object.ReferenceEquals(this.NameObjectOnEntityKey_resultField, value) != true)) {
                    this.NameObjectOnEntityKey_resultField = value;
                    this.RaisePropertyChanged("NameObjectOnEntityKey_result");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PassportInfo_result", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class PassportInfo_result : Services.ServiceReference.StatusAnswer {
        
        private Services.ServiceReference.PassportInfo PassportInfoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.ServiceReference.PassportInfo PassportInfo {
            get {
                return this.PassportInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.PassportInfoField, value) != true)) {
                    this.PassportInfoField = value;
                    this.RaisePropertyChanged("PassportInfo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataMGList_result", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class DataMGList_result : Services.ServiceReference.StatusAnswer {
        
        private System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataMGList> DataMGListsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataMGList> DataMGLists {
            get {
                return this.DataMGListsField;
            }
            set {
                if ((object.ReferenceEquals(this.DataMGListsField, value) != true)) {
                    this.DataMGListsField = value;
                    this.RaisePropertyChanged("DataMGLists");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataNitList_result", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class DataNitList_result : Services.ServiceReference.StatusAnswer {
        
        private System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataNitList> DataNitListsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataNitList> DataNitLists {
            get {
                return this.DataNitListsField;
            }
            set {
                if ((object.ReferenceEquals(this.DataNitListsField, value) != true)) {
                    this.DataNitListsField = value;
                    this.RaisePropertyChanged("DataNitLists");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PairAll", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class PairAll : Services.ServiceReference.StatusAnswer {
        
        private System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.PairItem> PairItemListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.PairItem> PairItemList {
            get {
                return this.PairItemListField;
            }
            set {
                if ((object.ReferenceEquals(this.PairItemListField, value) != true)) {
                    this.PairItemListField = value;
                    this.RaisePropertyChanged("PairItemList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PairItem", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class PairItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KeyField;
        
        private string TextsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Texts {
            get {
                return this.TextsField;
            }
            set {
                if ((object.ReferenceEquals(this.TextsField, value) != true)) {
                    this.TextsField = value;
                    this.RaisePropertyChanged("Texts");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FieldMetaDataItem", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class FieldMetaDataItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int BASIC_FLDField;
        
        private string COLOR_FLDField;
        
        private int COLUMN_NUMField;
        
        private int FLDKEYField;
        
        private string FLDNAMEField;
        
        private string FLDTYPField;
        
        private int HEIGHT_CONTROLField;
        
        private string INPUTMASKField;
        
        private int IS_EDITEDField;
        
        private int IS_PKField;
        
        private int IS_VISIBLEField;
        
        private string KEYDICTField;
        
        private int MANDATORYVALUE_FLDField;
        
        private int NUMONPAGEField;
        
        private string OUTPUTMASKField;
        
        private int PAGENUMField;
        
        private System.Guid PARENTField;
        
        private int REPORT_VISIBLEField;
        
        private string TITULField;
        
        private int TYPECONTROLField;
        
        private int TYPEVALIDATIONField;
        
        private System.Guid UNIQ_CONTROL_NAMEField;
        
        private int WIDTH_CONTROLField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BASIC_FLD {
            get {
                return this.BASIC_FLDField;
            }
            set {
                if ((this.BASIC_FLDField.Equals(value) != true)) {
                    this.BASIC_FLDField = value;
                    this.RaisePropertyChanged("BASIC_FLD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COLOR_FLD {
            get {
                return this.COLOR_FLDField;
            }
            set {
                if ((object.ReferenceEquals(this.COLOR_FLDField, value) != true)) {
                    this.COLOR_FLDField = value;
                    this.RaisePropertyChanged("COLOR_FLD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int COLUMN_NUM {
            get {
                return this.COLUMN_NUMField;
            }
            set {
                if ((this.COLUMN_NUMField.Equals(value) != true)) {
                    this.COLUMN_NUMField = value;
                    this.RaisePropertyChanged("COLUMN_NUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FLDKEY {
            get {
                return this.FLDKEYField;
            }
            set {
                if ((this.FLDKEYField.Equals(value) != true)) {
                    this.FLDKEYField = value;
                    this.RaisePropertyChanged("FLDKEY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FLDNAME {
            get {
                return this.FLDNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.FLDNAMEField, value) != true)) {
                    this.FLDNAMEField = value;
                    this.RaisePropertyChanged("FLDNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FLDTYP {
            get {
                return this.FLDTYPField;
            }
            set {
                if ((object.ReferenceEquals(this.FLDTYPField, value) != true)) {
                    this.FLDTYPField = value;
                    this.RaisePropertyChanged("FLDTYP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HEIGHT_CONTROL {
            get {
                return this.HEIGHT_CONTROLField;
            }
            set {
                if ((this.HEIGHT_CONTROLField.Equals(value) != true)) {
                    this.HEIGHT_CONTROLField = value;
                    this.RaisePropertyChanged("HEIGHT_CONTROL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INPUTMASK {
            get {
                return this.INPUTMASKField;
            }
            set {
                if ((object.ReferenceEquals(this.INPUTMASKField, value) != true)) {
                    this.INPUTMASKField = value;
                    this.RaisePropertyChanged("INPUTMASK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IS_EDITED {
            get {
                return this.IS_EDITEDField;
            }
            set {
                if ((this.IS_EDITEDField.Equals(value) != true)) {
                    this.IS_EDITEDField = value;
                    this.RaisePropertyChanged("IS_EDITED");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IS_PK {
            get {
                return this.IS_PKField;
            }
            set {
                if ((this.IS_PKField.Equals(value) != true)) {
                    this.IS_PKField = value;
                    this.RaisePropertyChanged("IS_PK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IS_VISIBLE {
            get {
                return this.IS_VISIBLEField;
            }
            set {
                if ((this.IS_VISIBLEField.Equals(value) != true)) {
                    this.IS_VISIBLEField = value;
                    this.RaisePropertyChanged("IS_VISIBLE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KEYDICT {
            get {
                return this.KEYDICTField;
            }
            set {
                if ((object.ReferenceEquals(this.KEYDICTField, value) != true)) {
                    this.KEYDICTField = value;
                    this.RaisePropertyChanged("KEYDICT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MANDATORYVALUE_FLD {
            get {
                return this.MANDATORYVALUE_FLDField;
            }
            set {
                if ((this.MANDATORYVALUE_FLDField.Equals(value) != true)) {
                    this.MANDATORYVALUE_FLDField = value;
                    this.RaisePropertyChanged("MANDATORYVALUE_FLD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NUMONPAGE {
            get {
                return this.NUMONPAGEField;
            }
            set {
                if ((this.NUMONPAGEField.Equals(value) != true)) {
                    this.NUMONPAGEField = value;
                    this.RaisePropertyChanged("NUMONPAGE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OUTPUTMASK {
            get {
                return this.OUTPUTMASKField;
            }
            set {
                if ((object.ReferenceEquals(this.OUTPUTMASKField, value) != true)) {
                    this.OUTPUTMASKField = value;
                    this.RaisePropertyChanged("OUTPUTMASK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PAGENUM {
            get {
                return this.PAGENUMField;
            }
            set {
                if ((this.PAGENUMField.Equals(value) != true)) {
                    this.PAGENUMField = value;
                    this.RaisePropertyChanged("PAGENUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PARENT {
            get {
                return this.PARENTField;
            }
            set {
                if ((this.PARENTField.Equals(value) != true)) {
                    this.PARENTField = value;
                    this.RaisePropertyChanged("PARENT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int REPORT_VISIBLE {
            get {
                return this.REPORT_VISIBLEField;
            }
            set {
                if ((this.REPORT_VISIBLEField.Equals(value) != true)) {
                    this.REPORT_VISIBLEField = value;
                    this.RaisePropertyChanged("REPORT_VISIBLE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TITUL {
            get {
                return this.TITULField;
            }
            set {
                if ((object.ReferenceEquals(this.TITULField, value) != true)) {
                    this.TITULField = value;
                    this.RaisePropertyChanged("TITUL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TYPECONTROL {
            get {
                return this.TYPECONTROLField;
            }
            set {
                if ((this.TYPECONTROLField.Equals(value) != true)) {
                    this.TYPECONTROLField = value;
                    this.RaisePropertyChanged("TYPECONTROL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TYPEVALIDATION {
            get {
                return this.TYPEVALIDATIONField;
            }
            set {
                if ((this.TYPEVALIDATIONField.Equals(value) != true)) {
                    this.TYPEVALIDATIONField = value;
                    this.RaisePropertyChanged("TYPEVALIDATION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UNIQ_CONTROL_NAME {
            get {
                return this.UNIQ_CONTROL_NAMEField;
            }
            set {
                if ((this.UNIQ_CONTROL_NAMEField.Equals(value) != true)) {
                    this.UNIQ_CONTROL_NAMEField = value;
                    this.RaisePropertyChanged("UNIQ_CONTROL_NAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WIDTH_CONTROL {
            get {
                return this.WIDTH_CONTROLField;
            }
            set {
                if ((this.WIDTH_CONTROLField.Equals(value) != true)) {
                    this.WIDTH_CONTROLField = value;
                    this.RaisePropertyChanged("WIDTH_CONTROL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyObj_OnSave", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class KeyObj_OnSave : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KeyObj_OnSaveObjField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyObj_OnSaveObj {
            get {
                return this.KeyObj_OnSaveObjField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyObj_OnSaveObjField, value) != true)) {
                    this.KeyObj_OnSaveObjField = value;
                    this.RaisePropertyChanged("KeyObj_OnSaveObj");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyObj_OnCement", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class KeyObj_OnCement : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KeyObj_OnCementNKTField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyObj_OnCementNKT {
            get {
                return this.KeyObj_OnCementNKTField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyObj_OnCementNKTField, value) != true)) {
                    this.KeyObj_OnCementNKTField = value;
                    this.RaisePropertyChanged("KeyObj_OnCementNKT");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BuCopyTreeVisible_Form", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class BuCopyTreeVisible_Form : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string BuCopyTreeVisibleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuCopyTreeVisible {
            get {
                return this.BuCopyTreeVisibleField;
            }
            set {
                if ((object.ReferenceEquals(this.BuCopyTreeVisibleField, value) != true)) {
                    this.BuCopyTreeVisibleField = value;
                    this.RaisePropertyChanged("BuCopyTreeVisible");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyObj_OnCopy", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class KeyObj_OnCopy : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KeyObj_OnCopyObjField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyObj_OnCopyObj {
            get {
                return this.KeyObj_OnCopyObjField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyObj_OnCopyObjField, value) != true)) {
                    this.KeyObj_OnCopyObjField = value;
                    this.RaisePropertyChanged("KeyObj_OnCopyObj");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyParent_OnUpdate", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class KeyParent_OnUpdate : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KeyParent_OnUpdateTreeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyParent_OnUpdateTree {
            get {
                return this.KeyParent_OnUpdateTreeField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyParent_OnUpdateTreeField, value) != true)) {
                    this.KeyParent_OnUpdateTreeField = value;
                    this.RaisePropertyChanged("KeyParent_OnUpdateTree");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Keyparentofchild", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class Keyparentofchild : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string Keyparentofchild_TreeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Keyparentofchild_Tree {
            get {
                return this.Keyparentofchild_TreeField;
            }
            set {
                if ((object.ReferenceEquals(this.Keyparentofchild_TreeField, value) != true)) {
                    this.Keyparentofchild_TreeField = value;
                    this.RaisePropertyChanged("Keyparentofchild_Tree");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyonShema", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class KeyonShema : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KeyonShema_arcgisField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyonShema_arcgis {
            get {
                return this.KeyonShema_arcgisField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyonShema_arcgisField, value) != true)) {
                    this.KeyonShema_arcgisField = value;
                    this.RaisePropertyChanged("KeyonShema_arcgis");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyonKartaList", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class KeyonKartaList : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string cGeomKeyField;
        
        private string nTSField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cGeomKey {
            get {
                return this.cGeomKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.cGeomKeyField, value) != true)) {
                    this.cGeomKeyField = value;
                    this.RaisePropertyChanged("cGeomKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nTS {
            get {
                return this.nTSField;
            }
            set {
                if ((object.ReferenceEquals(this.nTSField, value) != true)) {
                    this.nTSField = value;
                    this.RaisePropertyChanged("nTS");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccessLevel_OnKey", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class AccessLevel_OnKey : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AccessLevelField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessLevel {
            get {
                return this.AccessLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessLevelField, value) != true)) {
                    this.AccessLevelField = value;
                    this.RaisePropertyChanged("AccessLevel");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ButtonNKT_OnKey", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class ButtonNKT_OnKey : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ButtonNKTVisibleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ButtonNKTVisible {
            get {
                return this.ButtonNKTVisibleField;
            }
            set {
                if ((object.ReferenceEquals(this.ButtonNKTVisibleField, value) != true)) {
                    this.ButtonNKTVisibleField = value;
                    this.RaisePropertyChanged("ButtonNKTVisible");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataEntityList", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class DataEntityList : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KEYENTITYField;
        
        private string VALUEENTITYField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KEYENTITY {
            get {
                return this.KEYENTITYField;
            }
            set {
                if ((object.ReferenceEquals(this.KEYENTITYField, value) != true)) {
                    this.KEYENTITYField = value;
                    this.RaisePropertyChanged("KEYENTITY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VALUEENTITY {
            get {
                return this.VALUEENTITYField;
            }
            set {
                if ((object.ReferenceEquals(this.VALUEENTITYField, value) != true)) {
                    this.VALUEENTITYField = value;
                    this.RaisePropertyChanged("VALUEENTITY");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PasportToXMLItems", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class PasportToXMLItems : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string strToXMLField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strToXML {
            get {
                return this.strToXMLField;
            }
            set {
                if ((object.ReferenceEquals(this.strToXMLField, value) != true)) {
                    this.strToXMLField = value;
                    this.RaisePropertyChanged("strToXML");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FielButtonDataItem", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class FielButtonDataItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CAttributeField;
        
        private string CEventField;
        
        private string CParamsField;
        
        private string ContentJpgField;
        
        private string NButtonTypeField;
        
        private string NameJpgField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CAttribute {
            get {
                return this.CAttributeField;
            }
            set {
                if ((object.ReferenceEquals(this.CAttributeField, value) != true)) {
                    this.CAttributeField = value;
                    this.RaisePropertyChanged("CAttribute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CEvent {
            get {
                return this.CEventField;
            }
            set {
                if ((object.ReferenceEquals(this.CEventField, value) != true)) {
                    this.CEventField = value;
                    this.RaisePropertyChanged("CEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CParams {
            get {
                return this.CParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.CParamsField, value) != true)) {
                    this.CParamsField = value;
                    this.RaisePropertyChanged("CParams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContentJpg {
            get {
                return this.ContentJpgField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentJpgField, value) != true)) {
                    this.ContentJpgField = value;
                    this.RaisePropertyChanged("ContentJpg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NButtonType {
            get {
                return this.NButtonTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.NButtonTypeField, value) != true)) {
                    this.NButtonTypeField = value;
                    this.RaisePropertyChanged("NButtonType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameJpg {
            get {
                return this.NameJpgField;
            }
            set {
                if ((object.ReferenceEquals(this.NameJpgField, value) != true)) {
                    this.NameJpgField = value;
                    this.RaisePropertyChanged("NameJpg");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DisplayLabelsItem", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class DisplayLabelsItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string СplaceField;
        
        private string СvalueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Сplace {
            get {
                return this.СplaceField;
            }
            set {
                if ((object.ReferenceEquals(this.СplaceField, value) != true)) {
                    this.СplaceField = value;
                    this.RaisePropertyChanged("Сplace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Сvalue {
            get {
                return this.СvalueField;
            }
            set {
                if ((object.ReferenceEquals(this.СvalueField, value) != true)) {
                    this.СvalueField = value;
                    this.RaisePropertyChanged("Сvalue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataTreeViewOnObjkeyItems", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class DataTreeViewOnObjkeyItems : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KeyField;
        
        private string LevelField;
        
        private string ParentKeyField;
        
        private string TextsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Level {
            get {
                return this.LevelField;
            }
            set {
                if ((object.ReferenceEquals(this.LevelField, value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentKey {
            get {
                return this.ParentKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentKeyField, value) != true)) {
                    this.ParentKeyField = value;
                    this.RaisePropertyChanged("ParentKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Texts {
            get {
                return this.TextsField;
            }
            set {
                if ((object.ReferenceEquals(this.TextsField, value) != true)) {
                    this.TextsField = value;
                    this.RaisePropertyChanged("Texts");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TreeFullHierarchyPathToObjectItems", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class TreeFullHierarchyPathToObjectItems : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string LevelField;
        
        private string ObjKeyField;
        
        private string ObjTypeKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Level {
            get {
                return this.LevelField;
            }
            set {
                if ((object.ReferenceEquals(this.LevelField, value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObjKey {
            get {
                return this.ObjKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjKeyField, value) != true)) {
                    this.ObjKeyField = value;
                    this.RaisePropertyChanged("ObjKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObjTypeKey {
            get {
                return this.ObjTypeKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjTypeKeyField, value) != true)) {
                    this.ObjTypeKeyField = value;
                    this.RaisePropertyChanged("ObjTypeKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataListHistoryItems", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class DataListHistoryItems : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CFieldNameField;
        
        private string CUserField;
        
        private string CnewvalField;
        
        private string ColdvalField;
        
        private string DoperationtimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CFieldName {
            get {
                return this.CFieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CFieldNameField, value) != true)) {
                    this.CFieldNameField = value;
                    this.RaisePropertyChanged("CFieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CUser {
            get {
                return this.CUserField;
            }
            set {
                if ((object.ReferenceEquals(this.CUserField, value) != true)) {
                    this.CUserField = value;
                    this.RaisePropertyChanged("CUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cnewval {
            get {
                return this.CnewvalField;
            }
            set {
                if ((object.ReferenceEquals(this.CnewvalField, value) != true)) {
                    this.CnewvalField = value;
                    this.RaisePropertyChanged("Cnewval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Coldval {
            get {
                return this.ColdvalField;
            }
            set {
                if ((object.ReferenceEquals(this.ColdvalField, value) != true)) {
                    this.ColdvalField = value;
                    this.RaisePropertyChanged("Coldval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Doperationtime {
            get {
                return this.DoperationtimeField;
            }
            set {
                if ((object.ReferenceEquals(this.DoperationtimeField, value) != true)) {
                    this.DoperationtimeField = value;
                    this.RaisePropertyChanged("Doperationtime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CalcPrivOnEditJson", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class CalcPrivOnEditJson : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CalcPrivOnEditJsonOnKeyPassportField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CalcPrivOnEditJsonOnKeyPassport {
            get {
                return this.CalcPrivOnEditJsonOnKeyPassportField;
            }
            set {
                if ((object.ReferenceEquals(this.CalcPrivOnEditJsonOnKeyPassportField, value) != true)) {
                    this.CalcPrivOnEditJsonOnKeyPassportField = value;
                    this.RaisePropertyChanged("CalcPrivOnEditJsonOnKeyPassport");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrivItems", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class PrivItems : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CNAMEField;
        
        private string ISEDITEDField;
        
        private string NBUILDTYPEField;
        
        private string NDISTANCEBEGField;
        
        private string NDISTANCEENDField;
        
        private string NH1Field;
        
        private string NH2Field;
        
        private string NKEYField;
        
        private string NKMORT1Field;
        
        private string NKMORT2Field;
        
        private string NKMTRUE1Field;
        
        private string NKMTRUE2Field;
        
        private string NX1Field;
        
        private string NX2Field;
        
        private string NY1Field;
        
        private string NY2Field;
        
        private string NZ1Field;
        
        private string NZ2Field;
        
        private string nMtKeyField;
        
        private string nPipeKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNAME {
            get {
                return this.CNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.CNAMEField, value) != true)) {
                    this.CNAMEField = value;
                    this.RaisePropertyChanged("CNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISEDITED {
            get {
                return this.ISEDITEDField;
            }
            set {
                if ((object.ReferenceEquals(this.ISEDITEDField, value) != true)) {
                    this.ISEDITEDField = value;
                    this.RaisePropertyChanged("ISEDITED");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NBUILDTYPE {
            get {
                return this.NBUILDTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.NBUILDTYPEField, value) != true)) {
                    this.NBUILDTYPEField = value;
                    this.RaisePropertyChanged("NBUILDTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NDISTANCEBEG {
            get {
                return this.NDISTANCEBEGField;
            }
            set {
                if ((object.ReferenceEquals(this.NDISTANCEBEGField, value) != true)) {
                    this.NDISTANCEBEGField = value;
                    this.RaisePropertyChanged("NDISTANCEBEG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NDISTANCEEND {
            get {
                return this.NDISTANCEENDField;
            }
            set {
                if ((object.ReferenceEquals(this.NDISTANCEENDField, value) != true)) {
                    this.NDISTANCEENDField = value;
                    this.RaisePropertyChanged("NDISTANCEEND");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NH1 {
            get {
                return this.NH1Field;
            }
            set {
                if ((object.ReferenceEquals(this.NH1Field, value) != true)) {
                    this.NH1Field = value;
                    this.RaisePropertyChanged("NH1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NH2 {
            get {
                return this.NH2Field;
            }
            set {
                if ((object.ReferenceEquals(this.NH2Field, value) != true)) {
                    this.NH2Field = value;
                    this.RaisePropertyChanged("NH2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NKEY {
            get {
                return this.NKEYField;
            }
            set {
                if ((object.ReferenceEquals(this.NKEYField, value) != true)) {
                    this.NKEYField = value;
                    this.RaisePropertyChanged("NKEY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NKMORT1 {
            get {
                return this.NKMORT1Field;
            }
            set {
                if ((object.ReferenceEquals(this.NKMORT1Field, value) != true)) {
                    this.NKMORT1Field = value;
                    this.RaisePropertyChanged("NKMORT1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NKMORT2 {
            get {
                return this.NKMORT2Field;
            }
            set {
                if ((object.ReferenceEquals(this.NKMORT2Field, value) != true)) {
                    this.NKMORT2Field = value;
                    this.RaisePropertyChanged("NKMORT2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NKMTRUE1 {
            get {
                return this.NKMTRUE1Field;
            }
            set {
                if ((object.ReferenceEquals(this.NKMTRUE1Field, value) != true)) {
                    this.NKMTRUE1Field = value;
                    this.RaisePropertyChanged("NKMTRUE1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NKMTRUE2 {
            get {
                return this.NKMTRUE2Field;
            }
            set {
                if ((object.ReferenceEquals(this.NKMTRUE2Field, value) != true)) {
                    this.NKMTRUE2Field = value;
                    this.RaisePropertyChanged("NKMTRUE2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NX1 {
            get {
                return this.NX1Field;
            }
            set {
                if ((object.ReferenceEquals(this.NX1Field, value) != true)) {
                    this.NX1Field = value;
                    this.RaisePropertyChanged("NX1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NX2 {
            get {
                return this.NX2Field;
            }
            set {
                if ((object.ReferenceEquals(this.NX2Field, value) != true)) {
                    this.NX2Field = value;
                    this.RaisePropertyChanged("NX2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NY1 {
            get {
                return this.NY1Field;
            }
            set {
                if ((object.ReferenceEquals(this.NY1Field, value) != true)) {
                    this.NY1Field = value;
                    this.RaisePropertyChanged("NY1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NY2 {
            get {
                return this.NY2Field;
            }
            set {
                if ((object.ReferenceEquals(this.NY2Field, value) != true)) {
                    this.NY2Field = value;
                    this.RaisePropertyChanged("NY2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NZ1 {
            get {
                return this.NZ1Field;
            }
            set {
                if ((object.ReferenceEquals(this.NZ1Field, value) != true)) {
                    this.NZ1Field = value;
                    this.RaisePropertyChanged("NZ1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NZ2 {
            get {
                return this.NZ2Field;
            }
            set {
                if ((object.ReferenceEquals(this.NZ2Field, value) != true)) {
                    this.NZ2Field = value;
                    this.RaisePropertyChanged("NZ2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nMtKey {
            get {
                return this.nMtKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.nMtKeyField, value) != true)) {
                    this.nMtKeyField = value;
                    this.RaisePropertyChanged("nMtKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nPipeKey {
            get {
                return this.nPipeKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.nPipeKeyField, value) != true)) {
                    this.nPipeKeyField = value;
                    this.RaisePropertyChanged("nPipeKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HashPassword_OnLog", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class HashPassword_OnLog : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string HashPassword_OnLogBaseField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HashPassword_OnLogBase {
            get {
                return this.HashPassword_OnLogBaseField;
            }
            set {
                if ((object.ReferenceEquals(this.HashPassword_OnLogBaseField, value) != true)) {
                    this.HashPassword_OnLogBaseField = value;
                    this.RaisePropertyChanged("HashPassword_OnLogBase");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataMediaAttribute", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class DataMediaAttribute : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string comment_mediaField;
        
        private string name_fileField;
        
        private string type_mediaField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string comment_media {
            get {
                return this.comment_mediaField;
            }
            set {
                if ((object.ReferenceEquals(this.comment_mediaField, value) != true)) {
                    this.comment_mediaField = value;
                    this.RaisePropertyChanged("comment_media");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name_file {
            get {
                return this.name_fileField;
            }
            set {
                if ((object.ReferenceEquals(this.name_fileField, value) != true)) {
                    this.name_fileField = value;
                    this.RaisePropertyChanged("name_file");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string type_media {
            get {
                return this.type_mediaField;
            }
            set {
                if ((object.ReferenceEquals(this.type_mediaField, value) != true)) {
                    this.type_mediaField = value;
                    this.RaisePropertyChanged("type_media");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DictData", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class DictData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KEYDICTField;
        
        private string VALUEDICTField;
        
        private string VALUEKEYDICTField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KEYDICT {
            get {
                return this.KEYDICTField;
            }
            set {
                if ((object.ReferenceEquals(this.KEYDICTField, value) != true)) {
                    this.KEYDICTField = value;
                    this.RaisePropertyChanged("KEYDICT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VALUEDICT {
            get {
                return this.VALUEDICTField;
            }
            set {
                if ((object.ReferenceEquals(this.VALUEDICTField, value) != true)) {
                    this.VALUEDICTField = value;
                    this.RaisePropertyChanged("VALUEDICT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VALUEKEYDICT {
            get {
                return this.VALUEKEYDICTField;
            }
            set {
                if ((object.ReferenceEquals(this.VALUEKEYDICTField, value) != true)) {
                    this.VALUEKEYDICTField = value;
                    this.RaisePropertyChanged("VALUEKEYDICT");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="nameNSI_Key", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class nameNSI_Key : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string NameNSIonkeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameNSIonkey {
            get {
                return this.NameNSIonkeyField;
            }
            set {
                if ((object.ReferenceEquals(this.NameNSIonkeyField, value) != true)) {
                    this.NameNSIonkeyField = value;
                    this.RaisePropertyChanged("NameNSIonkey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OneDictData", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class OneDictData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KEYVALUEDICTField;
        
        private string VALUEDICTField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KEYVALUEDICT {
            get {
                return this.KEYVALUEDICTField;
            }
            set {
                if ((object.ReferenceEquals(this.KEYVALUEDICTField, value) != true)) {
                    this.KEYVALUEDICTField = value;
                    this.RaisePropertyChanged("KEYVALUEDICT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VALUEDICT {
            get {
                return this.VALUEDICTField;
            }
            set {
                if ((object.ReferenceEquals(this.VALUEDICTField, value) != true)) {
                    this.VALUEDICTField = value;
                    this.RaisePropertyChanged("VALUEDICT");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ControlAttributeItem", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class ControlAttributeItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string COLORFONField;
        
        private string COLORTEXTField;
        
        private int FONTSIZEField;
        
        private int HEIGHTField;
        
        private int TYPECONTROLField;
        
        private int UNDERLINEField;
        
        private int WIDTHField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COLORFON {
            get {
                return this.COLORFONField;
            }
            set {
                if ((object.ReferenceEquals(this.COLORFONField, value) != true)) {
                    this.COLORFONField = value;
                    this.RaisePropertyChanged("COLORFON");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COLORTEXT {
            get {
                return this.COLORTEXTField;
            }
            set {
                if ((object.ReferenceEquals(this.COLORTEXTField, value) != true)) {
                    this.COLORTEXTField = value;
                    this.RaisePropertyChanged("COLORTEXT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FONTSIZE {
            get {
                return this.FONTSIZEField;
            }
            set {
                if ((this.FONTSIZEField.Equals(value) != true)) {
                    this.FONTSIZEField = value;
                    this.RaisePropertyChanged("FONTSIZE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HEIGHT {
            get {
                return this.HEIGHTField;
            }
            set {
                if ((this.HEIGHTField.Equals(value) != true)) {
                    this.HEIGHTField = value;
                    this.RaisePropertyChanged("HEIGHT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TYPECONTROL {
            get {
                return this.TYPECONTROLField;
            }
            set {
                if ((this.TYPECONTROLField.Equals(value) != true)) {
                    this.TYPECONTROLField = value;
                    this.RaisePropertyChanged("TYPECONTROL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UNDERLINE {
            get {
                return this.UNDERLINEField;
            }
            set {
                if ((this.UNDERLINEField.Equals(value) != true)) {
                    this.UNDERLINEField = value;
                    this.RaisePropertyChanged("UNDERLINE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WIDTH {
            get {
                return this.WIDTHField;
            }
            set {
                if ((this.WIDTHField.Equals(value) != true)) {
                    this.WIDTHField = value;
                    this.RaisePropertyChanged("WIDTH");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GridRow", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.PairAll))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.StatusAnswer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.PairItem>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.PairItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.FieldMetaData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.FieldMetaDataItem>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.FieldMetaDataItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.PassportData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.KeyParentOnSave))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.KeyObj_OnSave))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.KeyCementNKT))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.KeyObj_OnCement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.BuCopyTreeVisibleForm))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.BuCopyTreeVisible_Form))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.KeyPassportOnCopy))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.KeyObj_OnCopy))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.KeyParentOnUpdateTree))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.KeyParent_OnUpdate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.KeyparentofchildTree))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.Keyparentofchild))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.KeyonShemaArcgis))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.KeyonShema))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.KeyonKartaObjList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.KeyonKartaList>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.KeyonKartaList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.AccessLevelObjKey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.AccessLevel_OnKey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.ButtonNKTObjKey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.ButtonNKT_OnKey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DataEntityList_result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataEntityList>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DataEntityList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.PasportToXML))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.PasportToXMLItems>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.PasportToXMLItems))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.FielButtonData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.FielButtonDataItem>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.FielButtonDataItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DisplayLabels))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DisplayLabelsItem>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DisplayLabelsItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DataTreeViewOnObjkey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataTreeViewOnObjkeyItems>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DataTreeViewOnObjkeyItems))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.TreeFullHierarchyPathToObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.TreeFullHierarchyPathToObjectItems>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.TreeFullHierarchyPathToObjectItems))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DataListHistoryObj))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataListHistoryItems>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DataListHistoryItems))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.CalcPrivJson))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.CalcPrivOnEditJson))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.AllPriv))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.PrivItems>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.PrivItems))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.HashPassword))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.HashPassword_OnLog))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DataMediaAttribute_result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataMediaAttribute>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DataMediaAttribute))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DictDataOnEntityKey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DictData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DictData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DictDataFiltr>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DictDataFiltr))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.nameNSIOnKey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.nameNSI_Key))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.ListNsiOnSave))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.OneDictData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.OneDictData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DictDataOne))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.ControlAttribute))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.ControlAttributeItem>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.ControlAttributeItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.AttributOneControl>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.AttributOneControl))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.GridData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.GridRow>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.ThumbnailList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.Thumbnail>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.Thumbnail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.ThumbnailListBigMedia))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.ThumbnailBigMedia>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.ThumbnailBigMedia))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataLinkList>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DataLinkList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DataConnectList_result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataConnectList>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DataConnectList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DataListRelationObj))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataListRelationObjItems>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DataListRelationObjItems))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DataListLinkedObjects))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataListLinkedObjectsItems>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DataListLinkedObjectsItems))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.KeyRelationOnSave))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.KeyRelation_OnSave))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.KeyRelationOnDel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.KeyRelation_OnDel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.GetCheckOrganizationLink_result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.GetCheckOrganizationLink))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DataChildList_result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataChildList>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DataChildList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.CountChild_result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.CountChild))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.NameObj_result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.NameObj))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.PassportInfo_result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.PassportInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DataMGList_result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataMGList>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DataMGList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DataNitList_result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataNitList>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.ServiceReference.DataNitList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<object>))]
    public partial class GridRow : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<object> CelsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<object> Cels {
            get {
                return this.CelsField;
            }
            set {
                if ((object.ReferenceEquals(this.CelsField, value) != true)) {
                    this.CelsField = value;
                    this.RaisePropertyChanged("Cels");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DictDataFiltr", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class DictDataFiltr : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KEYDICTField;
        
        private string VALUEDICTField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KEYDICT {
            get {
                return this.KEYDICTField;
            }
            set {
                if ((object.ReferenceEquals(this.KEYDICTField, value) != true)) {
                    this.KEYDICTField = value;
                    this.RaisePropertyChanged("KEYDICT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VALUEDICT {
            get {
                return this.VALUEDICTField;
            }
            set {
                if ((object.ReferenceEquals(this.VALUEDICTField, value) != true)) {
                    this.VALUEDICTField = value;
                    this.RaisePropertyChanged("VALUEDICT");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttributOneControl", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class AttributOneControl : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string COLORFONField;
        
        private string COLORTEXTField;
        
        private int FONTSIZEField;
        
        private int HEIGHTField;
        
        private int UNDERLINEField;
        
        private int WIDTHField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COLORFON {
            get {
                return this.COLORFONField;
            }
            set {
                if ((object.ReferenceEquals(this.COLORFONField, value) != true)) {
                    this.COLORFONField = value;
                    this.RaisePropertyChanged("COLORFON");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COLORTEXT {
            get {
                return this.COLORTEXTField;
            }
            set {
                if ((object.ReferenceEquals(this.COLORTEXTField, value) != true)) {
                    this.COLORTEXTField = value;
                    this.RaisePropertyChanged("COLORTEXT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FONTSIZE {
            get {
                return this.FONTSIZEField;
            }
            set {
                if ((this.FONTSIZEField.Equals(value) != true)) {
                    this.FONTSIZEField = value;
                    this.RaisePropertyChanged("FONTSIZE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HEIGHT {
            get {
                return this.HEIGHTField;
            }
            set {
                if ((this.HEIGHTField.Equals(value) != true)) {
                    this.HEIGHTField = value;
                    this.RaisePropertyChanged("HEIGHT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UNDERLINE {
            get {
                return this.UNDERLINEField;
            }
            set {
                if ((this.UNDERLINEField.Equals(value) != true)) {
                    this.UNDERLINEField = value;
                    this.RaisePropertyChanged("UNDERLINE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WIDTH {
            get {
                return this.WIDTHField;
            }
            set {
                if ((this.WIDTHField.Equals(value) != true)) {
                    this.WIDTHField = value;
                    this.RaisePropertyChanged("WIDTH");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Thumbnail", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class Thumbnail : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CommentField;
        
        private byte[] DataField;
        
        private double KeyField;
        
        private string NameField;
        
        private string TypeMediaField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Key {
            get {
                return this.KeyField;
            }
            set {
                if ((this.KeyField.Equals(value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeMedia {
            get {
                return this.TypeMediaField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeMediaField, value) != true)) {
                    this.TypeMediaField = value;
                    this.RaisePropertyChanged("TypeMedia");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ThumbnailBigMedia", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class ThumbnailBigMedia : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CommentField;
        
        private byte[] DataField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataLinkList", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class DataLinkList : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KEYLINKField;
        
        private string NAMELINKField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KEYLINK {
            get {
                return this.KEYLINKField;
            }
            set {
                if ((object.ReferenceEquals(this.KEYLINKField, value) != true)) {
                    this.KEYLINKField = value;
                    this.RaisePropertyChanged("KEYLINK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NAMELINK {
            get {
                return this.NAMELINKField;
            }
            set {
                if ((object.ReferenceEquals(this.NAMELINKField, value) != true)) {
                    this.NAMELINKField = value;
                    this.RaisePropertyChanged("NAMELINK");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataConnectList", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class DataConnectList : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KEYCONNECTField;
        
        private string NAMECONNECTField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KEYCONNECT {
            get {
                return this.KEYCONNECTField;
            }
            set {
                if ((object.ReferenceEquals(this.KEYCONNECTField, value) != true)) {
                    this.KEYCONNECTField = value;
                    this.RaisePropertyChanged("KEYCONNECT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NAMECONNECT {
            get {
                return this.NAMECONNECTField;
            }
            set {
                if ((object.ReferenceEquals(this.NAMECONNECTField, value) != true)) {
                    this.NAMECONNECTField = value;
                    this.RaisePropertyChanged("NAMECONNECT");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataListRelationObjItems", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class DataListRelationObjItems : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KeyObjField;
        
        private string NameEntityField;
        
        private string NameObjField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyObj {
            get {
                return this.KeyObjField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyObjField, value) != true)) {
                    this.KeyObjField = value;
                    this.RaisePropertyChanged("KeyObj");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameEntity {
            get {
                return this.NameEntityField;
            }
            set {
                if ((object.ReferenceEquals(this.NameEntityField, value) != true)) {
                    this.NameEntityField = value;
                    this.RaisePropertyChanged("NameEntity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameObj {
            get {
                return this.NameObjField;
            }
            set {
                if ((object.ReferenceEquals(this.NameObjField, value) != true)) {
                    this.NameObjField = value;
                    this.RaisePropertyChanged("NameObj");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataListLinkedObjectsItems", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class DataListLinkedObjectsItems : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string EntityKeyField;
        
        private string ObjKeyField;
        
        private string ObjNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityKey {
            get {
                return this.EntityKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyField, value) != true)) {
                    this.EntityKeyField = value;
                    this.RaisePropertyChanged("EntityKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObjKey {
            get {
                return this.ObjKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjKeyField, value) != true)) {
                    this.ObjKeyField = value;
                    this.RaisePropertyChanged("ObjKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObjName {
            get {
                return this.ObjNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjNameField, value) != true)) {
                    this.ObjNameField = value;
                    this.RaisePropertyChanged("ObjName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyRelation_OnSave", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class KeyRelation_OnSave : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KeyRelation_OnSaveObjField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyRelation_OnSaveObj {
            get {
                return this.KeyRelation_OnSaveObjField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyRelation_OnSaveObjField, value) != true)) {
                    this.KeyRelation_OnSaveObjField = value;
                    this.RaisePropertyChanged("KeyRelation_OnSaveObj");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyRelation_OnDel", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class KeyRelation_OnDel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KeyRelation_OnDelObjField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyRelation_OnDelObj {
            get {
                return this.KeyRelation_OnDelObjField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyRelation_OnDelObjField, value) != true)) {
                    this.KeyRelation_OnDelObjField = value;
                    this.RaisePropertyChanged("KeyRelation_OnDelObj");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCheckOrganizationLink", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class GetCheckOrganizationLink : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string GetCheckOrganizationLinkOnkeyPassportField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GetCheckOrganizationLinkOnkeyPassport {
            get {
                return this.GetCheckOrganizationLinkOnkeyPassportField;
            }
            set {
                if ((object.ReferenceEquals(this.GetCheckOrganizationLinkOnkeyPassportField, value) != true)) {
                    this.GetCheckOrganizationLinkOnkeyPassportField = value;
                    this.RaisePropertyChanged("GetCheckOrganizationLinkOnkeyPassport");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataChildList", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class DataChildList : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ENTITYKEYCHILDSField;
        
        private string NAMECHILDSField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ENTITYKEYCHILDS {
            get {
                return this.ENTITYKEYCHILDSField;
            }
            set {
                if ((object.ReferenceEquals(this.ENTITYKEYCHILDSField, value) != true)) {
                    this.ENTITYKEYCHILDSField = value;
                    this.RaisePropertyChanged("ENTITYKEYCHILDS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NAMECHILDS {
            get {
                return this.NAMECHILDSField;
            }
            set {
                if ((object.ReferenceEquals(this.NAMECHILDSField, value) != true)) {
                    this.NAMECHILDSField = value;
                    this.RaisePropertyChanged("NAMECHILDS");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountChild", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class CountChild : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int CountChildOnEntityKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountChildOnEntityKey {
            get {
                return this.CountChildOnEntityKeyField;
            }
            set {
                if ((this.CountChildOnEntityKeyField.Equals(value) != true)) {
                    this.CountChildOnEntityKeyField = value;
                    this.RaisePropertyChanged("CountChildOnEntityKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NameObj", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class NameObj : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string NameObjectOnEntityKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameObjectOnEntityKey {
            get {
                return this.NameObjectOnEntityKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.NameObjectOnEntityKeyField, value) != true)) {
                    this.NameObjectOnEntityKeyField = value;
                    this.RaisePropertyChanged("NameObjectOnEntityKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PassportInfo", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class PassportInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string GetNameObjField;
        
        private int IsDeleteCurrentPassportField;
        
        private int IsEditedCurrentPasportField;
        
        private string KeyEntityObjField;
        
        private string KeyParentOnkeyObjField;
        
        private string NameEntityObjField;
        
        private string NameParentEntityKeyField;
        
        private string NameParentOnPlaseStateField;
        
        private string ParentEntityKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GetNameObj {
            get {
                return this.GetNameObjField;
            }
            set {
                if ((object.ReferenceEquals(this.GetNameObjField, value) != true)) {
                    this.GetNameObjField = value;
                    this.RaisePropertyChanged("GetNameObj");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsDeleteCurrentPassport {
            get {
                return this.IsDeleteCurrentPassportField;
            }
            set {
                if ((this.IsDeleteCurrentPassportField.Equals(value) != true)) {
                    this.IsDeleteCurrentPassportField = value;
                    this.RaisePropertyChanged("IsDeleteCurrentPassport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsEditedCurrentPasport {
            get {
                return this.IsEditedCurrentPasportField;
            }
            set {
                if ((this.IsEditedCurrentPasportField.Equals(value) != true)) {
                    this.IsEditedCurrentPasportField = value;
                    this.RaisePropertyChanged("IsEditedCurrentPasport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyEntityObj {
            get {
                return this.KeyEntityObjField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyEntityObjField, value) != true)) {
                    this.KeyEntityObjField = value;
                    this.RaisePropertyChanged("KeyEntityObj");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyParentOnkeyObj {
            get {
                return this.KeyParentOnkeyObjField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyParentOnkeyObjField, value) != true)) {
                    this.KeyParentOnkeyObjField = value;
                    this.RaisePropertyChanged("KeyParentOnkeyObj");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameEntityObj {
            get {
                return this.NameEntityObjField;
            }
            set {
                if ((object.ReferenceEquals(this.NameEntityObjField, value) != true)) {
                    this.NameEntityObjField = value;
                    this.RaisePropertyChanged("NameEntityObj");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameParentEntityKey {
            get {
                return this.NameParentEntityKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.NameParentEntityKeyField, value) != true)) {
                    this.NameParentEntityKeyField = value;
                    this.RaisePropertyChanged("NameParentEntityKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameParentOnPlaseState {
            get {
                return this.NameParentOnPlaseStateField;
            }
            set {
                if ((object.ReferenceEquals(this.NameParentOnPlaseStateField, value) != true)) {
                    this.NameParentOnPlaseStateField = value;
                    this.RaisePropertyChanged("NameParentOnPlaseState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentEntityKey {
            get {
                return this.ParentEntityKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentEntityKeyField, value) != true)) {
                    this.ParentEntityKeyField = value;
                    this.RaisePropertyChanged("ParentEntityKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataMGList", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class DataMGList : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KEYMGField;
        
        private string NAMEMGField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KEYMG {
            get {
                return this.KEYMGField;
            }
            set {
                if ((object.ReferenceEquals(this.KEYMGField, value) != true)) {
                    this.KEYMGField = value;
                    this.RaisePropertyChanged("KEYMG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NAMEMG {
            get {
                return this.NAMEMGField;
            }
            set {
                if ((object.ReferenceEquals(this.NAMEMGField, value) != true)) {
                    this.NAMEMGField = value;
                    this.RaisePropertyChanged("NAMEMG");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataNitList", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class DataNitList : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KEYNITField;
        
        private string NAMENITField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KEYNIT {
            get {
                return this.KEYNITField;
            }
            set {
                if ((object.ReferenceEquals(this.KEYNITField, value) != true)) {
                    this.KEYNITField = value;
                    this.RaisePropertyChanged("KEYNIT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NAMENIT {
            get {
                return this.NAMENITField;
            }
            set {
                if ((object.ReferenceEquals(this.NAMENITField, value) != true)) {
                    this.NAMENITField = value;
                    this.RaisePropertyChanged("NAMENIT");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IServiceData")]
    public interface IServiceData {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/CreateRootOfTree", ReplyAction="http://tempuri.org/IServiceData/CreateRootOfTreeResponse")]
        System.IAsyncResult BeginCreateRootOfTree(string rootKey, string context, string visibleNode, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.PairAll EndCreateRootOfTree(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/GetNextNode", ReplyAction="http://tempuri.org/IServiceData/GetNextNodeResponse")]
        System.IAsyncResult BeginGetNextNode(string key, string nTreeKey, string context, string visibleNode, string keyPassport, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.PairAll EndGetNextNode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/MetaData", ReplyAction="http://tempuri.org/IServiceData/MetaDataResponse")]
        System.IAsyncResult BeginMetaData(string iKeyEntity, string iTypePassport, string context, string inObjKey, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.FieldMetaData EndMetaData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/GetPassport", ReplyAction="http://tempuri.org/IServiceData/GetPassportResponse")]
        System.IAsyncResult BeginGetPassport(string passportKey, int intypePassport, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.PassportData EndGetPassport(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/SavePassport", ReplyAction="http://tempuri.org/IServiceData/SavePassportResponse")]
        System.IAsyncResult BeginSavePassport(string passportKey, string iEntityKey, string iParentKey, Services.ServiceReference.PassportData passportData, string context, System.Collections.Generic.Dictionary<string, string> password, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.KeyParentOnSave EndSavePassport(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/CementNkt_OnkeyNKT", ReplyAction="http://tempuri.org/IServiceData/CementNkt_OnkeyNKTResponse")]
        System.IAsyncResult BeginCementNkt_OnkeyNKT(string passportKey, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.KeyCementNKT EndCementNkt_OnkeyNKT(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/BuCopyVisible", ReplyAction="http://tempuri.org/IServiceData/BuCopyVisibleResponse")]
        System.IAsyncResult BeginBuCopyVisible(string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.BuCopyTreeVisibleForm EndBuCopyVisible(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/DeleteObj", ReplyAction="http://tempuri.org/IServiceData/DeleteObjResponse")]
        System.IAsyncResult BeginDeleteObj(string passportkey, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.StatusAnswer EndDeleteObj(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/CopyPassport", ReplyAction="http://tempuri.org/IServiceData/CopyPassportResponse")]
        System.IAsyncResult BeginCopyPassport(string passportKey, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.KeyPassportOnCopy EndCopyPassport(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/UpdateParent", ReplyAction="http://tempuri.org/IServiceData/UpdateParentResponse")]
        System.IAsyncResult BeginUpdateParent(string passportKey, string parentKey, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.KeyParentOnUpdateTree EndUpdateParent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/UpdateParenttoChild", ReplyAction="http://tempuri.org/IServiceData/UpdateParenttoChildResponse")]
        System.IAsyncResult BeginUpdateParenttoChild(string passportKey, string parentKey, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.KeyparentofchildTree EndUpdateParenttoChild(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/ReturnKeyObjOnShema", ReplyAction="http://tempuri.org/IServiceData/ReturnKeyObjOnShemaResponse")]
        System.IAsyncResult BeginReturnKeyObjOnShema(string tsdiagram, string tsobject, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.KeyonShemaArcgis EndReturnKeyObjOnShema(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/ReturnVisibleObjOnKarta", ReplyAction="http://tempuri.org/IServiceData/ReturnVisibleObjOnKartaResponse")]
        System.IAsyncResult BeginReturnVisibleObjOnKarta(string passportKey, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.KeyonKartaObjList EndReturnVisibleObjOnKarta(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/ReturnAccessObj", ReplyAction="http://tempuri.org/IServiceData/ReturnAccessObjResponse")]
        System.IAsyncResult BeginReturnAccessObj(string passportKey, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.AccessLevelObjKey EndReturnAccessObj(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/ReturnVisibleNKTObj", ReplyAction="http://tempuri.org/IServiceData/ReturnVisibleNKTObjResponse")]
        System.IAsyncResult BeginReturnVisibleNKTObj(string passportKey, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.ButtonNKTObjKey EndReturnVisibleNKTObj(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/GetDataAllEntityObj", ReplyAction="http://tempuri.org/IServiceData/GetDataAllEntityObjResponse")]
        System.IAsyncResult BeginGetDataAllEntityObj(string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.DataEntityList_result EndGetDataAllEntityObj(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/GetXMLPassportToObjKey", ReplyAction="http://tempuri.org/IServiceData/GetXMLPassportToObjKeyResponse")]
        System.IAsyncResult BeginGetXMLPassportToObjKey(string objKey, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.PasportToXML EndGetXMLPassportToObjKey(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/GetButtonToolbar", ReplyAction="http://tempuri.org/IServiceData/GetButtonToolbarResponse")]
        System.IAsyncResult BeginGetButtonToolbar(string passportkey, string buttonTollBar, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.FielButtonData EndGetButtonToolbar(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/GetDisplayLabels", ReplyAction="http://tempuri.org/IServiceData/GetDisplayLabelsResponse")]
        System.IAsyncResult BeginGetDisplayLabels(string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.DisplayLabels EndGetDisplayLabels(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/ReturnTreeOnObjKey", ReplyAction="http://tempuri.org/IServiceData/ReturnTreeOnObjKeyResponse")]
        System.IAsyncResult BeginReturnTreeOnObjKey(string objKey, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.DataTreeViewOnObjkey EndReturnTreeOnObjKey(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/ReturnAllTreeOnObjKey", ReplyAction="http://tempuri.org/IServiceData/ReturnAllTreeOnObjKeyResponse")]
        System.IAsyncResult BeginReturnAllTreeOnObjKey(string objKey, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.DataTreeViewOnObjkey EndReturnAllTreeOnObjKey(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/GetTreeFullHierarchyPathToObject", ReplyAction="http://tempuri.org/IServiceData/GetTreeFullHierarchyPathToObjectResponse")]
        System.IAsyncResult BeginGetTreeFullHierarchyPathToObject(string objKey, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.TreeFullHierarchyPathToObject EndGetTreeFullHierarchyPathToObject(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/GetDataHistoryObj", ReplyAction="http://tempuri.org/IServiceData/GetDataHistoryObjResponse")]
        System.IAsyncResult BeginGetDataHistoryObj(string inObjKey, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.DataListHistoryObj EndGetDataHistoryObj(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/GetCalcPrivJson", ReplyAction="http://tempuri.org/IServiceData/GetCalcPrivJsonResponse")]
        System.IAsyncResult BeginGetCalcPrivJson(string inObjKey, string strJason, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.CalcPrivJson EndGetCalcPrivJson(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/GetAllPriv", ReplyAction="http://tempuri.org/IServiceData/GetAllPrivResponse")]
        System.IAsyncResult BeginGetAllPriv(string inObjKey, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.AllPriv EndGetAllPriv(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/DeleteLinkToPipeByKey", ReplyAction="http://tempuri.org/IServiceData/DeleteLinkToPipeByKeyResponse")]
        System.IAsyncResult BeginDeleteLinkToPipeByKey(string p_nkey, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.StatusAnswer EndDeleteLinkToPipeByKey(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/SetHashPassword", ReplyAction="http://tempuri.org/IServiceData/SetHashPasswordResponse")]
        System.IAsyncResult BeginSetHashPassword(string in_cpass, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.HashPassword EndSetHashPassword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/InsertMediaFile", ReplyAction="http://tempuri.org/IServiceData/InsertMediaFileResponse")]
        System.IAsyncResult BeginInsertMediaFile(string mediaFileName, string mediaFileName_small, string comment, string passportKey, string fileName, string typeMedia, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.StatusAnswer EndInsertMediaFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/DeleteMediaOnObj", ReplyAction="http://tempuri.org/IServiceData/DeleteMediaOnObjResponse")]
        System.IAsyncResult BeginDeleteMediaOnObj(string passportkey, string mediaKey, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.StatusAnswer EndDeleteMediaOnObj(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/GetMediaAttribute", ReplyAction="http://tempuri.org/IServiceData/GetMediaAttributeResponse")]
        System.IAsyncResult BeginGetMediaAttribute(string passpoerKey, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.DataMediaAttribute_result EndGetMediaAttribute(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/DictValueData", ReplyAction="http://tempuri.org/IServiceData/DictValueDataResponse")]
        System.IAsyncResult BeginDictValueData(string iKeyEntity, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.DictDataOnEntityKey EndDictValueData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/DictDataFiltr", ReplyAction="http://tempuri.org/IServiceData/DictDataFiltrResponse")]
        System.IAsyncResult BeginDictDataFiltr(string context, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DictDataFiltr> EndDictDataFiltr(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/GetNameNsiOnKeyNSI", ReplyAction="http://tempuri.org/IServiceData/GetNameNsiOnKeyNSIResponse")]
        System.IAsyncResult BeginGetNameNsiOnKeyNSI(string inKeyNSI, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.nameNSIOnKey EndGetNameNsiOnKeyNSI(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/SaveNsi", ReplyAction="http://tempuri.org/IServiceData/SaveNsiResponse")]
        System.IAsyncResult BeginSaveNsi(string i_nKeyNsiValue, string i_cNsiValue, string i_nKeyNsi, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.ListNsiOnSave EndSaveNsi(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/OneDictValueData", ReplyAction="http://tempuri.org/IServiceData/OneDictValueDataResponse")]
        System.IAsyncResult BeginOneDictValueData(string iKeyDict, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.DictDataOne EndOneDictValueData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/AttrControl", ReplyAction="http://tempuri.org/IServiceData/AttrControlResponse")]
        System.IAsyncResult BeginAttrControl(string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.ControlAttribute EndAttrControl(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/AttrOneControl", ReplyAction="http://tempuri.org/IServiceData/AttrOneControlResponse")]
        System.IAsyncResult BeginAttrOneControl(string iTypeControl, string context, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.AttributOneControl> EndAttrOneControl(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/GetGridData", ReplyAction="http://tempuri.org/IServiceData/GetGridDataResponse")]
        System.IAsyncResult BeginGetGridData(string ipassportKey, string inObjKey, string iTypePassport, string inParentKey, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.GridData EndGetGridData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/GetThumbnailList", ReplyAction="http://tempuri.org/IServiceData/GetThumbnailListResponse")]
        System.IAsyncResult BeginGetThumbnailList(string passportKey, int mediaType, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.ThumbnailList EndGetThumbnailList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/GetMediaFile", ReplyAction="http://tempuri.org/IServiceData/GetMediaFileResponse")]
        System.IAsyncResult BeginGetMediaFile(string mediaKey, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.ThumbnailListBigMedia EndGetMediaFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/GetDataLink", ReplyAction="http://tempuri.org/IServiceData/GetDataLinkResponse")]
        System.IAsyncResult BeginGetDataLink(string entityKey, string context, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataLinkList> EndGetDataLink(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/GetDataConnect", ReplyAction="http://tempuri.org/IServiceData/GetDataConnectResponse")]
        System.IAsyncResult BeginGetDataConnect(string entityKey, string fldName, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.DataConnectList_result EndGetDataConnect(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/GetDataRelationObj", ReplyAction="http://tempuri.org/IServiceData/GetDataRelationObjResponse")]
        System.IAsyncResult BeginGetDataRelationObj(string inObjKey, string keyFld, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.DataListRelationObj EndGetDataRelationObj(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/GetListLinkedObjects", ReplyAction="http://tempuri.org/IServiceData/GetListLinkedObjectsResponse")]
        System.IAsyncResult BeginGetListLinkedObjects(string objectkey, string entitykey, string fieldname, string linkedentitykey, string linkedobjects, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.DataListLinkedObjects EndGetListLinkedObjects(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/SaveRelationObj", ReplyAction="http://tempuri.org/IServiceData/SaveRelationObjResponse")]
        System.IAsyncResult BeginSaveRelationObj(string inObjkey, string keyFld, string keyRelation, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.KeyRelationOnSave EndSaveRelationObj(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/DelRelationObj", ReplyAction="http://tempuri.org/IServiceData/DelRelationObjResponse")]
        System.IAsyncResult BeginDelRelationObj(string inObjkey, string keyFld, string keyRelation, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.KeyRelationOnDel EndDelRelationObj(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/GetCheckLink", ReplyAction="http://tempuri.org/IServiceData/GetCheckLinkResponse")]
        System.IAsyncResult BeginGetCheckLink(string EntityKey, string ObjParentKey, string LinkType, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.GetCheckOrganizationLink_result EndGetCheckLink(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/GetDataChild", ReplyAction="http://tempuri.org/IServiceData/GetDataChildResponse")]
        System.IAsyncResult BeginGetDataChild(string entityKey, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.DataChildList_result EndGetDataChild(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/GetCountChild", ReplyAction="http://tempuri.org/IServiceData/GetCountChildResponse")]
        System.IAsyncResult BeginGetCountChild(string entityKey, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.CountChild_result EndGetCountChild(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/GetNameObj", ReplyAction="http://tempuri.org/IServiceData/GetNameObjResponse")]
        System.IAsyncResult BeginGetNameObj(string entityKey, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.NameObj_result EndGetNameObj(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/GetPassportInfo", ReplyAction="http://tempuri.org/IServiceData/GetPassportInfoResponse")]
        System.IAsyncResult BeginGetPassportInfo(string inObjKey, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.PassportInfo_result EndGetPassportInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/GetDataMGList", ReplyAction="http://tempuri.org/IServiceData/GetDataMGListResponse")]
        System.IAsyncResult BeginGetDataMGList(string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.DataMGList_result EndGetDataMGList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceData/GetDataNitList", ReplyAction="http://tempuri.org/IServiceData/GetDataNitListResponse")]
        System.IAsyncResult BeginGetDataNitList(string inKeyMg, string context, System.AsyncCallback callback, object asyncState);
        
        Services.ServiceReference.DataNitList_result EndGetDataNitList(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceDataChannel : Services.ServiceReference.IServiceData, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateRootOfTreeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateRootOfTreeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.PairAll Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.PairAll)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNextNodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNextNodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.PairAll Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.PairAll)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MetaDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MetaDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.FieldMetaData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.FieldMetaData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPassportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPassportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.PassportData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.PassportData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SavePassportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SavePassportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.KeyParentOnSave Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.KeyParentOnSave)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CementNkt_OnkeyNKTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CementNkt_OnkeyNKTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.KeyCementNKT Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.KeyCementNKT)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BuCopyVisibleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BuCopyVisibleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.BuCopyTreeVisibleForm Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.BuCopyTreeVisibleForm)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteObjCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteObjCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.StatusAnswer Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.StatusAnswer)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CopyPassportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CopyPassportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.KeyPassportOnCopy Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.KeyPassportOnCopy)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateParentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateParentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.KeyParentOnUpdateTree Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.KeyParentOnUpdateTree)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateParenttoChildCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateParenttoChildCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.KeyparentofchildTree Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.KeyparentofchildTree)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReturnKeyObjOnShemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReturnKeyObjOnShemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.KeyonShemaArcgis Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.KeyonShemaArcgis)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReturnVisibleObjOnKartaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReturnVisibleObjOnKartaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.KeyonKartaObjList Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.KeyonKartaObjList)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReturnAccessObjCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReturnAccessObjCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.AccessLevelObjKey Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.AccessLevelObjKey)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReturnVisibleNKTObjCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReturnVisibleNKTObjCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.ButtonNKTObjKey Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.ButtonNKTObjKey)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataAllEntityObjCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataAllEntityObjCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.DataEntityList_result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.DataEntityList_result)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetXMLPassportToObjKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetXMLPassportToObjKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.PasportToXML Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.PasportToXML)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetButtonToolbarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetButtonToolbarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.FielButtonData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.FielButtonData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDisplayLabelsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDisplayLabelsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.DisplayLabels Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.DisplayLabels)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReturnTreeOnObjKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReturnTreeOnObjKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.DataTreeViewOnObjkey Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.DataTreeViewOnObjkey)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReturnAllTreeOnObjKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReturnAllTreeOnObjKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.DataTreeViewOnObjkey Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.DataTreeViewOnObjkey)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTreeFullHierarchyPathToObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTreeFullHierarchyPathToObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.TreeFullHierarchyPathToObject Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.TreeFullHierarchyPathToObject)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataHistoryObjCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataHistoryObjCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.DataListHistoryObj Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.DataListHistoryObj)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCalcPrivJsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCalcPrivJsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.CalcPrivJson Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.CalcPrivJson)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllPrivCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllPrivCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.AllPriv Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.AllPriv)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteLinkToPipeByKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteLinkToPipeByKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.StatusAnswer Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.StatusAnswer)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetHashPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetHashPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.HashPassword Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.HashPassword)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertMediaFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertMediaFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.StatusAnswer Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.StatusAnswer)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteMediaOnObjCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteMediaOnObjCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.StatusAnswer Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.StatusAnswer)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMediaAttributeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMediaAttributeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.DataMediaAttribute_result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.DataMediaAttribute_result)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DictValueDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DictValueDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.DictDataOnEntityKey Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.DictDataOnEntityKey)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DictDataFiltrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DictDataFiltrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DictDataFiltr> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DictDataFiltr>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNameNsiOnKeyNSICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNameNsiOnKeyNSICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.nameNSIOnKey Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.nameNSIOnKey)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveNsiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveNsiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.ListNsiOnSave Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.ListNsiOnSave)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OneDictValueDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OneDictValueDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.DictDataOne Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.DictDataOne)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AttrControlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AttrControlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.ControlAttribute Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.ControlAttribute)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AttrOneControlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AttrOneControlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.AttributOneControl> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.AttributOneControl>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGridDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGridDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.GridData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.GridData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetThumbnailListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetThumbnailListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.ThumbnailList Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.ThumbnailList)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMediaFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMediaFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.ThumbnailListBigMedia Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.ThumbnailListBigMedia)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataLinkList> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataLinkList>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataConnectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataConnectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.DataConnectList_result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.DataConnectList_result)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataRelationObjCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataRelationObjCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.DataListRelationObj Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.DataListRelationObj)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListLinkedObjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListLinkedObjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.DataListLinkedObjects Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.DataListLinkedObjects)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveRelationObjCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveRelationObjCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.KeyRelationOnSave Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.KeyRelationOnSave)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DelRelationObjCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DelRelationObjCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.KeyRelationOnDel Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.KeyRelationOnDel)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCheckLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCheckLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.GetCheckOrganizationLink_result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.GetCheckOrganizationLink_result)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataChildCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataChildCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.DataChildList_result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.DataChildList_result)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCountChildCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCountChildCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.CountChild_result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.CountChild_result)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNameObjCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNameObjCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.NameObj_result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.NameObj_result)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPassportInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPassportInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.PassportInfo_result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.PassportInfo_result)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataMGListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataMGListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.DataMGList_result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.DataMGList_result)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataNitListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataNitListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Services.ServiceReference.DataNitList_result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Services.ServiceReference.DataNitList_result)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceDataClient : System.ServiceModel.ClientBase<Services.ServiceReference.IServiceData>, Services.ServiceReference.IServiceData {
        
        private BeginOperationDelegate onBeginCreateRootOfTreeDelegate;
        
        private EndOperationDelegate onEndCreateRootOfTreeDelegate;
        
        private System.Threading.SendOrPostCallback onCreateRootOfTreeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNextNodeDelegate;
        
        private EndOperationDelegate onEndGetNextNodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetNextNodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginMetaDataDelegate;
        
        private EndOperationDelegate onEndMetaDataDelegate;
        
        private System.Threading.SendOrPostCallback onMetaDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPassportDelegate;
        
        private EndOperationDelegate onEndGetPassportDelegate;
        
        private System.Threading.SendOrPostCallback onGetPassportCompletedDelegate;
        
        private BeginOperationDelegate onBeginSavePassportDelegate;
        
        private EndOperationDelegate onEndSavePassportDelegate;
        
        private System.Threading.SendOrPostCallback onSavePassportCompletedDelegate;
        
        private BeginOperationDelegate onBeginCementNkt_OnkeyNKTDelegate;
        
        private EndOperationDelegate onEndCementNkt_OnkeyNKTDelegate;
        
        private System.Threading.SendOrPostCallback onCementNkt_OnkeyNKTCompletedDelegate;
        
        private BeginOperationDelegate onBeginBuCopyVisibleDelegate;
        
        private EndOperationDelegate onEndBuCopyVisibleDelegate;
        
        private System.Threading.SendOrPostCallback onBuCopyVisibleCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteObjDelegate;
        
        private EndOperationDelegate onEndDeleteObjDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteObjCompletedDelegate;
        
        private BeginOperationDelegate onBeginCopyPassportDelegate;
        
        private EndOperationDelegate onEndCopyPassportDelegate;
        
        private System.Threading.SendOrPostCallback onCopyPassportCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateParentDelegate;
        
        private EndOperationDelegate onEndUpdateParentDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateParentCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateParenttoChildDelegate;
        
        private EndOperationDelegate onEndUpdateParenttoChildDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateParenttoChildCompletedDelegate;
        
        private BeginOperationDelegate onBeginReturnKeyObjOnShemaDelegate;
        
        private EndOperationDelegate onEndReturnKeyObjOnShemaDelegate;
        
        private System.Threading.SendOrPostCallback onReturnKeyObjOnShemaCompletedDelegate;
        
        private BeginOperationDelegate onBeginReturnVisibleObjOnKartaDelegate;
        
        private EndOperationDelegate onEndReturnVisibleObjOnKartaDelegate;
        
        private System.Threading.SendOrPostCallback onReturnVisibleObjOnKartaCompletedDelegate;
        
        private BeginOperationDelegate onBeginReturnAccessObjDelegate;
        
        private EndOperationDelegate onEndReturnAccessObjDelegate;
        
        private System.Threading.SendOrPostCallback onReturnAccessObjCompletedDelegate;
        
        private BeginOperationDelegate onBeginReturnVisibleNKTObjDelegate;
        
        private EndOperationDelegate onEndReturnVisibleNKTObjDelegate;
        
        private System.Threading.SendOrPostCallback onReturnVisibleNKTObjCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDataAllEntityObjDelegate;
        
        private EndOperationDelegate onEndGetDataAllEntityObjDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataAllEntityObjCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetXMLPassportToObjKeyDelegate;
        
        private EndOperationDelegate onEndGetXMLPassportToObjKeyDelegate;
        
        private System.Threading.SendOrPostCallback onGetXMLPassportToObjKeyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetButtonToolbarDelegate;
        
        private EndOperationDelegate onEndGetButtonToolbarDelegate;
        
        private System.Threading.SendOrPostCallback onGetButtonToolbarCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDisplayLabelsDelegate;
        
        private EndOperationDelegate onEndGetDisplayLabelsDelegate;
        
        private System.Threading.SendOrPostCallback onGetDisplayLabelsCompletedDelegate;
        
        private BeginOperationDelegate onBeginReturnTreeOnObjKeyDelegate;
        
        private EndOperationDelegate onEndReturnTreeOnObjKeyDelegate;
        
        private System.Threading.SendOrPostCallback onReturnTreeOnObjKeyCompletedDelegate;
        
        private BeginOperationDelegate onBeginReturnAllTreeOnObjKeyDelegate;
        
        private EndOperationDelegate onEndReturnAllTreeOnObjKeyDelegate;
        
        private System.Threading.SendOrPostCallback onReturnAllTreeOnObjKeyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTreeFullHierarchyPathToObjectDelegate;
        
        private EndOperationDelegate onEndGetTreeFullHierarchyPathToObjectDelegate;
        
        private System.Threading.SendOrPostCallback onGetTreeFullHierarchyPathToObjectCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDataHistoryObjDelegate;
        
        private EndOperationDelegate onEndGetDataHistoryObjDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataHistoryObjCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCalcPrivJsonDelegate;
        
        private EndOperationDelegate onEndGetCalcPrivJsonDelegate;
        
        private System.Threading.SendOrPostCallback onGetCalcPrivJsonCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllPrivDelegate;
        
        private EndOperationDelegate onEndGetAllPrivDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllPrivCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteLinkToPipeByKeyDelegate;
        
        private EndOperationDelegate onEndDeleteLinkToPipeByKeyDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteLinkToPipeByKeyCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetHashPasswordDelegate;
        
        private EndOperationDelegate onEndSetHashPasswordDelegate;
        
        private System.Threading.SendOrPostCallback onSetHashPasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertMediaFileDelegate;
        
        private EndOperationDelegate onEndInsertMediaFileDelegate;
        
        private System.Threading.SendOrPostCallback onInsertMediaFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteMediaOnObjDelegate;
        
        private EndOperationDelegate onEndDeleteMediaOnObjDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteMediaOnObjCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMediaAttributeDelegate;
        
        private EndOperationDelegate onEndGetMediaAttributeDelegate;
        
        private System.Threading.SendOrPostCallback onGetMediaAttributeCompletedDelegate;
        
        private BeginOperationDelegate onBeginDictValueDataDelegate;
        
        private EndOperationDelegate onEndDictValueDataDelegate;
        
        private System.Threading.SendOrPostCallback onDictValueDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginDictDataFiltrDelegate;
        
        private EndOperationDelegate onEndDictDataFiltrDelegate;
        
        private System.Threading.SendOrPostCallback onDictDataFiltrCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNameNsiOnKeyNSIDelegate;
        
        private EndOperationDelegate onEndGetNameNsiOnKeyNSIDelegate;
        
        private System.Threading.SendOrPostCallback onGetNameNsiOnKeyNSICompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveNsiDelegate;
        
        private EndOperationDelegate onEndSaveNsiDelegate;
        
        private System.Threading.SendOrPostCallback onSaveNsiCompletedDelegate;
        
        private BeginOperationDelegate onBeginOneDictValueDataDelegate;
        
        private EndOperationDelegate onEndOneDictValueDataDelegate;
        
        private System.Threading.SendOrPostCallback onOneDictValueDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginAttrControlDelegate;
        
        private EndOperationDelegate onEndAttrControlDelegate;
        
        private System.Threading.SendOrPostCallback onAttrControlCompletedDelegate;
        
        private BeginOperationDelegate onBeginAttrOneControlDelegate;
        
        private EndOperationDelegate onEndAttrOneControlDelegate;
        
        private System.Threading.SendOrPostCallback onAttrOneControlCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGridDataDelegate;
        
        private EndOperationDelegate onEndGetGridDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetGridDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetThumbnailListDelegate;
        
        private EndOperationDelegate onEndGetThumbnailListDelegate;
        
        private System.Threading.SendOrPostCallback onGetThumbnailListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMediaFileDelegate;
        
        private EndOperationDelegate onEndGetMediaFileDelegate;
        
        private System.Threading.SendOrPostCallback onGetMediaFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDataLinkDelegate;
        
        private EndOperationDelegate onEndGetDataLinkDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataLinkCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDataConnectDelegate;
        
        private EndOperationDelegate onEndGetDataConnectDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataConnectCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDataRelationObjDelegate;
        
        private EndOperationDelegate onEndGetDataRelationObjDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataRelationObjCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListLinkedObjectsDelegate;
        
        private EndOperationDelegate onEndGetListLinkedObjectsDelegate;
        
        private System.Threading.SendOrPostCallback onGetListLinkedObjectsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveRelationObjDelegate;
        
        private EndOperationDelegate onEndSaveRelationObjDelegate;
        
        private System.Threading.SendOrPostCallback onSaveRelationObjCompletedDelegate;
        
        private BeginOperationDelegate onBeginDelRelationObjDelegate;
        
        private EndOperationDelegate onEndDelRelationObjDelegate;
        
        private System.Threading.SendOrPostCallback onDelRelationObjCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCheckLinkDelegate;
        
        private EndOperationDelegate onEndGetCheckLinkDelegate;
        
        private System.Threading.SendOrPostCallback onGetCheckLinkCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDataChildDelegate;
        
        private EndOperationDelegate onEndGetDataChildDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataChildCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCountChildDelegate;
        
        private EndOperationDelegate onEndGetCountChildDelegate;
        
        private System.Threading.SendOrPostCallback onGetCountChildCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNameObjDelegate;
        
        private EndOperationDelegate onEndGetNameObjDelegate;
        
        private System.Threading.SendOrPostCallback onGetNameObjCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPassportInfoDelegate;
        
        private EndOperationDelegate onEndGetPassportInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetPassportInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDataMGListDelegate;
        
        private EndOperationDelegate onEndGetDataMGListDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataMGListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDataNitListDelegate;
        
        private EndOperationDelegate onEndGetDataNitListDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataNitListCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ServiceDataClient() {
        }
        
        public ServiceDataClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceDataClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceDataClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceDataClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<CreateRootOfTreeCompletedEventArgs> CreateRootOfTreeCompleted;
        
        public event System.EventHandler<GetNextNodeCompletedEventArgs> GetNextNodeCompleted;
        
        public event System.EventHandler<MetaDataCompletedEventArgs> MetaDataCompleted;
        
        public event System.EventHandler<GetPassportCompletedEventArgs> GetPassportCompleted;
        
        public event System.EventHandler<SavePassportCompletedEventArgs> SavePassportCompleted;
        
        public event System.EventHandler<CementNkt_OnkeyNKTCompletedEventArgs> CementNkt_OnkeyNKTCompleted;
        
        public event System.EventHandler<BuCopyVisibleCompletedEventArgs> BuCopyVisibleCompleted;
        
        public event System.EventHandler<DeleteObjCompletedEventArgs> DeleteObjCompleted;
        
        public event System.EventHandler<CopyPassportCompletedEventArgs> CopyPassportCompleted;
        
        public event System.EventHandler<UpdateParentCompletedEventArgs> UpdateParentCompleted;
        
        public event System.EventHandler<UpdateParenttoChildCompletedEventArgs> UpdateParenttoChildCompleted;
        
        public event System.EventHandler<ReturnKeyObjOnShemaCompletedEventArgs> ReturnKeyObjOnShemaCompleted;
        
        public event System.EventHandler<ReturnVisibleObjOnKartaCompletedEventArgs> ReturnVisibleObjOnKartaCompleted;
        
        public event System.EventHandler<ReturnAccessObjCompletedEventArgs> ReturnAccessObjCompleted;
        
        public event System.EventHandler<ReturnVisibleNKTObjCompletedEventArgs> ReturnVisibleNKTObjCompleted;
        
        public event System.EventHandler<GetDataAllEntityObjCompletedEventArgs> GetDataAllEntityObjCompleted;
        
        public event System.EventHandler<GetXMLPassportToObjKeyCompletedEventArgs> GetXMLPassportToObjKeyCompleted;
        
        public event System.EventHandler<GetButtonToolbarCompletedEventArgs> GetButtonToolbarCompleted;
        
        public event System.EventHandler<GetDisplayLabelsCompletedEventArgs> GetDisplayLabelsCompleted;
        
        public event System.EventHandler<ReturnTreeOnObjKeyCompletedEventArgs> ReturnTreeOnObjKeyCompleted;
        
        public event System.EventHandler<ReturnAllTreeOnObjKeyCompletedEventArgs> ReturnAllTreeOnObjKeyCompleted;
        
        public event System.EventHandler<GetTreeFullHierarchyPathToObjectCompletedEventArgs> GetTreeFullHierarchyPathToObjectCompleted;
        
        public event System.EventHandler<GetDataHistoryObjCompletedEventArgs> GetDataHistoryObjCompleted;
        
        public event System.EventHandler<GetCalcPrivJsonCompletedEventArgs> GetCalcPrivJsonCompleted;
        
        public event System.EventHandler<GetAllPrivCompletedEventArgs> GetAllPrivCompleted;
        
        public event System.EventHandler<DeleteLinkToPipeByKeyCompletedEventArgs> DeleteLinkToPipeByKeyCompleted;
        
        public event System.EventHandler<SetHashPasswordCompletedEventArgs> SetHashPasswordCompleted;
        
        public event System.EventHandler<InsertMediaFileCompletedEventArgs> InsertMediaFileCompleted;
        
        public event System.EventHandler<DeleteMediaOnObjCompletedEventArgs> DeleteMediaOnObjCompleted;
        
        public event System.EventHandler<GetMediaAttributeCompletedEventArgs> GetMediaAttributeCompleted;
        
        public event System.EventHandler<DictValueDataCompletedEventArgs> DictValueDataCompleted;
        
        public event System.EventHandler<DictDataFiltrCompletedEventArgs> DictDataFiltrCompleted;
        
        public event System.EventHandler<GetNameNsiOnKeyNSICompletedEventArgs> GetNameNsiOnKeyNSICompleted;
        
        public event System.EventHandler<SaveNsiCompletedEventArgs> SaveNsiCompleted;
        
        public event System.EventHandler<OneDictValueDataCompletedEventArgs> OneDictValueDataCompleted;
        
        public event System.EventHandler<AttrControlCompletedEventArgs> AttrControlCompleted;
        
        public event System.EventHandler<AttrOneControlCompletedEventArgs> AttrOneControlCompleted;
        
        public event System.EventHandler<GetGridDataCompletedEventArgs> GetGridDataCompleted;
        
        public event System.EventHandler<GetThumbnailListCompletedEventArgs> GetThumbnailListCompleted;
        
        public event System.EventHandler<GetMediaFileCompletedEventArgs> GetMediaFileCompleted;
        
        public event System.EventHandler<GetDataLinkCompletedEventArgs> GetDataLinkCompleted;
        
        public event System.EventHandler<GetDataConnectCompletedEventArgs> GetDataConnectCompleted;
        
        public event System.EventHandler<GetDataRelationObjCompletedEventArgs> GetDataRelationObjCompleted;
        
        public event System.EventHandler<GetListLinkedObjectsCompletedEventArgs> GetListLinkedObjectsCompleted;
        
        public event System.EventHandler<SaveRelationObjCompletedEventArgs> SaveRelationObjCompleted;
        
        public event System.EventHandler<DelRelationObjCompletedEventArgs> DelRelationObjCompleted;
        
        public event System.EventHandler<GetCheckLinkCompletedEventArgs> GetCheckLinkCompleted;
        
        public event System.EventHandler<GetDataChildCompletedEventArgs> GetDataChildCompleted;
        
        public event System.EventHandler<GetCountChildCompletedEventArgs> GetCountChildCompleted;
        
        public event System.EventHandler<GetNameObjCompletedEventArgs> GetNameObjCompleted;
        
        public event System.EventHandler<GetPassportInfoCompletedEventArgs> GetPassportInfoCompleted;
        
        public event System.EventHandler<GetDataMGListCompletedEventArgs> GetDataMGListCompleted;
        
        public event System.EventHandler<GetDataNitListCompletedEventArgs> GetDataNitListCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginCreateRootOfTree(string rootKey, string context, string visibleNode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateRootOfTree(rootKey, context, visibleNode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.PairAll Services.ServiceReference.IServiceData.EndCreateRootOfTree(System.IAsyncResult result) {
            return base.Channel.EndCreateRootOfTree(result);
        }
        
        private System.IAsyncResult OnBeginCreateRootOfTree(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string rootKey = ((string)(inValues[0]));
            string context = ((string)(inValues[1]));
            string visibleNode = ((string)(inValues[2]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginCreateRootOfTree(rootKey, context, visibleNode, callback, asyncState);
        }
        
        private object[] OnEndCreateRootOfTree(System.IAsyncResult result) {
            Services.ServiceReference.PairAll retVal = ((Services.ServiceReference.IServiceData)(this)).EndCreateRootOfTree(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateRootOfTreeCompleted(object state) {
            if ((this.CreateRootOfTreeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateRootOfTreeCompleted(this, new CreateRootOfTreeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateRootOfTreeAsync(string rootKey, string context, string visibleNode) {
            this.CreateRootOfTreeAsync(rootKey, context, visibleNode, null);
        }
        
        public void CreateRootOfTreeAsync(string rootKey, string context, string visibleNode, object userState) {
            if ((this.onBeginCreateRootOfTreeDelegate == null)) {
                this.onBeginCreateRootOfTreeDelegate = new BeginOperationDelegate(this.OnBeginCreateRootOfTree);
            }
            if ((this.onEndCreateRootOfTreeDelegate == null)) {
                this.onEndCreateRootOfTreeDelegate = new EndOperationDelegate(this.OnEndCreateRootOfTree);
            }
            if ((this.onCreateRootOfTreeCompletedDelegate == null)) {
                this.onCreateRootOfTreeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateRootOfTreeCompleted);
            }
            base.InvokeAsync(this.onBeginCreateRootOfTreeDelegate, new object[] {
                        rootKey,
                        context,
                        visibleNode}, this.onEndCreateRootOfTreeDelegate, this.onCreateRootOfTreeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginGetNextNode(string key, string nTreeKey, string context, string visibleNode, string keyPassport, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNextNode(key, nTreeKey, context, visibleNode, keyPassport, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.PairAll Services.ServiceReference.IServiceData.EndGetNextNode(System.IAsyncResult result) {
            return base.Channel.EndGetNextNode(result);
        }
        
        private System.IAsyncResult OnBeginGetNextNode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string key = ((string)(inValues[0]));
            string nTreeKey = ((string)(inValues[1]));
            string context = ((string)(inValues[2]));
            string visibleNode = ((string)(inValues[3]));
            string keyPassport = ((string)(inValues[4]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginGetNextNode(key, nTreeKey, context, visibleNode, keyPassport, callback, asyncState);
        }
        
        private object[] OnEndGetNextNode(System.IAsyncResult result) {
            Services.ServiceReference.PairAll retVal = ((Services.ServiceReference.IServiceData)(this)).EndGetNextNode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNextNodeCompleted(object state) {
            if ((this.GetNextNodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNextNodeCompleted(this, new GetNextNodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNextNodeAsync(string key, string nTreeKey, string context, string visibleNode, string keyPassport) {
            this.GetNextNodeAsync(key, nTreeKey, context, visibleNode, keyPassport, null);
        }
        
        public void GetNextNodeAsync(string key, string nTreeKey, string context, string visibleNode, string keyPassport, object userState) {
            if ((this.onBeginGetNextNodeDelegate == null)) {
                this.onBeginGetNextNodeDelegate = new BeginOperationDelegate(this.OnBeginGetNextNode);
            }
            if ((this.onEndGetNextNodeDelegate == null)) {
                this.onEndGetNextNodeDelegate = new EndOperationDelegate(this.OnEndGetNextNode);
            }
            if ((this.onGetNextNodeCompletedDelegate == null)) {
                this.onGetNextNodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNextNodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetNextNodeDelegate, new object[] {
                        key,
                        nTreeKey,
                        context,
                        visibleNode,
                        keyPassport}, this.onEndGetNextNodeDelegate, this.onGetNextNodeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginMetaData(string iKeyEntity, string iTypePassport, string context, string inObjKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMetaData(iKeyEntity, iTypePassport, context, inObjKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.FieldMetaData Services.ServiceReference.IServiceData.EndMetaData(System.IAsyncResult result) {
            return base.Channel.EndMetaData(result);
        }
        
        private System.IAsyncResult OnBeginMetaData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string iKeyEntity = ((string)(inValues[0]));
            string iTypePassport = ((string)(inValues[1]));
            string context = ((string)(inValues[2]));
            string inObjKey = ((string)(inValues[3]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginMetaData(iKeyEntity, iTypePassport, context, inObjKey, callback, asyncState);
        }
        
        private object[] OnEndMetaData(System.IAsyncResult result) {
            Services.ServiceReference.FieldMetaData retVal = ((Services.ServiceReference.IServiceData)(this)).EndMetaData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMetaDataCompleted(object state) {
            if ((this.MetaDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MetaDataCompleted(this, new MetaDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MetaDataAsync(string iKeyEntity, string iTypePassport, string context, string inObjKey) {
            this.MetaDataAsync(iKeyEntity, iTypePassport, context, inObjKey, null);
        }
        
        public void MetaDataAsync(string iKeyEntity, string iTypePassport, string context, string inObjKey, object userState) {
            if ((this.onBeginMetaDataDelegate == null)) {
                this.onBeginMetaDataDelegate = new BeginOperationDelegate(this.OnBeginMetaData);
            }
            if ((this.onEndMetaDataDelegate == null)) {
                this.onEndMetaDataDelegate = new EndOperationDelegate(this.OnEndMetaData);
            }
            if ((this.onMetaDataCompletedDelegate == null)) {
                this.onMetaDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMetaDataCompleted);
            }
            base.InvokeAsync(this.onBeginMetaDataDelegate, new object[] {
                        iKeyEntity,
                        iTypePassport,
                        context,
                        inObjKey}, this.onEndMetaDataDelegate, this.onMetaDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginGetPassport(string passportKey, int intypePassport, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPassport(passportKey, intypePassport, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.PassportData Services.ServiceReference.IServiceData.EndGetPassport(System.IAsyncResult result) {
            return base.Channel.EndGetPassport(result);
        }
        
        private System.IAsyncResult OnBeginGetPassport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string passportKey = ((string)(inValues[0]));
            int intypePassport = ((int)(inValues[1]));
            string context = ((string)(inValues[2]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginGetPassport(passportKey, intypePassport, context, callback, asyncState);
        }
        
        private object[] OnEndGetPassport(System.IAsyncResult result) {
            Services.ServiceReference.PassportData retVal = ((Services.ServiceReference.IServiceData)(this)).EndGetPassport(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPassportCompleted(object state) {
            if ((this.GetPassportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPassportCompleted(this, new GetPassportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPassportAsync(string passportKey, int intypePassport, string context) {
            this.GetPassportAsync(passportKey, intypePassport, context, null);
        }
        
        public void GetPassportAsync(string passportKey, int intypePassport, string context, object userState) {
            if ((this.onBeginGetPassportDelegate == null)) {
                this.onBeginGetPassportDelegate = new BeginOperationDelegate(this.OnBeginGetPassport);
            }
            if ((this.onEndGetPassportDelegate == null)) {
                this.onEndGetPassportDelegate = new EndOperationDelegate(this.OnEndGetPassport);
            }
            if ((this.onGetPassportCompletedDelegate == null)) {
                this.onGetPassportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPassportCompleted);
            }
            base.InvokeAsync(this.onBeginGetPassportDelegate, new object[] {
                        passportKey,
                        intypePassport,
                        context}, this.onEndGetPassportDelegate, this.onGetPassportCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginSavePassport(string passportKey, string iEntityKey, string iParentKey, Services.ServiceReference.PassportData passportData, string context, System.Collections.Generic.Dictionary<string, string> password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSavePassport(passportKey, iEntityKey, iParentKey, passportData, context, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.KeyParentOnSave Services.ServiceReference.IServiceData.EndSavePassport(System.IAsyncResult result) {
            return base.Channel.EndSavePassport(result);
        }
        
        private System.IAsyncResult OnBeginSavePassport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string passportKey = ((string)(inValues[0]));
            string iEntityKey = ((string)(inValues[1]));
            string iParentKey = ((string)(inValues[2]));
            Services.ServiceReference.PassportData passportData = ((Services.ServiceReference.PassportData)(inValues[3]));
            string context = ((string)(inValues[4]));
            System.Collections.Generic.Dictionary<string, string> password = ((System.Collections.Generic.Dictionary<string, string>)(inValues[5]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginSavePassport(passportKey, iEntityKey, iParentKey, passportData, context, password, callback, asyncState);
        }
        
        private object[] OnEndSavePassport(System.IAsyncResult result) {
            Services.ServiceReference.KeyParentOnSave retVal = ((Services.ServiceReference.IServiceData)(this)).EndSavePassport(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSavePassportCompleted(object state) {
            if ((this.SavePassportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SavePassportCompleted(this, new SavePassportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SavePassportAsync(string passportKey, string iEntityKey, string iParentKey, Services.ServiceReference.PassportData passportData, string context, System.Collections.Generic.Dictionary<string, string> password) {
            this.SavePassportAsync(passportKey, iEntityKey, iParentKey, passportData, context, password, null);
        }
        
        public void SavePassportAsync(string passportKey, string iEntityKey, string iParentKey, Services.ServiceReference.PassportData passportData, string context, System.Collections.Generic.Dictionary<string, string> password, object userState) {
            if ((this.onBeginSavePassportDelegate == null)) {
                this.onBeginSavePassportDelegate = new BeginOperationDelegate(this.OnBeginSavePassport);
            }
            if ((this.onEndSavePassportDelegate == null)) {
                this.onEndSavePassportDelegate = new EndOperationDelegate(this.OnEndSavePassport);
            }
            if ((this.onSavePassportCompletedDelegate == null)) {
                this.onSavePassportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSavePassportCompleted);
            }
            base.InvokeAsync(this.onBeginSavePassportDelegate, new object[] {
                        passportKey,
                        iEntityKey,
                        iParentKey,
                        passportData,
                        context,
                        password}, this.onEndSavePassportDelegate, this.onSavePassportCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginCementNkt_OnkeyNKT(string passportKey, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCementNkt_OnkeyNKT(passportKey, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.KeyCementNKT Services.ServiceReference.IServiceData.EndCementNkt_OnkeyNKT(System.IAsyncResult result) {
            return base.Channel.EndCementNkt_OnkeyNKT(result);
        }
        
        private System.IAsyncResult OnBeginCementNkt_OnkeyNKT(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string passportKey = ((string)(inValues[0]));
            string context = ((string)(inValues[1]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginCementNkt_OnkeyNKT(passportKey, context, callback, asyncState);
        }
        
        private object[] OnEndCementNkt_OnkeyNKT(System.IAsyncResult result) {
            Services.ServiceReference.KeyCementNKT retVal = ((Services.ServiceReference.IServiceData)(this)).EndCementNkt_OnkeyNKT(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCementNkt_OnkeyNKTCompleted(object state) {
            if ((this.CementNkt_OnkeyNKTCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CementNkt_OnkeyNKTCompleted(this, new CementNkt_OnkeyNKTCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CementNkt_OnkeyNKTAsync(string passportKey, string context) {
            this.CementNkt_OnkeyNKTAsync(passportKey, context, null);
        }
        
        public void CementNkt_OnkeyNKTAsync(string passportKey, string context, object userState) {
            if ((this.onBeginCementNkt_OnkeyNKTDelegate == null)) {
                this.onBeginCementNkt_OnkeyNKTDelegate = new BeginOperationDelegate(this.OnBeginCementNkt_OnkeyNKT);
            }
            if ((this.onEndCementNkt_OnkeyNKTDelegate == null)) {
                this.onEndCementNkt_OnkeyNKTDelegate = new EndOperationDelegate(this.OnEndCementNkt_OnkeyNKT);
            }
            if ((this.onCementNkt_OnkeyNKTCompletedDelegate == null)) {
                this.onCementNkt_OnkeyNKTCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCementNkt_OnkeyNKTCompleted);
            }
            base.InvokeAsync(this.onBeginCementNkt_OnkeyNKTDelegate, new object[] {
                        passportKey,
                        context}, this.onEndCementNkt_OnkeyNKTDelegate, this.onCementNkt_OnkeyNKTCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginBuCopyVisible(string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBuCopyVisible(context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.BuCopyTreeVisibleForm Services.ServiceReference.IServiceData.EndBuCopyVisible(System.IAsyncResult result) {
            return base.Channel.EndBuCopyVisible(result);
        }
        
        private System.IAsyncResult OnBeginBuCopyVisible(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string context = ((string)(inValues[0]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginBuCopyVisible(context, callback, asyncState);
        }
        
        private object[] OnEndBuCopyVisible(System.IAsyncResult result) {
            Services.ServiceReference.BuCopyTreeVisibleForm retVal = ((Services.ServiceReference.IServiceData)(this)).EndBuCopyVisible(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBuCopyVisibleCompleted(object state) {
            if ((this.BuCopyVisibleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BuCopyVisibleCompleted(this, new BuCopyVisibleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BuCopyVisibleAsync(string context) {
            this.BuCopyVisibleAsync(context, null);
        }
        
        public void BuCopyVisibleAsync(string context, object userState) {
            if ((this.onBeginBuCopyVisibleDelegate == null)) {
                this.onBeginBuCopyVisibleDelegate = new BeginOperationDelegate(this.OnBeginBuCopyVisible);
            }
            if ((this.onEndBuCopyVisibleDelegate == null)) {
                this.onEndBuCopyVisibleDelegate = new EndOperationDelegate(this.OnEndBuCopyVisible);
            }
            if ((this.onBuCopyVisibleCompletedDelegate == null)) {
                this.onBuCopyVisibleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBuCopyVisibleCompleted);
            }
            base.InvokeAsync(this.onBeginBuCopyVisibleDelegate, new object[] {
                        context}, this.onEndBuCopyVisibleDelegate, this.onBuCopyVisibleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginDeleteObj(string passportkey, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteObj(passportkey, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.StatusAnswer Services.ServiceReference.IServiceData.EndDeleteObj(System.IAsyncResult result) {
            return base.Channel.EndDeleteObj(result);
        }
        
        private System.IAsyncResult OnBeginDeleteObj(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string passportkey = ((string)(inValues[0]));
            string context = ((string)(inValues[1]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginDeleteObj(passportkey, context, callback, asyncState);
        }
        
        private object[] OnEndDeleteObj(System.IAsyncResult result) {
            Services.ServiceReference.StatusAnswer retVal = ((Services.ServiceReference.IServiceData)(this)).EndDeleteObj(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteObjCompleted(object state) {
            if ((this.DeleteObjCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteObjCompleted(this, new DeleteObjCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteObjAsync(string passportkey, string context) {
            this.DeleteObjAsync(passportkey, context, null);
        }
        
        public void DeleteObjAsync(string passportkey, string context, object userState) {
            if ((this.onBeginDeleteObjDelegate == null)) {
                this.onBeginDeleteObjDelegate = new BeginOperationDelegate(this.OnBeginDeleteObj);
            }
            if ((this.onEndDeleteObjDelegate == null)) {
                this.onEndDeleteObjDelegate = new EndOperationDelegate(this.OnEndDeleteObj);
            }
            if ((this.onDeleteObjCompletedDelegate == null)) {
                this.onDeleteObjCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteObjCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteObjDelegate, new object[] {
                        passportkey,
                        context}, this.onEndDeleteObjDelegate, this.onDeleteObjCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginCopyPassport(string passportKey, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCopyPassport(passportKey, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.KeyPassportOnCopy Services.ServiceReference.IServiceData.EndCopyPassport(System.IAsyncResult result) {
            return base.Channel.EndCopyPassport(result);
        }
        
        private System.IAsyncResult OnBeginCopyPassport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string passportKey = ((string)(inValues[0]));
            string context = ((string)(inValues[1]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginCopyPassport(passportKey, context, callback, asyncState);
        }
        
        private object[] OnEndCopyPassport(System.IAsyncResult result) {
            Services.ServiceReference.KeyPassportOnCopy retVal = ((Services.ServiceReference.IServiceData)(this)).EndCopyPassport(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCopyPassportCompleted(object state) {
            if ((this.CopyPassportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CopyPassportCompleted(this, new CopyPassportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CopyPassportAsync(string passportKey, string context) {
            this.CopyPassportAsync(passportKey, context, null);
        }
        
        public void CopyPassportAsync(string passportKey, string context, object userState) {
            if ((this.onBeginCopyPassportDelegate == null)) {
                this.onBeginCopyPassportDelegate = new BeginOperationDelegate(this.OnBeginCopyPassport);
            }
            if ((this.onEndCopyPassportDelegate == null)) {
                this.onEndCopyPassportDelegate = new EndOperationDelegate(this.OnEndCopyPassport);
            }
            if ((this.onCopyPassportCompletedDelegate == null)) {
                this.onCopyPassportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCopyPassportCompleted);
            }
            base.InvokeAsync(this.onBeginCopyPassportDelegate, new object[] {
                        passportKey,
                        context}, this.onEndCopyPassportDelegate, this.onCopyPassportCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginUpdateParent(string passportKey, string parentKey, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateParent(passportKey, parentKey, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.KeyParentOnUpdateTree Services.ServiceReference.IServiceData.EndUpdateParent(System.IAsyncResult result) {
            return base.Channel.EndUpdateParent(result);
        }
        
        private System.IAsyncResult OnBeginUpdateParent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string passportKey = ((string)(inValues[0]));
            string parentKey = ((string)(inValues[1]));
            string context = ((string)(inValues[2]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginUpdateParent(passportKey, parentKey, context, callback, asyncState);
        }
        
        private object[] OnEndUpdateParent(System.IAsyncResult result) {
            Services.ServiceReference.KeyParentOnUpdateTree retVal = ((Services.ServiceReference.IServiceData)(this)).EndUpdateParent(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateParentCompleted(object state) {
            if ((this.UpdateParentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateParentCompleted(this, new UpdateParentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateParentAsync(string passportKey, string parentKey, string context) {
            this.UpdateParentAsync(passportKey, parentKey, context, null);
        }
        
        public void UpdateParentAsync(string passportKey, string parentKey, string context, object userState) {
            if ((this.onBeginUpdateParentDelegate == null)) {
                this.onBeginUpdateParentDelegate = new BeginOperationDelegate(this.OnBeginUpdateParent);
            }
            if ((this.onEndUpdateParentDelegate == null)) {
                this.onEndUpdateParentDelegate = new EndOperationDelegate(this.OnEndUpdateParent);
            }
            if ((this.onUpdateParentCompletedDelegate == null)) {
                this.onUpdateParentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateParentCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateParentDelegate, new object[] {
                        passportKey,
                        parentKey,
                        context}, this.onEndUpdateParentDelegate, this.onUpdateParentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginUpdateParenttoChild(string passportKey, string parentKey, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateParenttoChild(passportKey, parentKey, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.KeyparentofchildTree Services.ServiceReference.IServiceData.EndUpdateParenttoChild(System.IAsyncResult result) {
            return base.Channel.EndUpdateParenttoChild(result);
        }
        
        private System.IAsyncResult OnBeginUpdateParenttoChild(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string passportKey = ((string)(inValues[0]));
            string parentKey = ((string)(inValues[1]));
            string context = ((string)(inValues[2]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginUpdateParenttoChild(passportKey, parentKey, context, callback, asyncState);
        }
        
        private object[] OnEndUpdateParenttoChild(System.IAsyncResult result) {
            Services.ServiceReference.KeyparentofchildTree retVal = ((Services.ServiceReference.IServiceData)(this)).EndUpdateParenttoChild(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateParenttoChildCompleted(object state) {
            if ((this.UpdateParenttoChildCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateParenttoChildCompleted(this, new UpdateParenttoChildCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateParenttoChildAsync(string passportKey, string parentKey, string context) {
            this.UpdateParenttoChildAsync(passportKey, parentKey, context, null);
        }
        
        public void UpdateParenttoChildAsync(string passportKey, string parentKey, string context, object userState) {
            if ((this.onBeginUpdateParenttoChildDelegate == null)) {
                this.onBeginUpdateParenttoChildDelegate = new BeginOperationDelegate(this.OnBeginUpdateParenttoChild);
            }
            if ((this.onEndUpdateParenttoChildDelegate == null)) {
                this.onEndUpdateParenttoChildDelegate = new EndOperationDelegate(this.OnEndUpdateParenttoChild);
            }
            if ((this.onUpdateParenttoChildCompletedDelegate == null)) {
                this.onUpdateParenttoChildCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateParenttoChildCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateParenttoChildDelegate, new object[] {
                        passportKey,
                        parentKey,
                        context}, this.onEndUpdateParenttoChildDelegate, this.onUpdateParenttoChildCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginReturnKeyObjOnShema(string tsdiagram, string tsobject, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReturnKeyObjOnShema(tsdiagram, tsobject, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.KeyonShemaArcgis Services.ServiceReference.IServiceData.EndReturnKeyObjOnShema(System.IAsyncResult result) {
            return base.Channel.EndReturnKeyObjOnShema(result);
        }
        
        private System.IAsyncResult OnBeginReturnKeyObjOnShema(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string tsdiagram = ((string)(inValues[0]));
            string tsobject = ((string)(inValues[1]));
            string context = ((string)(inValues[2]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginReturnKeyObjOnShema(tsdiagram, tsobject, context, callback, asyncState);
        }
        
        private object[] OnEndReturnKeyObjOnShema(System.IAsyncResult result) {
            Services.ServiceReference.KeyonShemaArcgis retVal = ((Services.ServiceReference.IServiceData)(this)).EndReturnKeyObjOnShema(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReturnKeyObjOnShemaCompleted(object state) {
            if ((this.ReturnKeyObjOnShemaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReturnKeyObjOnShemaCompleted(this, new ReturnKeyObjOnShemaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReturnKeyObjOnShemaAsync(string tsdiagram, string tsobject, string context) {
            this.ReturnKeyObjOnShemaAsync(tsdiagram, tsobject, context, null);
        }
        
        public void ReturnKeyObjOnShemaAsync(string tsdiagram, string tsobject, string context, object userState) {
            if ((this.onBeginReturnKeyObjOnShemaDelegate == null)) {
                this.onBeginReturnKeyObjOnShemaDelegate = new BeginOperationDelegate(this.OnBeginReturnKeyObjOnShema);
            }
            if ((this.onEndReturnKeyObjOnShemaDelegate == null)) {
                this.onEndReturnKeyObjOnShemaDelegate = new EndOperationDelegate(this.OnEndReturnKeyObjOnShema);
            }
            if ((this.onReturnKeyObjOnShemaCompletedDelegate == null)) {
                this.onReturnKeyObjOnShemaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReturnKeyObjOnShemaCompleted);
            }
            base.InvokeAsync(this.onBeginReturnKeyObjOnShemaDelegate, new object[] {
                        tsdiagram,
                        tsobject,
                        context}, this.onEndReturnKeyObjOnShemaDelegate, this.onReturnKeyObjOnShemaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginReturnVisibleObjOnKarta(string passportKey, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReturnVisibleObjOnKarta(passportKey, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.KeyonKartaObjList Services.ServiceReference.IServiceData.EndReturnVisibleObjOnKarta(System.IAsyncResult result) {
            return base.Channel.EndReturnVisibleObjOnKarta(result);
        }
        
        private System.IAsyncResult OnBeginReturnVisibleObjOnKarta(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string passportKey = ((string)(inValues[0]));
            string context = ((string)(inValues[1]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginReturnVisibleObjOnKarta(passportKey, context, callback, asyncState);
        }
        
        private object[] OnEndReturnVisibleObjOnKarta(System.IAsyncResult result) {
            Services.ServiceReference.KeyonKartaObjList retVal = ((Services.ServiceReference.IServiceData)(this)).EndReturnVisibleObjOnKarta(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReturnVisibleObjOnKartaCompleted(object state) {
            if ((this.ReturnVisibleObjOnKartaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReturnVisibleObjOnKartaCompleted(this, new ReturnVisibleObjOnKartaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReturnVisibleObjOnKartaAsync(string passportKey, string context) {
            this.ReturnVisibleObjOnKartaAsync(passportKey, context, null);
        }
        
        public void ReturnVisibleObjOnKartaAsync(string passportKey, string context, object userState) {
            if ((this.onBeginReturnVisibleObjOnKartaDelegate == null)) {
                this.onBeginReturnVisibleObjOnKartaDelegate = new BeginOperationDelegate(this.OnBeginReturnVisibleObjOnKarta);
            }
            if ((this.onEndReturnVisibleObjOnKartaDelegate == null)) {
                this.onEndReturnVisibleObjOnKartaDelegate = new EndOperationDelegate(this.OnEndReturnVisibleObjOnKarta);
            }
            if ((this.onReturnVisibleObjOnKartaCompletedDelegate == null)) {
                this.onReturnVisibleObjOnKartaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReturnVisibleObjOnKartaCompleted);
            }
            base.InvokeAsync(this.onBeginReturnVisibleObjOnKartaDelegate, new object[] {
                        passportKey,
                        context}, this.onEndReturnVisibleObjOnKartaDelegate, this.onReturnVisibleObjOnKartaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginReturnAccessObj(string passportKey, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReturnAccessObj(passportKey, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.AccessLevelObjKey Services.ServiceReference.IServiceData.EndReturnAccessObj(System.IAsyncResult result) {
            return base.Channel.EndReturnAccessObj(result);
        }
        
        private System.IAsyncResult OnBeginReturnAccessObj(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string passportKey = ((string)(inValues[0]));
            string context = ((string)(inValues[1]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginReturnAccessObj(passportKey, context, callback, asyncState);
        }
        
        private object[] OnEndReturnAccessObj(System.IAsyncResult result) {
            Services.ServiceReference.AccessLevelObjKey retVal = ((Services.ServiceReference.IServiceData)(this)).EndReturnAccessObj(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReturnAccessObjCompleted(object state) {
            if ((this.ReturnAccessObjCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReturnAccessObjCompleted(this, new ReturnAccessObjCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReturnAccessObjAsync(string passportKey, string context) {
            this.ReturnAccessObjAsync(passportKey, context, null);
        }
        
        public void ReturnAccessObjAsync(string passportKey, string context, object userState) {
            if ((this.onBeginReturnAccessObjDelegate == null)) {
                this.onBeginReturnAccessObjDelegate = new BeginOperationDelegate(this.OnBeginReturnAccessObj);
            }
            if ((this.onEndReturnAccessObjDelegate == null)) {
                this.onEndReturnAccessObjDelegate = new EndOperationDelegate(this.OnEndReturnAccessObj);
            }
            if ((this.onReturnAccessObjCompletedDelegate == null)) {
                this.onReturnAccessObjCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReturnAccessObjCompleted);
            }
            base.InvokeAsync(this.onBeginReturnAccessObjDelegate, new object[] {
                        passportKey,
                        context}, this.onEndReturnAccessObjDelegate, this.onReturnAccessObjCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginReturnVisibleNKTObj(string passportKey, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReturnVisibleNKTObj(passportKey, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.ButtonNKTObjKey Services.ServiceReference.IServiceData.EndReturnVisibleNKTObj(System.IAsyncResult result) {
            return base.Channel.EndReturnVisibleNKTObj(result);
        }
        
        private System.IAsyncResult OnBeginReturnVisibleNKTObj(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string passportKey = ((string)(inValues[0]));
            string context = ((string)(inValues[1]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginReturnVisibleNKTObj(passportKey, context, callback, asyncState);
        }
        
        private object[] OnEndReturnVisibleNKTObj(System.IAsyncResult result) {
            Services.ServiceReference.ButtonNKTObjKey retVal = ((Services.ServiceReference.IServiceData)(this)).EndReturnVisibleNKTObj(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReturnVisibleNKTObjCompleted(object state) {
            if ((this.ReturnVisibleNKTObjCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReturnVisibleNKTObjCompleted(this, new ReturnVisibleNKTObjCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReturnVisibleNKTObjAsync(string passportKey, string context) {
            this.ReturnVisibleNKTObjAsync(passportKey, context, null);
        }
        
        public void ReturnVisibleNKTObjAsync(string passportKey, string context, object userState) {
            if ((this.onBeginReturnVisibleNKTObjDelegate == null)) {
                this.onBeginReturnVisibleNKTObjDelegate = new BeginOperationDelegate(this.OnBeginReturnVisibleNKTObj);
            }
            if ((this.onEndReturnVisibleNKTObjDelegate == null)) {
                this.onEndReturnVisibleNKTObjDelegate = new EndOperationDelegate(this.OnEndReturnVisibleNKTObj);
            }
            if ((this.onReturnVisibleNKTObjCompletedDelegate == null)) {
                this.onReturnVisibleNKTObjCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReturnVisibleNKTObjCompleted);
            }
            base.InvokeAsync(this.onBeginReturnVisibleNKTObjDelegate, new object[] {
                        passportKey,
                        context}, this.onEndReturnVisibleNKTObjDelegate, this.onReturnVisibleNKTObjCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginGetDataAllEntityObj(string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDataAllEntityObj(context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.DataEntityList_result Services.ServiceReference.IServiceData.EndGetDataAllEntityObj(System.IAsyncResult result) {
            return base.Channel.EndGetDataAllEntityObj(result);
        }
        
        private System.IAsyncResult OnBeginGetDataAllEntityObj(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string context = ((string)(inValues[0]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginGetDataAllEntityObj(context, callback, asyncState);
        }
        
        private object[] OnEndGetDataAllEntityObj(System.IAsyncResult result) {
            Services.ServiceReference.DataEntityList_result retVal = ((Services.ServiceReference.IServiceData)(this)).EndGetDataAllEntityObj(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataAllEntityObjCompleted(object state) {
            if ((this.GetDataAllEntityObjCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataAllEntityObjCompleted(this, new GetDataAllEntityObjCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataAllEntityObjAsync(string context) {
            this.GetDataAllEntityObjAsync(context, null);
        }
        
        public void GetDataAllEntityObjAsync(string context, object userState) {
            if ((this.onBeginGetDataAllEntityObjDelegate == null)) {
                this.onBeginGetDataAllEntityObjDelegate = new BeginOperationDelegate(this.OnBeginGetDataAllEntityObj);
            }
            if ((this.onEndGetDataAllEntityObjDelegate == null)) {
                this.onEndGetDataAllEntityObjDelegate = new EndOperationDelegate(this.OnEndGetDataAllEntityObj);
            }
            if ((this.onGetDataAllEntityObjCompletedDelegate == null)) {
                this.onGetDataAllEntityObjCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataAllEntityObjCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataAllEntityObjDelegate, new object[] {
                        context}, this.onEndGetDataAllEntityObjDelegate, this.onGetDataAllEntityObjCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginGetXMLPassportToObjKey(string objKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetXMLPassportToObjKey(objKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.PasportToXML Services.ServiceReference.IServiceData.EndGetXMLPassportToObjKey(System.IAsyncResult result) {
            return base.Channel.EndGetXMLPassportToObjKey(result);
        }
        
        private System.IAsyncResult OnBeginGetXMLPassportToObjKey(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string objKey = ((string)(inValues[0]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginGetXMLPassportToObjKey(objKey, callback, asyncState);
        }
        
        private object[] OnEndGetXMLPassportToObjKey(System.IAsyncResult result) {
            Services.ServiceReference.PasportToXML retVal = ((Services.ServiceReference.IServiceData)(this)).EndGetXMLPassportToObjKey(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetXMLPassportToObjKeyCompleted(object state) {
            if ((this.GetXMLPassportToObjKeyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetXMLPassportToObjKeyCompleted(this, new GetXMLPassportToObjKeyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetXMLPassportToObjKeyAsync(string objKey) {
            this.GetXMLPassportToObjKeyAsync(objKey, null);
        }
        
        public void GetXMLPassportToObjKeyAsync(string objKey, object userState) {
            if ((this.onBeginGetXMLPassportToObjKeyDelegate == null)) {
                this.onBeginGetXMLPassportToObjKeyDelegate = new BeginOperationDelegate(this.OnBeginGetXMLPassportToObjKey);
            }
            if ((this.onEndGetXMLPassportToObjKeyDelegate == null)) {
                this.onEndGetXMLPassportToObjKeyDelegate = new EndOperationDelegate(this.OnEndGetXMLPassportToObjKey);
            }
            if ((this.onGetXMLPassportToObjKeyCompletedDelegate == null)) {
                this.onGetXMLPassportToObjKeyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetXMLPassportToObjKeyCompleted);
            }
            base.InvokeAsync(this.onBeginGetXMLPassportToObjKeyDelegate, new object[] {
                        objKey}, this.onEndGetXMLPassportToObjKeyDelegate, this.onGetXMLPassportToObjKeyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginGetButtonToolbar(string passportkey, string buttonTollBar, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetButtonToolbar(passportkey, buttonTollBar, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.FielButtonData Services.ServiceReference.IServiceData.EndGetButtonToolbar(System.IAsyncResult result) {
            return base.Channel.EndGetButtonToolbar(result);
        }
        
        private System.IAsyncResult OnBeginGetButtonToolbar(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string passportkey = ((string)(inValues[0]));
            string buttonTollBar = ((string)(inValues[1]));
            string context = ((string)(inValues[2]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginGetButtonToolbar(passportkey, buttonTollBar, context, callback, asyncState);
        }
        
        private object[] OnEndGetButtonToolbar(System.IAsyncResult result) {
            Services.ServiceReference.FielButtonData retVal = ((Services.ServiceReference.IServiceData)(this)).EndGetButtonToolbar(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetButtonToolbarCompleted(object state) {
            if ((this.GetButtonToolbarCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetButtonToolbarCompleted(this, new GetButtonToolbarCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetButtonToolbarAsync(string passportkey, string buttonTollBar, string context) {
            this.GetButtonToolbarAsync(passportkey, buttonTollBar, context, null);
        }
        
        public void GetButtonToolbarAsync(string passportkey, string buttonTollBar, string context, object userState) {
            if ((this.onBeginGetButtonToolbarDelegate == null)) {
                this.onBeginGetButtonToolbarDelegate = new BeginOperationDelegate(this.OnBeginGetButtonToolbar);
            }
            if ((this.onEndGetButtonToolbarDelegate == null)) {
                this.onEndGetButtonToolbarDelegate = new EndOperationDelegate(this.OnEndGetButtonToolbar);
            }
            if ((this.onGetButtonToolbarCompletedDelegate == null)) {
                this.onGetButtonToolbarCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetButtonToolbarCompleted);
            }
            base.InvokeAsync(this.onBeginGetButtonToolbarDelegate, new object[] {
                        passportkey,
                        buttonTollBar,
                        context}, this.onEndGetButtonToolbarDelegate, this.onGetButtonToolbarCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginGetDisplayLabels(string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDisplayLabels(context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.DisplayLabels Services.ServiceReference.IServiceData.EndGetDisplayLabels(System.IAsyncResult result) {
            return base.Channel.EndGetDisplayLabels(result);
        }
        
        private System.IAsyncResult OnBeginGetDisplayLabels(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string context = ((string)(inValues[0]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginGetDisplayLabels(context, callback, asyncState);
        }
        
        private object[] OnEndGetDisplayLabels(System.IAsyncResult result) {
            Services.ServiceReference.DisplayLabels retVal = ((Services.ServiceReference.IServiceData)(this)).EndGetDisplayLabels(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDisplayLabelsCompleted(object state) {
            if ((this.GetDisplayLabelsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDisplayLabelsCompleted(this, new GetDisplayLabelsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDisplayLabelsAsync(string context) {
            this.GetDisplayLabelsAsync(context, null);
        }
        
        public void GetDisplayLabelsAsync(string context, object userState) {
            if ((this.onBeginGetDisplayLabelsDelegate == null)) {
                this.onBeginGetDisplayLabelsDelegate = new BeginOperationDelegate(this.OnBeginGetDisplayLabels);
            }
            if ((this.onEndGetDisplayLabelsDelegate == null)) {
                this.onEndGetDisplayLabelsDelegate = new EndOperationDelegate(this.OnEndGetDisplayLabels);
            }
            if ((this.onGetDisplayLabelsCompletedDelegate == null)) {
                this.onGetDisplayLabelsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDisplayLabelsCompleted);
            }
            base.InvokeAsync(this.onBeginGetDisplayLabelsDelegate, new object[] {
                        context}, this.onEndGetDisplayLabelsDelegate, this.onGetDisplayLabelsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginReturnTreeOnObjKey(string objKey, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReturnTreeOnObjKey(objKey, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.DataTreeViewOnObjkey Services.ServiceReference.IServiceData.EndReturnTreeOnObjKey(System.IAsyncResult result) {
            return base.Channel.EndReturnTreeOnObjKey(result);
        }
        
        private System.IAsyncResult OnBeginReturnTreeOnObjKey(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string objKey = ((string)(inValues[0]));
            string context = ((string)(inValues[1]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginReturnTreeOnObjKey(objKey, context, callback, asyncState);
        }
        
        private object[] OnEndReturnTreeOnObjKey(System.IAsyncResult result) {
            Services.ServiceReference.DataTreeViewOnObjkey retVal = ((Services.ServiceReference.IServiceData)(this)).EndReturnTreeOnObjKey(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReturnTreeOnObjKeyCompleted(object state) {
            if ((this.ReturnTreeOnObjKeyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReturnTreeOnObjKeyCompleted(this, new ReturnTreeOnObjKeyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReturnTreeOnObjKeyAsync(string objKey, string context) {
            this.ReturnTreeOnObjKeyAsync(objKey, context, null);
        }
        
        public void ReturnTreeOnObjKeyAsync(string objKey, string context, object userState) {
            if ((this.onBeginReturnTreeOnObjKeyDelegate == null)) {
                this.onBeginReturnTreeOnObjKeyDelegate = new BeginOperationDelegate(this.OnBeginReturnTreeOnObjKey);
            }
            if ((this.onEndReturnTreeOnObjKeyDelegate == null)) {
                this.onEndReturnTreeOnObjKeyDelegate = new EndOperationDelegate(this.OnEndReturnTreeOnObjKey);
            }
            if ((this.onReturnTreeOnObjKeyCompletedDelegate == null)) {
                this.onReturnTreeOnObjKeyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReturnTreeOnObjKeyCompleted);
            }
            base.InvokeAsync(this.onBeginReturnTreeOnObjKeyDelegate, new object[] {
                        objKey,
                        context}, this.onEndReturnTreeOnObjKeyDelegate, this.onReturnTreeOnObjKeyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginReturnAllTreeOnObjKey(string objKey, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReturnAllTreeOnObjKey(objKey, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.DataTreeViewOnObjkey Services.ServiceReference.IServiceData.EndReturnAllTreeOnObjKey(System.IAsyncResult result) {
            return base.Channel.EndReturnAllTreeOnObjKey(result);
        }
        
        private System.IAsyncResult OnBeginReturnAllTreeOnObjKey(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string objKey = ((string)(inValues[0]));
            string context = ((string)(inValues[1]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginReturnAllTreeOnObjKey(objKey, context, callback, asyncState);
        }
        
        private object[] OnEndReturnAllTreeOnObjKey(System.IAsyncResult result) {
            Services.ServiceReference.DataTreeViewOnObjkey retVal = ((Services.ServiceReference.IServiceData)(this)).EndReturnAllTreeOnObjKey(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReturnAllTreeOnObjKeyCompleted(object state) {
            if ((this.ReturnAllTreeOnObjKeyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReturnAllTreeOnObjKeyCompleted(this, new ReturnAllTreeOnObjKeyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReturnAllTreeOnObjKeyAsync(string objKey, string context) {
            this.ReturnAllTreeOnObjKeyAsync(objKey, context, null);
        }
        
        public void ReturnAllTreeOnObjKeyAsync(string objKey, string context, object userState) {
            if ((this.onBeginReturnAllTreeOnObjKeyDelegate == null)) {
                this.onBeginReturnAllTreeOnObjKeyDelegate = new BeginOperationDelegate(this.OnBeginReturnAllTreeOnObjKey);
            }
            if ((this.onEndReturnAllTreeOnObjKeyDelegate == null)) {
                this.onEndReturnAllTreeOnObjKeyDelegate = new EndOperationDelegate(this.OnEndReturnAllTreeOnObjKey);
            }
            if ((this.onReturnAllTreeOnObjKeyCompletedDelegate == null)) {
                this.onReturnAllTreeOnObjKeyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReturnAllTreeOnObjKeyCompleted);
            }
            base.InvokeAsync(this.onBeginReturnAllTreeOnObjKeyDelegate, new object[] {
                        objKey,
                        context}, this.onEndReturnAllTreeOnObjKeyDelegate, this.onReturnAllTreeOnObjKeyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginGetTreeFullHierarchyPathToObject(string objKey, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTreeFullHierarchyPathToObject(objKey, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.TreeFullHierarchyPathToObject Services.ServiceReference.IServiceData.EndGetTreeFullHierarchyPathToObject(System.IAsyncResult result) {
            return base.Channel.EndGetTreeFullHierarchyPathToObject(result);
        }
        
        private System.IAsyncResult OnBeginGetTreeFullHierarchyPathToObject(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string objKey = ((string)(inValues[0]));
            string context = ((string)(inValues[1]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginGetTreeFullHierarchyPathToObject(objKey, context, callback, asyncState);
        }
        
        private object[] OnEndGetTreeFullHierarchyPathToObject(System.IAsyncResult result) {
            Services.ServiceReference.TreeFullHierarchyPathToObject retVal = ((Services.ServiceReference.IServiceData)(this)).EndGetTreeFullHierarchyPathToObject(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTreeFullHierarchyPathToObjectCompleted(object state) {
            if ((this.GetTreeFullHierarchyPathToObjectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTreeFullHierarchyPathToObjectCompleted(this, new GetTreeFullHierarchyPathToObjectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTreeFullHierarchyPathToObjectAsync(string objKey, string context) {
            this.GetTreeFullHierarchyPathToObjectAsync(objKey, context, null);
        }
        
        public void GetTreeFullHierarchyPathToObjectAsync(string objKey, string context, object userState) {
            if ((this.onBeginGetTreeFullHierarchyPathToObjectDelegate == null)) {
                this.onBeginGetTreeFullHierarchyPathToObjectDelegate = new BeginOperationDelegate(this.OnBeginGetTreeFullHierarchyPathToObject);
            }
            if ((this.onEndGetTreeFullHierarchyPathToObjectDelegate == null)) {
                this.onEndGetTreeFullHierarchyPathToObjectDelegate = new EndOperationDelegate(this.OnEndGetTreeFullHierarchyPathToObject);
            }
            if ((this.onGetTreeFullHierarchyPathToObjectCompletedDelegate == null)) {
                this.onGetTreeFullHierarchyPathToObjectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTreeFullHierarchyPathToObjectCompleted);
            }
            base.InvokeAsync(this.onBeginGetTreeFullHierarchyPathToObjectDelegate, new object[] {
                        objKey,
                        context}, this.onEndGetTreeFullHierarchyPathToObjectDelegate, this.onGetTreeFullHierarchyPathToObjectCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginGetDataHistoryObj(string inObjKey, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDataHistoryObj(inObjKey, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.DataListHistoryObj Services.ServiceReference.IServiceData.EndGetDataHistoryObj(System.IAsyncResult result) {
            return base.Channel.EndGetDataHistoryObj(result);
        }
        
        private System.IAsyncResult OnBeginGetDataHistoryObj(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string inObjKey = ((string)(inValues[0]));
            string context = ((string)(inValues[1]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginGetDataHistoryObj(inObjKey, context, callback, asyncState);
        }
        
        private object[] OnEndGetDataHistoryObj(System.IAsyncResult result) {
            Services.ServiceReference.DataListHistoryObj retVal = ((Services.ServiceReference.IServiceData)(this)).EndGetDataHistoryObj(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataHistoryObjCompleted(object state) {
            if ((this.GetDataHistoryObjCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataHistoryObjCompleted(this, new GetDataHistoryObjCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataHistoryObjAsync(string inObjKey, string context) {
            this.GetDataHistoryObjAsync(inObjKey, context, null);
        }
        
        public void GetDataHistoryObjAsync(string inObjKey, string context, object userState) {
            if ((this.onBeginGetDataHistoryObjDelegate == null)) {
                this.onBeginGetDataHistoryObjDelegate = new BeginOperationDelegate(this.OnBeginGetDataHistoryObj);
            }
            if ((this.onEndGetDataHistoryObjDelegate == null)) {
                this.onEndGetDataHistoryObjDelegate = new EndOperationDelegate(this.OnEndGetDataHistoryObj);
            }
            if ((this.onGetDataHistoryObjCompletedDelegate == null)) {
                this.onGetDataHistoryObjCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataHistoryObjCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataHistoryObjDelegate, new object[] {
                        inObjKey,
                        context}, this.onEndGetDataHistoryObjDelegate, this.onGetDataHistoryObjCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginGetCalcPrivJson(string inObjKey, string strJason, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCalcPrivJson(inObjKey, strJason, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.CalcPrivJson Services.ServiceReference.IServiceData.EndGetCalcPrivJson(System.IAsyncResult result) {
            return base.Channel.EndGetCalcPrivJson(result);
        }
        
        private System.IAsyncResult OnBeginGetCalcPrivJson(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string inObjKey = ((string)(inValues[0]));
            string strJason = ((string)(inValues[1]));
            string context = ((string)(inValues[2]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginGetCalcPrivJson(inObjKey, strJason, context, callback, asyncState);
        }
        
        private object[] OnEndGetCalcPrivJson(System.IAsyncResult result) {
            Services.ServiceReference.CalcPrivJson retVal = ((Services.ServiceReference.IServiceData)(this)).EndGetCalcPrivJson(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCalcPrivJsonCompleted(object state) {
            if ((this.GetCalcPrivJsonCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCalcPrivJsonCompleted(this, new GetCalcPrivJsonCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCalcPrivJsonAsync(string inObjKey, string strJason, string context) {
            this.GetCalcPrivJsonAsync(inObjKey, strJason, context, null);
        }
        
        public void GetCalcPrivJsonAsync(string inObjKey, string strJason, string context, object userState) {
            if ((this.onBeginGetCalcPrivJsonDelegate == null)) {
                this.onBeginGetCalcPrivJsonDelegate = new BeginOperationDelegate(this.OnBeginGetCalcPrivJson);
            }
            if ((this.onEndGetCalcPrivJsonDelegate == null)) {
                this.onEndGetCalcPrivJsonDelegate = new EndOperationDelegate(this.OnEndGetCalcPrivJson);
            }
            if ((this.onGetCalcPrivJsonCompletedDelegate == null)) {
                this.onGetCalcPrivJsonCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCalcPrivJsonCompleted);
            }
            base.InvokeAsync(this.onBeginGetCalcPrivJsonDelegate, new object[] {
                        inObjKey,
                        strJason,
                        context}, this.onEndGetCalcPrivJsonDelegate, this.onGetCalcPrivJsonCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginGetAllPriv(string inObjKey, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllPriv(inObjKey, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.AllPriv Services.ServiceReference.IServiceData.EndGetAllPriv(System.IAsyncResult result) {
            return base.Channel.EndGetAllPriv(result);
        }
        
        private System.IAsyncResult OnBeginGetAllPriv(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string inObjKey = ((string)(inValues[0]));
            string context = ((string)(inValues[1]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginGetAllPriv(inObjKey, context, callback, asyncState);
        }
        
        private object[] OnEndGetAllPriv(System.IAsyncResult result) {
            Services.ServiceReference.AllPriv retVal = ((Services.ServiceReference.IServiceData)(this)).EndGetAllPriv(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllPrivCompleted(object state) {
            if ((this.GetAllPrivCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllPrivCompleted(this, new GetAllPrivCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllPrivAsync(string inObjKey, string context) {
            this.GetAllPrivAsync(inObjKey, context, null);
        }
        
        public void GetAllPrivAsync(string inObjKey, string context, object userState) {
            if ((this.onBeginGetAllPrivDelegate == null)) {
                this.onBeginGetAllPrivDelegate = new BeginOperationDelegate(this.OnBeginGetAllPriv);
            }
            if ((this.onEndGetAllPrivDelegate == null)) {
                this.onEndGetAllPrivDelegate = new EndOperationDelegate(this.OnEndGetAllPriv);
            }
            if ((this.onGetAllPrivCompletedDelegate == null)) {
                this.onGetAllPrivCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllPrivCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllPrivDelegate, new object[] {
                        inObjKey,
                        context}, this.onEndGetAllPrivDelegate, this.onGetAllPrivCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginDeleteLinkToPipeByKey(string p_nkey, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteLinkToPipeByKey(p_nkey, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.StatusAnswer Services.ServiceReference.IServiceData.EndDeleteLinkToPipeByKey(System.IAsyncResult result) {
            return base.Channel.EndDeleteLinkToPipeByKey(result);
        }
        
        private System.IAsyncResult OnBeginDeleteLinkToPipeByKey(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string p_nkey = ((string)(inValues[0]));
            string context = ((string)(inValues[1]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginDeleteLinkToPipeByKey(p_nkey, context, callback, asyncState);
        }
        
        private object[] OnEndDeleteLinkToPipeByKey(System.IAsyncResult result) {
            Services.ServiceReference.StatusAnswer retVal = ((Services.ServiceReference.IServiceData)(this)).EndDeleteLinkToPipeByKey(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteLinkToPipeByKeyCompleted(object state) {
            if ((this.DeleteLinkToPipeByKeyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteLinkToPipeByKeyCompleted(this, new DeleteLinkToPipeByKeyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteLinkToPipeByKeyAsync(string p_nkey, string context) {
            this.DeleteLinkToPipeByKeyAsync(p_nkey, context, null);
        }
        
        public void DeleteLinkToPipeByKeyAsync(string p_nkey, string context, object userState) {
            if ((this.onBeginDeleteLinkToPipeByKeyDelegate == null)) {
                this.onBeginDeleteLinkToPipeByKeyDelegate = new BeginOperationDelegate(this.OnBeginDeleteLinkToPipeByKey);
            }
            if ((this.onEndDeleteLinkToPipeByKeyDelegate == null)) {
                this.onEndDeleteLinkToPipeByKeyDelegate = new EndOperationDelegate(this.OnEndDeleteLinkToPipeByKey);
            }
            if ((this.onDeleteLinkToPipeByKeyCompletedDelegate == null)) {
                this.onDeleteLinkToPipeByKeyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteLinkToPipeByKeyCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteLinkToPipeByKeyDelegate, new object[] {
                        p_nkey,
                        context}, this.onEndDeleteLinkToPipeByKeyDelegate, this.onDeleteLinkToPipeByKeyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginSetHashPassword(string in_cpass, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetHashPassword(in_cpass, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.HashPassword Services.ServiceReference.IServiceData.EndSetHashPassword(System.IAsyncResult result) {
            return base.Channel.EndSetHashPassword(result);
        }
        
        private System.IAsyncResult OnBeginSetHashPassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string in_cpass = ((string)(inValues[0]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginSetHashPassword(in_cpass, callback, asyncState);
        }
        
        private object[] OnEndSetHashPassword(System.IAsyncResult result) {
            Services.ServiceReference.HashPassword retVal = ((Services.ServiceReference.IServiceData)(this)).EndSetHashPassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetHashPasswordCompleted(object state) {
            if ((this.SetHashPasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetHashPasswordCompleted(this, new SetHashPasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetHashPasswordAsync(string in_cpass) {
            this.SetHashPasswordAsync(in_cpass, null);
        }
        
        public void SetHashPasswordAsync(string in_cpass, object userState) {
            if ((this.onBeginSetHashPasswordDelegate == null)) {
                this.onBeginSetHashPasswordDelegate = new BeginOperationDelegate(this.OnBeginSetHashPassword);
            }
            if ((this.onEndSetHashPasswordDelegate == null)) {
                this.onEndSetHashPasswordDelegate = new EndOperationDelegate(this.OnEndSetHashPassword);
            }
            if ((this.onSetHashPasswordCompletedDelegate == null)) {
                this.onSetHashPasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetHashPasswordCompleted);
            }
            base.InvokeAsync(this.onBeginSetHashPasswordDelegate, new object[] {
                        in_cpass}, this.onEndSetHashPasswordDelegate, this.onSetHashPasswordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginInsertMediaFile(string mediaFileName, string mediaFileName_small, string comment, string passportKey, string fileName, string typeMedia, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertMediaFile(mediaFileName, mediaFileName_small, comment, passportKey, fileName, typeMedia, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.StatusAnswer Services.ServiceReference.IServiceData.EndInsertMediaFile(System.IAsyncResult result) {
            return base.Channel.EndInsertMediaFile(result);
        }
        
        private System.IAsyncResult OnBeginInsertMediaFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string mediaFileName = ((string)(inValues[0]));
            string mediaFileName_small = ((string)(inValues[1]));
            string comment = ((string)(inValues[2]));
            string passportKey = ((string)(inValues[3]));
            string fileName = ((string)(inValues[4]));
            string typeMedia = ((string)(inValues[5]));
            string context = ((string)(inValues[6]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginInsertMediaFile(mediaFileName, mediaFileName_small, comment, passportKey, fileName, typeMedia, context, callback, asyncState);
        }
        
        private object[] OnEndInsertMediaFile(System.IAsyncResult result) {
            Services.ServiceReference.StatusAnswer retVal = ((Services.ServiceReference.IServiceData)(this)).EndInsertMediaFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertMediaFileCompleted(object state) {
            if ((this.InsertMediaFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertMediaFileCompleted(this, new InsertMediaFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertMediaFileAsync(string mediaFileName, string mediaFileName_small, string comment, string passportKey, string fileName, string typeMedia, string context) {
            this.InsertMediaFileAsync(mediaFileName, mediaFileName_small, comment, passportKey, fileName, typeMedia, context, null);
        }
        
        public void InsertMediaFileAsync(string mediaFileName, string mediaFileName_small, string comment, string passportKey, string fileName, string typeMedia, string context, object userState) {
            if ((this.onBeginInsertMediaFileDelegate == null)) {
                this.onBeginInsertMediaFileDelegate = new BeginOperationDelegate(this.OnBeginInsertMediaFile);
            }
            if ((this.onEndInsertMediaFileDelegate == null)) {
                this.onEndInsertMediaFileDelegate = new EndOperationDelegate(this.OnEndInsertMediaFile);
            }
            if ((this.onInsertMediaFileCompletedDelegate == null)) {
                this.onInsertMediaFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertMediaFileCompleted);
            }
            base.InvokeAsync(this.onBeginInsertMediaFileDelegate, new object[] {
                        mediaFileName,
                        mediaFileName_small,
                        comment,
                        passportKey,
                        fileName,
                        typeMedia,
                        context}, this.onEndInsertMediaFileDelegate, this.onInsertMediaFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginDeleteMediaOnObj(string passportkey, string mediaKey, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteMediaOnObj(passportkey, mediaKey, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.StatusAnswer Services.ServiceReference.IServiceData.EndDeleteMediaOnObj(System.IAsyncResult result) {
            return base.Channel.EndDeleteMediaOnObj(result);
        }
        
        private System.IAsyncResult OnBeginDeleteMediaOnObj(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string passportkey = ((string)(inValues[0]));
            string mediaKey = ((string)(inValues[1]));
            string context = ((string)(inValues[2]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginDeleteMediaOnObj(passportkey, mediaKey, context, callback, asyncState);
        }
        
        private object[] OnEndDeleteMediaOnObj(System.IAsyncResult result) {
            Services.ServiceReference.StatusAnswer retVal = ((Services.ServiceReference.IServiceData)(this)).EndDeleteMediaOnObj(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteMediaOnObjCompleted(object state) {
            if ((this.DeleteMediaOnObjCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteMediaOnObjCompleted(this, new DeleteMediaOnObjCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteMediaOnObjAsync(string passportkey, string mediaKey, string context) {
            this.DeleteMediaOnObjAsync(passportkey, mediaKey, context, null);
        }
        
        public void DeleteMediaOnObjAsync(string passportkey, string mediaKey, string context, object userState) {
            if ((this.onBeginDeleteMediaOnObjDelegate == null)) {
                this.onBeginDeleteMediaOnObjDelegate = new BeginOperationDelegate(this.OnBeginDeleteMediaOnObj);
            }
            if ((this.onEndDeleteMediaOnObjDelegate == null)) {
                this.onEndDeleteMediaOnObjDelegate = new EndOperationDelegate(this.OnEndDeleteMediaOnObj);
            }
            if ((this.onDeleteMediaOnObjCompletedDelegate == null)) {
                this.onDeleteMediaOnObjCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteMediaOnObjCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteMediaOnObjDelegate, new object[] {
                        passportkey,
                        mediaKey,
                        context}, this.onEndDeleteMediaOnObjDelegate, this.onDeleteMediaOnObjCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginGetMediaAttribute(string passpoerKey, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMediaAttribute(passpoerKey, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.DataMediaAttribute_result Services.ServiceReference.IServiceData.EndGetMediaAttribute(System.IAsyncResult result) {
            return base.Channel.EndGetMediaAttribute(result);
        }
        
        private System.IAsyncResult OnBeginGetMediaAttribute(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string passpoerKey = ((string)(inValues[0]));
            string context = ((string)(inValues[1]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginGetMediaAttribute(passpoerKey, context, callback, asyncState);
        }
        
        private object[] OnEndGetMediaAttribute(System.IAsyncResult result) {
            Services.ServiceReference.DataMediaAttribute_result retVal = ((Services.ServiceReference.IServiceData)(this)).EndGetMediaAttribute(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMediaAttributeCompleted(object state) {
            if ((this.GetMediaAttributeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMediaAttributeCompleted(this, new GetMediaAttributeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMediaAttributeAsync(string passpoerKey, string context) {
            this.GetMediaAttributeAsync(passpoerKey, context, null);
        }
        
        public void GetMediaAttributeAsync(string passpoerKey, string context, object userState) {
            if ((this.onBeginGetMediaAttributeDelegate == null)) {
                this.onBeginGetMediaAttributeDelegate = new BeginOperationDelegate(this.OnBeginGetMediaAttribute);
            }
            if ((this.onEndGetMediaAttributeDelegate == null)) {
                this.onEndGetMediaAttributeDelegate = new EndOperationDelegate(this.OnEndGetMediaAttribute);
            }
            if ((this.onGetMediaAttributeCompletedDelegate == null)) {
                this.onGetMediaAttributeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMediaAttributeCompleted);
            }
            base.InvokeAsync(this.onBeginGetMediaAttributeDelegate, new object[] {
                        passpoerKey,
                        context}, this.onEndGetMediaAttributeDelegate, this.onGetMediaAttributeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginDictValueData(string iKeyEntity, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDictValueData(iKeyEntity, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.DictDataOnEntityKey Services.ServiceReference.IServiceData.EndDictValueData(System.IAsyncResult result) {
            return base.Channel.EndDictValueData(result);
        }
        
        private System.IAsyncResult OnBeginDictValueData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string iKeyEntity = ((string)(inValues[0]));
            string context = ((string)(inValues[1]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginDictValueData(iKeyEntity, context, callback, asyncState);
        }
        
        private object[] OnEndDictValueData(System.IAsyncResult result) {
            Services.ServiceReference.DictDataOnEntityKey retVal = ((Services.ServiceReference.IServiceData)(this)).EndDictValueData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDictValueDataCompleted(object state) {
            if ((this.DictValueDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DictValueDataCompleted(this, new DictValueDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DictValueDataAsync(string iKeyEntity, string context) {
            this.DictValueDataAsync(iKeyEntity, context, null);
        }
        
        public void DictValueDataAsync(string iKeyEntity, string context, object userState) {
            if ((this.onBeginDictValueDataDelegate == null)) {
                this.onBeginDictValueDataDelegate = new BeginOperationDelegate(this.OnBeginDictValueData);
            }
            if ((this.onEndDictValueDataDelegate == null)) {
                this.onEndDictValueDataDelegate = new EndOperationDelegate(this.OnEndDictValueData);
            }
            if ((this.onDictValueDataCompletedDelegate == null)) {
                this.onDictValueDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDictValueDataCompleted);
            }
            base.InvokeAsync(this.onBeginDictValueDataDelegate, new object[] {
                        iKeyEntity,
                        context}, this.onEndDictValueDataDelegate, this.onDictValueDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginDictDataFiltr(string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDictDataFiltr(context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DictDataFiltr> Services.ServiceReference.IServiceData.EndDictDataFiltr(System.IAsyncResult result) {
            return base.Channel.EndDictDataFiltr(result);
        }
        
        private System.IAsyncResult OnBeginDictDataFiltr(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string context = ((string)(inValues[0]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginDictDataFiltr(context, callback, asyncState);
        }
        
        private object[] OnEndDictDataFiltr(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DictDataFiltr> retVal = ((Services.ServiceReference.IServiceData)(this)).EndDictDataFiltr(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDictDataFiltrCompleted(object state) {
            if ((this.DictDataFiltrCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DictDataFiltrCompleted(this, new DictDataFiltrCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DictDataFiltrAsync(string context) {
            this.DictDataFiltrAsync(context, null);
        }
        
        public void DictDataFiltrAsync(string context, object userState) {
            if ((this.onBeginDictDataFiltrDelegate == null)) {
                this.onBeginDictDataFiltrDelegate = new BeginOperationDelegate(this.OnBeginDictDataFiltr);
            }
            if ((this.onEndDictDataFiltrDelegate == null)) {
                this.onEndDictDataFiltrDelegate = new EndOperationDelegate(this.OnEndDictDataFiltr);
            }
            if ((this.onDictDataFiltrCompletedDelegate == null)) {
                this.onDictDataFiltrCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDictDataFiltrCompleted);
            }
            base.InvokeAsync(this.onBeginDictDataFiltrDelegate, new object[] {
                        context}, this.onEndDictDataFiltrDelegate, this.onDictDataFiltrCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginGetNameNsiOnKeyNSI(string inKeyNSI, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNameNsiOnKeyNSI(inKeyNSI, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.nameNSIOnKey Services.ServiceReference.IServiceData.EndGetNameNsiOnKeyNSI(System.IAsyncResult result) {
            return base.Channel.EndGetNameNsiOnKeyNSI(result);
        }
        
        private System.IAsyncResult OnBeginGetNameNsiOnKeyNSI(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string inKeyNSI = ((string)(inValues[0]));
            string context = ((string)(inValues[1]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginGetNameNsiOnKeyNSI(inKeyNSI, context, callback, asyncState);
        }
        
        private object[] OnEndGetNameNsiOnKeyNSI(System.IAsyncResult result) {
            Services.ServiceReference.nameNSIOnKey retVal = ((Services.ServiceReference.IServiceData)(this)).EndGetNameNsiOnKeyNSI(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNameNsiOnKeyNSICompleted(object state) {
            if ((this.GetNameNsiOnKeyNSICompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNameNsiOnKeyNSICompleted(this, new GetNameNsiOnKeyNSICompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNameNsiOnKeyNSIAsync(string inKeyNSI, string context) {
            this.GetNameNsiOnKeyNSIAsync(inKeyNSI, context, null);
        }
        
        public void GetNameNsiOnKeyNSIAsync(string inKeyNSI, string context, object userState) {
            if ((this.onBeginGetNameNsiOnKeyNSIDelegate == null)) {
                this.onBeginGetNameNsiOnKeyNSIDelegate = new BeginOperationDelegate(this.OnBeginGetNameNsiOnKeyNSI);
            }
            if ((this.onEndGetNameNsiOnKeyNSIDelegate == null)) {
                this.onEndGetNameNsiOnKeyNSIDelegate = new EndOperationDelegate(this.OnEndGetNameNsiOnKeyNSI);
            }
            if ((this.onGetNameNsiOnKeyNSICompletedDelegate == null)) {
                this.onGetNameNsiOnKeyNSICompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNameNsiOnKeyNSICompleted);
            }
            base.InvokeAsync(this.onBeginGetNameNsiOnKeyNSIDelegate, new object[] {
                        inKeyNSI,
                        context}, this.onEndGetNameNsiOnKeyNSIDelegate, this.onGetNameNsiOnKeyNSICompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginSaveNsi(string i_nKeyNsiValue, string i_cNsiValue, string i_nKeyNsi, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveNsi(i_nKeyNsiValue, i_cNsiValue, i_nKeyNsi, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.ListNsiOnSave Services.ServiceReference.IServiceData.EndSaveNsi(System.IAsyncResult result) {
            return base.Channel.EndSaveNsi(result);
        }
        
        private System.IAsyncResult OnBeginSaveNsi(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string i_nKeyNsiValue = ((string)(inValues[0]));
            string i_cNsiValue = ((string)(inValues[1]));
            string i_nKeyNsi = ((string)(inValues[2]));
            string context = ((string)(inValues[3]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginSaveNsi(i_nKeyNsiValue, i_cNsiValue, i_nKeyNsi, context, callback, asyncState);
        }
        
        private object[] OnEndSaveNsi(System.IAsyncResult result) {
            Services.ServiceReference.ListNsiOnSave retVal = ((Services.ServiceReference.IServiceData)(this)).EndSaveNsi(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveNsiCompleted(object state) {
            if ((this.SaveNsiCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveNsiCompleted(this, new SaveNsiCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveNsiAsync(string i_nKeyNsiValue, string i_cNsiValue, string i_nKeyNsi, string context) {
            this.SaveNsiAsync(i_nKeyNsiValue, i_cNsiValue, i_nKeyNsi, context, null);
        }
        
        public void SaveNsiAsync(string i_nKeyNsiValue, string i_cNsiValue, string i_nKeyNsi, string context, object userState) {
            if ((this.onBeginSaveNsiDelegate == null)) {
                this.onBeginSaveNsiDelegate = new BeginOperationDelegate(this.OnBeginSaveNsi);
            }
            if ((this.onEndSaveNsiDelegate == null)) {
                this.onEndSaveNsiDelegate = new EndOperationDelegate(this.OnEndSaveNsi);
            }
            if ((this.onSaveNsiCompletedDelegate == null)) {
                this.onSaveNsiCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveNsiCompleted);
            }
            base.InvokeAsync(this.onBeginSaveNsiDelegate, new object[] {
                        i_nKeyNsiValue,
                        i_cNsiValue,
                        i_nKeyNsi,
                        context}, this.onEndSaveNsiDelegate, this.onSaveNsiCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginOneDictValueData(string iKeyDict, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOneDictValueData(iKeyDict, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.DictDataOne Services.ServiceReference.IServiceData.EndOneDictValueData(System.IAsyncResult result) {
            return base.Channel.EndOneDictValueData(result);
        }
        
        private System.IAsyncResult OnBeginOneDictValueData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string iKeyDict = ((string)(inValues[0]));
            string context = ((string)(inValues[1]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginOneDictValueData(iKeyDict, context, callback, asyncState);
        }
        
        private object[] OnEndOneDictValueData(System.IAsyncResult result) {
            Services.ServiceReference.DictDataOne retVal = ((Services.ServiceReference.IServiceData)(this)).EndOneDictValueData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOneDictValueDataCompleted(object state) {
            if ((this.OneDictValueDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OneDictValueDataCompleted(this, new OneDictValueDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OneDictValueDataAsync(string iKeyDict, string context) {
            this.OneDictValueDataAsync(iKeyDict, context, null);
        }
        
        public void OneDictValueDataAsync(string iKeyDict, string context, object userState) {
            if ((this.onBeginOneDictValueDataDelegate == null)) {
                this.onBeginOneDictValueDataDelegate = new BeginOperationDelegate(this.OnBeginOneDictValueData);
            }
            if ((this.onEndOneDictValueDataDelegate == null)) {
                this.onEndOneDictValueDataDelegate = new EndOperationDelegate(this.OnEndOneDictValueData);
            }
            if ((this.onOneDictValueDataCompletedDelegate == null)) {
                this.onOneDictValueDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOneDictValueDataCompleted);
            }
            base.InvokeAsync(this.onBeginOneDictValueDataDelegate, new object[] {
                        iKeyDict,
                        context}, this.onEndOneDictValueDataDelegate, this.onOneDictValueDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginAttrControl(string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAttrControl(context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.ControlAttribute Services.ServiceReference.IServiceData.EndAttrControl(System.IAsyncResult result) {
            return base.Channel.EndAttrControl(result);
        }
        
        private System.IAsyncResult OnBeginAttrControl(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string context = ((string)(inValues[0]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginAttrControl(context, callback, asyncState);
        }
        
        private object[] OnEndAttrControl(System.IAsyncResult result) {
            Services.ServiceReference.ControlAttribute retVal = ((Services.ServiceReference.IServiceData)(this)).EndAttrControl(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAttrControlCompleted(object state) {
            if ((this.AttrControlCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AttrControlCompleted(this, new AttrControlCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AttrControlAsync(string context) {
            this.AttrControlAsync(context, null);
        }
        
        public void AttrControlAsync(string context, object userState) {
            if ((this.onBeginAttrControlDelegate == null)) {
                this.onBeginAttrControlDelegate = new BeginOperationDelegate(this.OnBeginAttrControl);
            }
            if ((this.onEndAttrControlDelegate == null)) {
                this.onEndAttrControlDelegate = new EndOperationDelegate(this.OnEndAttrControl);
            }
            if ((this.onAttrControlCompletedDelegate == null)) {
                this.onAttrControlCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAttrControlCompleted);
            }
            base.InvokeAsync(this.onBeginAttrControlDelegate, new object[] {
                        context}, this.onEndAttrControlDelegate, this.onAttrControlCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginAttrOneControl(string iTypeControl, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAttrOneControl(iTypeControl, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.AttributOneControl> Services.ServiceReference.IServiceData.EndAttrOneControl(System.IAsyncResult result) {
            return base.Channel.EndAttrOneControl(result);
        }
        
        private System.IAsyncResult OnBeginAttrOneControl(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string iTypeControl = ((string)(inValues[0]));
            string context = ((string)(inValues[1]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginAttrOneControl(iTypeControl, context, callback, asyncState);
        }
        
        private object[] OnEndAttrOneControl(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.AttributOneControl> retVal = ((Services.ServiceReference.IServiceData)(this)).EndAttrOneControl(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAttrOneControlCompleted(object state) {
            if ((this.AttrOneControlCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AttrOneControlCompleted(this, new AttrOneControlCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AttrOneControlAsync(string iTypeControl, string context) {
            this.AttrOneControlAsync(iTypeControl, context, null);
        }
        
        public void AttrOneControlAsync(string iTypeControl, string context, object userState) {
            if ((this.onBeginAttrOneControlDelegate == null)) {
                this.onBeginAttrOneControlDelegate = new BeginOperationDelegate(this.OnBeginAttrOneControl);
            }
            if ((this.onEndAttrOneControlDelegate == null)) {
                this.onEndAttrOneControlDelegate = new EndOperationDelegate(this.OnEndAttrOneControl);
            }
            if ((this.onAttrOneControlCompletedDelegate == null)) {
                this.onAttrOneControlCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAttrOneControlCompleted);
            }
            base.InvokeAsync(this.onBeginAttrOneControlDelegate, new object[] {
                        iTypeControl,
                        context}, this.onEndAttrOneControlDelegate, this.onAttrOneControlCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginGetGridData(string ipassportKey, string inObjKey, string iTypePassport, string inParentKey, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGridData(ipassportKey, inObjKey, iTypePassport, inParentKey, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.GridData Services.ServiceReference.IServiceData.EndGetGridData(System.IAsyncResult result) {
            return base.Channel.EndGetGridData(result);
        }
        
        private System.IAsyncResult OnBeginGetGridData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ipassportKey = ((string)(inValues[0]));
            string inObjKey = ((string)(inValues[1]));
            string iTypePassport = ((string)(inValues[2]));
            string inParentKey = ((string)(inValues[3]));
            string context = ((string)(inValues[4]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginGetGridData(ipassportKey, inObjKey, iTypePassport, inParentKey, context, callback, asyncState);
        }
        
        private object[] OnEndGetGridData(System.IAsyncResult result) {
            Services.ServiceReference.GridData retVal = ((Services.ServiceReference.IServiceData)(this)).EndGetGridData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGridDataCompleted(object state) {
            if ((this.GetGridDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGridDataCompleted(this, new GetGridDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGridDataAsync(string ipassportKey, string inObjKey, string iTypePassport, string inParentKey, string context) {
            this.GetGridDataAsync(ipassportKey, inObjKey, iTypePassport, inParentKey, context, null);
        }
        
        public void GetGridDataAsync(string ipassportKey, string inObjKey, string iTypePassport, string inParentKey, string context, object userState) {
            if ((this.onBeginGetGridDataDelegate == null)) {
                this.onBeginGetGridDataDelegate = new BeginOperationDelegate(this.OnBeginGetGridData);
            }
            if ((this.onEndGetGridDataDelegate == null)) {
                this.onEndGetGridDataDelegate = new EndOperationDelegate(this.OnEndGetGridData);
            }
            if ((this.onGetGridDataCompletedDelegate == null)) {
                this.onGetGridDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGridDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetGridDataDelegate, new object[] {
                        ipassportKey,
                        inObjKey,
                        iTypePassport,
                        inParentKey,
                        context}, this.onEndGetGridDataDelegate, this.onGetGridDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginGetThumbnailList(string passportKey, int mediaType, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetThumbnailList(passportKey, mediaType, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.ThumbnailList Services.ServiceReference.IServiceData.EndGetThumbnailList(System.IAsyncResult result) {
            return base.Channel.EndGetThumbnailList(result);
        }
        
        private System.IAsyncResult OnBeginGetThumbnailList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string passportKey = ((string)(inValues[0]));
            int mediaType = ((int)(inValues[1]));
            string context = ((string)(inValues[2]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginGetThumbnailList(passportKey, mediaType, context, callback, asyncState);
        }
        
        private object[] OnEndGetThumbnailList(System.IAsyncResult result) {
            Services.ServiceReference.ThumbnailList retVal = ((Services.ServiceReference.IServiceData)(this)).EndGetThumbnailList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetThumbnailListCompleted(object state) {
            if ((this.GetThumbnailListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetThumbnailListCompleted(this, new GetThumbnailListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetThumbnailListAsync(string passportKey, int mediaType, string context) {
            this.GetThumbnailListAsync(passportKey, mediaType, context, null);
        }
        
        public void GetThumbnailListAsync(string passportKey, int mediaType, string context, object userState) {
            if ((this.onBeginGetThumbnailListDelegate == null)) {
                this.onBeginGetThumbnailListDelegate = new BeginOperationDelegate(this.OnBeginGetThumbnailList);
            }
            if ((this.onEndGetThumbnailListDelegate == null)) {
                this.onEndGetThumbnailListDelegate = new EndOperationDelegate(this.OnEndGetThumbnailList);
            }
            if ((this.onGetThumbnailListCompletedDelegate == null)) {
                this.onGetThumbnailListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetThumbnailListCompleted);
            }
            base.InvokeAsync(this.onBeginGetThumbnailListDelegate, new object[] {
                        passportKey,
                        mediaType,
                        context}, this.onEndGetThumbnailListDelegate, this.onGetThumbnailListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginGetMediaFile(string mediaKey, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMediaFile(mediaKey, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.ThumbnailListBigMedia Services.ServiceReference.IServiceData.EndGetMediaFile(System.IAsyncResult result) {
            return base.Channel.EndGetMediaFile(result);
        }
        
        private System.IAsyncResult OnBeginGetMediaFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string mediaKey = ((string)(inValues[0]));
            string context = ((string)(inValues[1]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginGetMediaFile(mediaKey, context, callback, asyncState);
        }
        
        private object[] OnEndGetMediaFile(System.IAsyncResult result) {
            Services.ServiceReference.ThumbnailListBigMedia retVal = ((Services.ServiceReference.IServiceData)(this)).EndGetMediaFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMediaFileCompleted(object state) {
            if ((this.GetMediaFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMediaFileCompleted(this, new GetMediaFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMediaFileAsync(string mediaKey, string context) {
            this.GetMediaFileAsync(mediaKey, context, null);
        }
        
        public void GetMediaFileAsync(string mediaKey, string context, object userState) {
            if ((this.onBeginGetMediaFileDelegate == null)) {
                this.onBeginGetMediaFileDelegate = new BeginOperationDelegate(this.OnBeginGetMediaFile);
            }
            if ((this.onEndGetMediaFileDelegate == null)) {
                this.onEndGetMediaFileDelegate = new EndOperationDelegate(this.OnEndGetMediaFile);
            }
            if ((this.onGetMediaFileCompletedDelegate == null)) {
                this.onGetMediaFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMediaFileCompleted);
            }
            base.InvokeAsync(this.onBeginGetMediaFileDelegate, new object[] {
                        mediaKey,
                        context}, this.onEndGetMediaFileDelegate, this.onGetMediaFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginGetDataLink(string entityKey, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDataLink(entityKey, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataLinkList> Services.ServiceReference.IServiceData.EndGetDataLink(System.IAsyncResult result) {
            return base.Channel.EndGetDataLink(result);
        }
        
        private System.IAsyncResult OnBeginGetDataLink(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string entityKey = ((string)(inValues[0]));
            string context = ((string)(inValues[1]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginGetDataLink(entityKey, context, callback, asyncState);
        }
        
        private object[] OnEndGetDataLink(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataLinkList> retVal = ((Services.ServiceReference.IServiceData)(this)).EndGetDataLink(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataLinkCompleted(object state) {
            if ((this.GetDataLinkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataLinkCompleted(this, new GetDataLinkCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataLinkAsync(string entityKey, string context) {
            this.GetDataLinkAsync(entityKey, context, null);
        }
        
        public void GetDataLinkAsync(string entityKey, string context, object userState) {
            if ((this.onBeginGetDataLinkDelegate == null)) {
                this.onBeginGetDataLinkDelegate = new BeginOperationDelegate(this.OnBeginGetDataLink);
            }
            if ((this.onEndGetDataLinkDelegate == null)) {
                this.onEndGetDataLinkDelegate = new EndOperationDelegate(this.OnEndGetDataLink);
            }
            if ((this.onGetDataLinkCompletedDelegate == null)) {
                this.onGetDataLinkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataLinkCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataLinkDelegate, new object[] {
                        entityKey,
                        context}, this.onEndGetDataLinkDelegate, this.onGetDataLinkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginGetDataConnect(string entityKey, string fldName, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDataConnect(entityKey, fldName, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.DataConnectList_result Services.ServiceReference.IServiceData.EndGetDataConnect(System.IAsyncResult result) {
            return base.Channel.EndGetDataConnect(result);
        }
        
        private System.IAsyncResult OnBeginGetDataConnect(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string entityKey = ((string)(inValues[0]));
            string fldName = ((string)(inValues[1]));
            string context = ((string)(inValues[2]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginGetDataConnect(entityKey, fldName, context, callback, asyncState);
        }
        
        private object[] OnEndGetDataConnect(System.IAsyncResult result) {
            Services.ServiceReference.DataConnectList_result retVal = ((Services.ServiceReference.IServiceData)(this)).EndGetDataConnect(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataConnectCompleted(object state) {
            if ((this.GetDataConnectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataConnectCompleted(this, new GetDataConnectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataConnectAsync(string entityKey, string fldName, string context) {
            this.GetDataConnectAsync(entityKey, fldName, context, null);
        }
        
        public void GetDataConnectAsync(string entityKey, string fldName, string context, object userState) {
            if ((this.onBeginGetDataConnectDelegate == null)) {
                this.onBeginGetDataConnectDelegate = new BeginOperationDelegate(this.OnBeginGetDataConnect);
            }
            if ((this.onEndGetDataConnectDelegate == null)) {
                this.onEndGetDataConnectDelegate = new EndOperationDelegate(this.OnEndGetDataConnect);
            }
            if ((this.onGetDataConnectCompletedDelegate == null)) {
                this.onGetDataConnectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataConnectCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataConnectDelegate, new object[] {
                        entityKey,
                        fldName,
                        context}, this.onEndGetDataConnectDelegate, this.onGetDataConnectCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginGetDataRelationObj(string inObjKey, string keyFld, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDataRelationObj(inObjKey, keyFld, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.DataListRelationObj Services.ServiceReference.IServiceData.EndGetDataRelationObj(System.IAsyncResult result) {
            return base.Channel.EndGetDataRelationObj(result);
        }
        
        private System.IAsyncResult OnBeginGetDataRelationObj(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string inObjKey = ((string)(inValues[0]));
            string keyFld = ((string)(inValues[1]));
            string context = ((string)(inValues[2]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginGetDataRelationObj(inObjKey, keyFld, context, callback, asyncState);
        }
        
        private object[] OnEndGetDataRelationObj(System.IAsyncResult result) {
            Services.ServiceReference.DataListRelationObj retVal = ((Services.ServiceReference.IServiceData)(this)).EndGetDataRelationObj(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataRelationObjCompleted(object state) {
            if ((this.GetDataRelationObjCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataRelationObjCompleted(this, new GetDataRelationObjCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataRelationObjAsync(string inObjKey, string keyFld, string context) {
            this.GetDataRelationObjAsync(inObjKey, keyFld, context, null);
        }
        
        public void GetDataRelationObjAsync(string inObjKey, string keyFld, string context, object userState) {
            if ((this.onBeginGetDataRelationObjDelegate == null)) {
                this.onBeginGetDataRelationObjDelegate = new BeginOperationDelegate(this.OnBeginGetDataRelationObj);
            }
            if ((this.onEndGetDataRelationObjDelegate == null)) {
                this.onEndGetDataRelationObjDelegate = new EndOperationDelegate(this.OnEndGetDataRelationObj);
            }
            if ((this.onGetDataRelationObjCompletedDelegate == null)) {
                this.onGetDataRelationObjCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataRelationObjCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataRelationObjDelegate, new object[] {
                        inObjKey,
                        keyFld,
                        context}, this.onEndGetDataRelationObjDelegate, this.onGetDataRelationObjCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginGetListLinkedObjects(string objectkey, string entitykey, string fieldname, string linkedentitykey, string linkedobjects, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListLinkedObjects(objectkey, entitykey, fieldname, linkedentitykey, linkedobjects, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.DataListLinkedObjects Services.ServiceReference.IServiceData.EndGetListLinkedObjects(System.IAsyncResult result) {
            return base.Channel.EndGetListLinkedObjects(result);
        }
        
        private System.IAsyncResult OnBeginGetListLinkedObjects(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string objectkey = ((string)(inValues[0]));
            string entitykey = ((string)(inValues[1]));
            string fieldname = ((string)(inValues[2]));
            string linkedentitykey = ((string)(inValues[3]));
            string linkedobjects = ((string)(inValues[4]));
            string context = ((string)(inValues[5]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginGetListLinkedObjects(objectkey, entitykey, fieldname, linkedentitykey, linkedobjects, context, callback, asyncState);
        }
        
        private object[] OnEndGetListLinkedObjects(System.IAsyncResult result) {
            Services.ServiceReference.DataListLinkedObjects retVal = ((Services.ServiceReference.IServiceData)(this)).EndGetListLinkedObjects(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListLinkedObjectsCompleted(object state) {
            if ((this.GetListLinkedObjectsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListLinkedObjectsCompleted(this, new GetListLinkedObjectsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListLinkedObjectsAsync(string objectkey, string entitykey, string fieldname, string linkedentitykey, string linkedobjects, string context) {
            this.GetListLinkedObjectsAsync(objectkey, entitykey, fieldname, linkedentitykey, linkedobjects, context, null);
        }
        
        public void GetListLinkedObjectsAsync(string objectkey, string entitykey, string fieldname, string linkedentitykey, string linkedobjects, string context, object userState) {
            if ((this.onBeginGetListLinkedObjectsDelegate == null)) {
                this.onBeginGetListLinkedObjectsDelegate = new BeginOperationDelegate(this.OnBeginGetListLinkedObjects);
            }
            if ((this.onEndGetListLinkedObjectsDelegate == null)) {
                this.onEndGetListLinkedObjectsDelegate = new EndOperationDelegate(this.OnEndGetListLinkedObjects);
            }
            if ((this.onGetListLinkedObjectsCompletedDelegate == null)) {
                this.onGetListLinkedObjectsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListLinkedObjectsCompleted);
            }
            base.InvokeAsync(this.onBeginGetListLinkedObjectsDelegate, new object[] {
                        objectkey,
                        entitykey,
                        fieldname,
                        linkedentitykey,
                        linkedobjects,
                        context}, this.onEndGetListLinkedObjectsDelegate, this.onGetListLinkedObjectsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginSaveRelationObj(string inObjkey, string keyFld, string keyRelation, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveRelationObj(inObjkey, keyFld, keyRelation, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.KeyRelationOnSave Services.ServiceReference.IServiceData.EndSaveRelationObj(System.IAsyncResult result) {
            return base.Channel.EndSaveRelationObj(result);
        }
        
        private System.IAsyncResult OnBeginSaveRelationObj(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string inObjkey = ((string)(inValues[0]));
            string keyFld = ((string)(inValues[1]));
            string keyRelation = ((string)(inValues[2]));
            string context = ((string)(inValues[3]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginSaveRelationObj(inObjkey, keyFld, keyRelation, context, callback, asyncState);
        }
        
        private object[] OnEndSaveRelationObj(System.IAsyncResult result) {
            Services.ServiceReference.KeyRelationOnSave retVal = ((Services.ServiceReference.IServiceData)(this)).EndSaveRelationObj(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveRelationObjCompleted(object state) {
            if ((this.SaveRelationObjCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveRelationObjCompleted(this, new SaveRelationObjCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveRelationObjAsync(string inObjkey, string keyFld, string keyRelation, string context) {
            this.SaveRelationObjAsync(inObjkey, keyFld, keyRelation, context, null);
        }
        
        public void SaveRelationObjAsync(string inObjkey, string keyFld, string keyRelation, string context, object userState) {
            if ((this.onBeginSaveRelationObjDelegate == null)) {
                this.onBeginSaveRelationObjDelegate = new BeginOperationDelegate(this.OnBeginSaveRelationObj);
            }
            if ((this.onEndSaveRelationObjDelegate == null)) {
                this.onEndSaveRelationObjDelegate = new EndOperationDelegate(this.OnEndSaveRelationObj);
            }
            if ((this.onSaveRelationObjCompletedDelegate == null)) {
                this.onSaveRelationObjCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveRelationObjCompleted);
            }
            base.InvokeAsync(this.onBeginSaveRelationObjDelegate, new object[] {
                        inObjkey,
                        keyFld,
                        keyRelation,
                        context}, this.onEndSaveRelationObjDelegate, this.onSaveRelationObjCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginDelRelationObj(string inObjkey, string keyFld, string keyRelation, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDelRelationObj(inObjkey, keyFld, keyRelation, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.KeyRelationOnDel Services.ServiceReference.IServiceData.EndDelRelationObj(System.IAsyncResult result) {
            return base.Channel.EndDelRelationObj(result);
        }
        
        private System.IAsyncResult OnBeginDelRelationObj(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string inObjkey = ((string)(inValues[0]));
            string keyFld = ((string)(inValues[1]));
            string keyRelation = ((string)(inValues[2]));
            string context = ((string)(inValues[3]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginDelRelationObj(inObjkey, keyFld, keyRelation, context, callback, asyncState);
        }
        
        private object[] OnEndDelRelationObj(System.IAsyncResult result) {
            Services.ServiceReference.KeyRelationOnDel retVal = ((Services.ServiceReference.IServiceData)(this)).EndDelRelationObj(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDelRelationObjCompleted(object state) {
            if ((this.DelRelationObjCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DelRelationObjCompleted(this, new DelRelationObjCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DelRelationObjAsync(string inObjkey, string keyFld, string keyRelation, string context) {
            this.DelRelationObjAsync(inObjkey, keyFld, keyRelation, context, null);
        }
        
        public void DelRelationObjAsync(string inObjkey, string keyFld, string keyRelation, string context, object userState) {
            if ((this.onBeginDelRelationObjDelegate == null)) {
                this.onBeginDelRelationObjDelegate = new BeginOperationDelegate(this.OnBeginDelRelationObj);
            }
            if ((this.onEndDelRelationObjDelegate == null)) {
                this.onEndDelRelationObjDelegate = new EndOperationDelegate(this.OnEndDelRelationObj);
            }
            if ((this.onDelRelationObjCompletedDelegate == null)) {
                this.onDelRelationObjCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDelRelationObjCompleted);
            }
            base.InvokeAsync(this.onBeginDelRelationObjDelegate, new object[] {
                        inObjkey,
                        keyFld,
                        keyRelation,
                        context}, this.onEndDelRelationObjDelegate, this.onDelRelationObjCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginGetCheckLink(string EntityKey, string ObjParentKey, string LinkType, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCheckLink(EntityKey, ObjParentKey, LinkType, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.GetCheckOrganizationLink_result Services.ServiceReference.IServiceData.EndGetCheckLink(System.IAsyncResult result) {
            return base.Channel.EndGetCheckLink(result);
        }
        
        private System.IAsyncResult OnBeginGetCheckLink(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string EntityKey = ((string)(inValues[0]));
            string ObjParentKey = ((string)(inValues[1]));
            string LinkType = ((string)(inValues[2]));
            string context = ((string)(inValues[3]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginGetCheckLink(EntityKey, ObjParentKey, LinkType, context, callback, asyncState);
        }
        
        private object[] OnEndGetCheckLink(System.IAsyncResult result) {
            Services.ServiceReference.GetCheckOrganizationLink_result retVal = ((Services.ServiceReference.IServiceData)(this)).EndGetCheckLink(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCheckLinkCompleted(object state) {
            if ((this.GetCheckLinkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCheckLinkCompleted(this, new GetCheckLinkCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCheckLinkAsync(string EntityKey, string ObjParentKey, string LinkType, string context) {
            this.GetCheckLinkAsync(EntityKey, ObjParentKey, LinkType, context, null);
        }
        
        public void GetCheckLinkAsync(string EntityKey, string ObjParentKey, string LinkType, string context, object userState) {
            if ((this.onBeginGetCheckLinkDelegate == null)) {
                this.onBeginGetCheckLinkDelegate = new BeginOperationDelegate(this.OnBeginGetCheckLink);
            }
            if ((this.onEndGetCheckLinkDelegate == null)) {
                this.onEndGetCheckLinkDelegate = new EndOperationDelegate(this.OnEndGetCheckLink);
            }
            if ((this.onGetCheckLinkCompletedDelegate == null)) {
                this.onGetCheckLinkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCheckLinkCompleted);
            }
            base.InvokeAsync(this.onBeginGetCheckLinkDelegate, new object[] {
                        EntityKey,
                        ObjParentKey,
                        LinkType,
                        context}, this.onEndGetCheckLinkDelegate, this.onGetCheckLinkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginGetDataChild(string entityKey, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDataChild(entityKey, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.DataChildList_result Services.ServiceReference.IServiceData.EndGetDataChild(System.IAsyncResult result) {
            return base.Channel.EndGetDataChild(result);
        }
        
        private System.IAsyncResult OnBeginGetDataChild(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string entityKey = ((string)(inValues[0]));
            string context = ((string)(inValues[1]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginGetDataChild(entityKey, context, callback, asyncState);
        }
        
        private object[] OnEndGetDataChild(System.IAsyncResult result) {
            Services.ServiceReference.DataChildList_result retVal = ((Services.ServiceReference.IServiceData)(this)).EndGetDataChild(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataChildCompleted(object state) {
            if ((this.GetDataChildCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataChildCompleted(this, new GetDataChildCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataChildAsync(string entityKey, string context) {
            this.GetDataChildAsync(entityKey, context, null);
        }
        
        public void GetDataChildAsync(string entityKey, string context, object userState) {
            if ((this.onBeginGetDataChildDelegate == null)) {
                this.onBeginGetDataChildDelegate = new BeginOperationDelegate(this.OnBeginGetDataChild);
            }
            if ((this.onEndGetDataChildDelegate == null)) {
                this.onEndGetDataChildDelegate = new EndOperationDelegate(this.OnEndGetDataChild);
            }
            if ((this.onGetDataChildCompletedDelegate == null)) {
                this.onGetDataChildCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataChildCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataChildDelegate, new object[] {
                        entityKey,
                        context}, this.onEndGetDataChildDelegate, this.onGetDataChildCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginGetCountChild(string entityKey, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCountChild(entityKey, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.CountChild_result Services.ServiceReference.IServiceData.EndGetCountChild(System.IAsyncResult result) {
            return base.Channel.EndGetCountChild(result);
        }
        
        private System.IAsyncResult OnBeginGetCountChild(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string entityKey = ((string)(inValues[0]));
            string context = ((string)(inValues[1]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginGetCountChild(entityKey, context, callback, asyncState);
        }
        
        private object[] OnEndGetCountChild(System.IAsyncResult result) {
            Services.ServiceReference.CountChild_result retVal = ((Services.ServiceReference.IServiceData)(this)).EndGetCountChild(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCountChildCompleted(object state) {
            if ((this.GetCountChildCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCountChildCompleted(this, new GetCountChildCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCountChildAsync(string entityKey, string context) {
            this.GetCountChildAsync(entityKey, context, null);
        }
        
        public void GetCountChildAsync(string entityKey, string context, object userState) {
            if ((this.onBeginGetCountChildDelegate == null)) {
                this.onBeginGetCountChildDelegate = new BeginOperationDelegate(this.OnBeginGetCountChild);
            }
            if ((this.onEndGetCountChildDelegate == null)) {
                this.onEndGetCountChildDelegate = new EndOperationDelegate(this.OnEndGetCountChild);
            }
            if ((this.onGetCountChildCompletedDelegate == null)) {
                this.onGetCountChildCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCountChildCompleted);
            }
            base.InvokeAsync(this.onBeginGetCountChildDelegate, new object[] {
                        entityKey,
                        context}, this.onEndGetCountChildDelegate, this.onGetCountChildCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginGetNameObj(string entityKey, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNameObj(entityKey, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.NameObj_result Services.ServiceReference.IServiceData.EndGetNameObj(System.IAsyncResult result) {
            return base.Channel.EndGetNameObj(result);
        }
        
        private System.IAsyncResult OnBeginGetNameObj(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string entityKey = ((string)(inValues[0]));
            string context = ((string)(inValues[1]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginGetNameObj(entityKey, context, callback, asyncState);
        }
        
        private object[] OnEndGetNameObj(System.IAsyncResult result) {
            Services.ServiceReference.NameObj_result retVal = ((Services.ServiceReference.IServiceData)(this)).EndGetNameObj(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNameObjCompleted(object state) {
            if ((this.GetNameObjCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNameObjCompleted(this, new GetNameObjCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNameObjAsync(string entityKey, string context) {
            this.GetNameObjAsync(entityKey, context, null);
        }
        
        public void GetNameObjAsync(string entityKey, string context, object userState) {
            if ((this.onBeginGetNameObjDelegate == null)) {
                this.onBeginGetNameObjDelegate = new BeginOperationDelegate(this.OnBeginGetNameObj);
            }
            if ((this.onEndGetNameObjDelegate == null)) {
                this.onEndGetNameObjDelegate = new EndOperationDelegate(this.OnEndGetNameObj);
            }
            if ((this.onGetNameObjCompletedDelegate == null)) {
                this.onGetNameObjCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNameObjCompleted);
            }
            base.InvokeAsync(this.onBeginGetNameObjDelegate, new object[] {
                        entityKey,
                        context}, this.onEndGetNameObjDelegate, this.onGetNameObjCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginGetPassportInfo(string inObjKey, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPassportInfo(inObjKey, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.PassportInfo_result Services.ServiceReference.IServiceData.EndGetPassportInfo(System.IAsyncResult result) {
            return base.Channel.EndGetPassportInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetPassportInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string inObjKey = ((string)(inValues[0]));
            string context = ((string)(inValues[1]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginGetPassportInfo(inObjKey, context, callback, asyncState);
        }
        
        private object[] OnEndGetPassportInfo(System.IAsyncResult result) {
            Services.ServiceReference.PassportInfo_result retVal = ((Services.ServiceReference.IServiceData)(this)).EndGetPassportInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPassportInfoCompleted(object state) {
            if ((this.GetPassportInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPassportInfoCompleted(this, new GetPassportInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPassportInfoAsync(string inObjKey, string context) {
            this.GetPassportInfoAsync(inObjKey, context, null);
        }
        
        public void GetPassportInfoAsync(string inObjKey, string context, object userState) {
            if ((this.onBeginGetPassportInfoDelegate == null)) {
                this.onBeginGetPassportInfoDelegate = new BeginOperationDelegate(this.OnBeginGetPassportInfo);
            }
            if ((this.onEndGetPassportInfoDelegate == null)) {
                this.onEndGetPassportInfoDelegate = new EndOperationDelegate(this.OnEndGetPassportInfo);
            }
            if ((this.onGetPassportInfoCompletedDelegate == null)) {
                this.onGetPassportInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPassportInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetPassportInfoDelegate, new object[] {
                        inObjKey,
                        context}, this.onEndGetPassportInfoDelegate, this.onGetPassportInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginGetDataMGList(string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDataMGList(context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.DataMGList_result Services.ServiceReference.IServiceData.EndGetDataMGList(System.IAsyncResult result) {
            return base.Channel.EndGetDataMGList(result);
        }
        
        private System.IAsyncResult OnBeginGetDataMGList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string context = ((string)(inValues[0]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginGetDataMGList(context, callback, asyncState);
        }
        
        private object[] OnEndGetDataMGList(System.IAsyncResult result) {
            Services.ServiceReference.DataMGList_result retVal = ((Services.ServiceReference.IServiceData)(this)).EndGetDataMGList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataMGListCompleted(object state) {
            if ((this.GetDataMGListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataMGListCompleted(this, new GetDataMGListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataMGListAsync(string context) {
            this.GetDataMGListAsync(context, null);
        }
        
        public void GetDataMGListAsync(string context, object userState) {
            if ((this.onBeginGetDataMGListDelegate == null)) {
                this.onBeginGetDataMGListDelegate = new BeginOperationDelegate(this.OnBeginGetDataMGList);
            }
            if ((this.onEndGetDataMGListDelegate == null)) {
                this.onEndGetDataMGListDelegate = new EndOperationDelegate(this.OnEndGetDataMGList);
            }
            if ((this.onGetDataMGListCompletedDelegate == null)) {
                this.onGetDataMGListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataMGListCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataMGListDelegate, new object[] {
                        context}, this.onEndGetDataMGListDelegate, this.onGetDataMGListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Services.ServiceReference.IServiceData.BeginGetDataNitList(string inKeyMg, string context, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDataNitList(inKeyMg, context, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services.ServiceReference.DataNitList_result Services.ServiceReference.IServiceData.EndGetDataNitList(System.IAsyncResult result) {
            return base.Channel.EndGetDataNitList(result);
        }
        
        private System.IAsyncResult OnBeginGetDataNitList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string inKeyMg = ((string)(inValues[0]));
            string context = ((string)(inValues[1]));
            return ((Services.ServiceReference.IServiceData)(this)).BeginGetDataNitList(inKeyMg, context, callback, asyncState);
        }
        
        private object[] OnEndGetDataNitList(System.IAsyncResult result) {
            Services.ServiceReference.DataNitList_result retVal = ((Services.ServiceReference.IServiceData)(this)).EndGetDataNitList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataNitListCompleted(object state) {
            if ((this.GetDataNitListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataNitListCompleted(this, new GetDataNitListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataNitListAsync(string inKeyMg, string context) {
            this.GetDataNitListAsync(inKeyMg, context, null);
        }
        
        public void GetDataNitListAsync(string inKeyMg, string context, object userState) {
            if ((this.onBeginGetDataNitListDelegate == null)) {
                this.onBeginGetDataNitListDelegate = new BeginOperationDelegate(this.OnBeginGetDataNitList);
            }
            if ((this.onEndGetDataNitListDelegate == null)) {
                this.onEndGetDataNitListDelegate = new EndOperationDelegate(this.OnEndGetDataNitList);
            }
            if ((this.onGetDataNitListCompletedDelegate == null)) {
                this.onGetDataNitListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataNitListCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataNitListDelegate, new object[] {
                        inKeyMg,
                        context}, this.onEndGetDataNitListDelegate, this.onGetDataNitListCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Services.ServiceReference.IServiceData CreateChannel() {
            return new ServiceDataClientChannel(this);
        }
        
        private class ServiceDataClientChannel : ChannelBase<Services.ServiceReference.IServiceData>, Services.ServiceReference.IServiceData {
            
            public ServiceDataClientChannel(System.ServiceModel.ClientBase<Services.ServiceReference.IServiceData> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginCreateRootOfTree(string rootKey, string context, string visibleNode, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = rootKey;
                _args[1] = context;
                _args[2] = visibleNode;
                System.IAsyncResult _result = base.BeginInvoke("CreateRootOfTree", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.PairAll EndCreateRootOfTree(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.PairAll _result = ((Services.ServiceReference.PairAll)(base.EndInvoke("CreateRootOfTree", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNextNode(string key, string nTreeKey, string context, string visibleNode, string keyPassport, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = key;
                _args[1] = nTreeKey;
                _args[2] = context;
                _args[3] = visibleNode;
                _args[4] = keyPassport;
                System.IAsyncResult _result = base.BeginInvoke("GetNextNode", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.PairAll EndGetNextNode(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.PairAll _result = ((Services.ServiceReference.PairAll)(base.EndInvoke("GetNextNode", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMetaData(string iKeyEntity, string iTypePassport, string context, string inObjKey, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = iKeyEntity;
                _args[1] = iTypePassport;
                _args[2] = context;
                _args[3] = inObjKey;
                System.IAsyncResult _result = base.BeginInvoke("MetaData", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.FieldMetaData EndMetaData(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.FieldMetaData _result = ((Services.ServiceReference.FieldMetaData)(base.EndInvoke("MetaData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPassport(string passportKey, int intypePassport, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = passportKey;
                _args[1] = intypePassport;
                _args[2] = context;
                System.IAsyncResult _result = base.BeginInvoke("GetPassport", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.PassportData EndGetPassport(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.PassportData _result = ((Services.ServiceReference.PassportData)(base.EndInvoke("GetPassport", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSavePassport(string passportKey, string iEntityKey, string iParentKey, Services.ServiceReference.PassportData passportData, string context, System.Collections.Generic.Dictionary<string, string> password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = passportKey;
                _args[1] = iEntityKey;
                _args[2] = iParentKey;
                _args[3] = passportData;
                _args[4] = context;
                _args[5] = password;
                System.IAsyncResult _result = base.BeginInvoke("SavePassport", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.KeyParentOnSave EndSavePassport(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.KeyParentOnSave _result = ((Services.ServiceReference.KeyParentOnSave)(base.EndInvoke("SavePassport", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCementNkt_OnkeyNKT(string passportKey, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = passportKey;
                _args[1] = context;
                System.IAsyncResult _result = base.BeginInvoke("CementNkt_OnkeyNKT", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.KeyCementNKT EndCementNkt_OnkeyNKT(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.KeyCementNKT _result = ((Services.ServiceReference.KeyCementNKT)(base.EndInvoke("CementNkt_OnkeyNKT", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBuCopyVisible(string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = context;
                System.IAsyncResult _result = base.BeginInvoke("BuCopyVisible", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.BuCopyTreeVisibleForm EndBuCopyVisible(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.BuCopyTreeVisibleForm _result = ((Services.ServiceReference.BuCopyTreeVisibleForm)(base.EndInvoke("BuCopyVisible", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteObj(string passportkey, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = passportkey;
                _args[1] = context;
                System.IAsyncResult _result = base.BeginInvoke("DeleteObj", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.StatusAnswer EndDeleteObj(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.StatusAnswer _result = ((Services.ServiceReference.StatusAnswer)(base.EndInvoke("DeleteObj", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCopyPassport(string passportKey, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = passportKey;
                _args[1] = context;
                System.IAsyncResult _result = base.BeginInvoke("CopyPassport", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.KeyPassportOnCopy EndCopyPassport(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.KeyPassportOnCopy _result = ((Services.ServiceReference.KeyPassportOnCopy)(base.EndInvoke("CopyPassport", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateParent(string passportKey, string parentKey, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = passportKey;
                _args[1] = parentKey;
                _args[2] = context;
                System.IAsyncResult _result = base.BeginInvoke("UpdateParent", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.KeyParentOnUpdateTree EndUpdateParent(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.KeyParentOnUpdateTree _result = ((Services.ServiceReference.KeyParentOnUpdateTree)(base.EndInvoke("UpdateParent", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateParenttoChild(string passportKey, string parentKey, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = passportKey;
                _args[1] = parentKey;
                _args[2] = context;
                System.IAsyncResult _result = base.BeginInvoke("UpdateParenttoChild", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.KeyparentofchildTree EndUpdateParenttoChild(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.KeyparentofchildTree _result = ((Services.ServiceReference.KeyparentofchildTree)(base.EndInvoke("UpdateParenttoChild", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReturnKeyObjOnShema(string tsdiagram, string tsobject, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = tsdiagram;
                _args[1] = tsobject;
                _args[2] = context;
                System.IAsyncResult _result = base.BeginInvoke("ReturnKeyObjOnShema", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.KeyonShemaArcgis EndReturnKeyObjOnShema(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.KeyonShemaArcgis _result = ((Services.ServiceReference.KeyonShemaArcgis)(base.EndInvoke("ReturnKeyObjOnShema", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReturnVisibleObjOnKarta(string passportKey, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = passportKey;
                _args[1] = context;
                System.IAsyncResult _result = base.BeginInvoke("ReturnVisibleObjOnKarta", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.KeyonKartaObjList EndReturnVisibleObjOnKarta(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.KeyonKartaObjList _result = ((Services.ServiceReference.KeyonKartaObjList)(base.EndInvoke("ReturnVisibleObjOnKarta", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReturnAccessObj(string passportKey, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = passportKey;
                _args[1] = context;
                System.IAsyncResult _result = base.BeginInvoke("ReturnAccessObj", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.AccessLevelObjKey EndReturnAccessObj(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.AccessLevelObjKey _result = ((Services.ServiceReference.AccessLevelObjKey)(base.EndInvoke("ReturnAccessObj", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReturnVisibleNKTObj(string passportKey, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = passportKey;
                _args[1] = context;
                System.IAsyncResult _result = base.BeginInvoke("ReturnVisibleNKTObj", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.ButtonNKTObjKey EndReturnVisibleNKTObj(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.ButtonNKTObjKey _result = ((Services.ServiceReference.ButtonNKTObjKey)(base.EndInvoke("ReturnVisibleNKTObj", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDataAllEntityObj(string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = context;
                System.IAsyncResult _result = base.BeginInvoke("GetDataAllEntityObj", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.DataEntityList_result EndGetDataAllEntityObj(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.DataEntityList_result _result = ((Services.ServiceReference.DataEntityList_result)(base.EndInvoke("GetDataAllEntityObj", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetXMLPassportToObjKey(string objKey, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = objKey;
                System.IAsyncResult _result = base.BeginInvoke("GetXMLPassportToObjKey", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.PasportToXML EndGetXMLPassportToObjKey(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.PasportToXML _result = ((Services.ServiceReference.PasportToXML)(base.EndInvoke("GetXMLPassportToObjKey", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetButtonToolbar(string passportkey, string buttonTollBar, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = passportkey;
                _args[1] = buttonTollBar;
                _args[2] = context;
                System.IAsyncResult _result = base.BeginInvoke("GetButtonToolbar", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.FielButtonData EndGetButtonToolbar(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.FielButtonData _result = ((Services.ServiceReference.FielButtonData)(base.EndInvoke("GetButtonToolbar", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDisplayLabels(string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = context;
                System.IAsyncResult _result = base.BeginInvoke("GetDisplayLabels", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.DisplayLabels EndGetDisplayLabels(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.DisplayLabels _result = ((Services.ServiceReference.DisplayLabels)(base.EndInvoke("GetDisplayLabels", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReturnTreeOnObjKey(string objKey, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = objKey;
                _args[1] = context;
                System.IAsyncResult _result = base.BeginInvoke("ReturnTreeOnObjKey", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.DataTreeViewOnObjkey EndReturnTreeOnObjKey(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.DataTreeViewOnObjkey _result = ((Services.ServiceReference.DataTreeViewOnObjkey)(base.EndInvoke("ReturnTreeOnObjKey", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReturnAllTreeOnObjKey(string objKey, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = objKey;
                _args[1] = context;
                System.IAsyncResult _result = base.BeginInvoke("ReturnAllTreeOnObjKey", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.DataTreeViewOnObjkey EndReturnAllTreeOnObjKey(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.DataTreeViewOnObjkey _result = ((Services.ServiceReference.DataTreeViewOnObjkey)(base.EndInvoke("ReturnAllTreeOnObjKey", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTreeFullHierarchyPathToObject(string objKey, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = objKey;
                _args[1] = context;
                System.IAsyncResult _result = base.BeginInvoke("GetTreeFullHierarchyPathToObject", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.TreeFullHierarchyPathToObject EndGetTreeFullHierarchyPathToObject(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.TreeFullHierarchyPathToObject _result = ((Services.ServiceReference.TreeFullHierarchyPathToObject)(base.EndInvoke("GetTreeFullHierarchyPathToObject", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDataHistoryObj(string inObjKey, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = inObjKey;
                _args[1] = context;
                System.IAsyncResult _result = base.BeginInvoke("GetDataHistoryObj", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.DataListHistoryObj EndGetDataHistoryObj(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.DataListHistoryObj _result = ((Services.ServiceReference.DataListHistoryObj)(base.EndInvoke("GetDataHistoryObj", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCalcPrivJson(string inObjKey, string strJason, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = inObjKey;
                _args[1] = strJason;
                _args[2] = context;
                System.IAsyncResult _result = base.BeginInvoke("GetCalcPrivJson", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.CalcPrivJson EndGetCalcPrivJson(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.CalcPrivJson _result = ((Services.ServiceReference.CalcPrivJson)(base.EndInvoke("GetCalcPrivJson", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllPriv(string inObjKey, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = inObjKey;
                _args[1] = context;
                System.IAsyncResult _result = base.BeginInvoke("GetAllPriv", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.AllPriv EndGetAllPriv(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.AllPriv _result = ((Services.ServiceReference.AllPriv)(base.EndInvoke("GetAllPriv", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteLinkToPipeByKey(string p_nkey, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = p_nkey;
                _args[1] = context;
                System.IAsyncResult _result = base.BeginInvoke("DeleteLinkToPipeByKey", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.StatusAnswer EndDeleteLinkToPipeByKey(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.StatusAnswer _result = ((Services.ServiceReference.StatusAnswer)(base.EndInvoke("DeleteLinkToPipeByKey", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSetHashPassword(string in_cpass, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = in_cpass;
                System.IAsyncResult _result = base.BeginInvoke("SetHashPassword", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.HashPassword EndSetHashPassword(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.HashPassword _result = ((Services.ServiceReference.HashPassword)(base.EndInvoke("SetHashPassword", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertMediaFile(string mediaFileName, string mediaFileName_small, string comment, string passportKey, string fileName, string typeMedia, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = mediaFileName;
                _args[1] = mediaFileName_small;
                _args[2] = comment;
                _args[3] = passportKey;
                _args[4] = fileName;
                _args[5] = typeMedia;
                _args[6] = context;
                System.IAsyncResult _result = base.BeginInvoke("InsertMediaFile", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.StatusAnswer EndInsertMediaFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.StatusAnswer _result = ((Services.ServiceReference.StatusAnswer)(base.EndInvoke("InsertMediaFile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteMediaOnObj(string passportkey, string mediaKey, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = passportkey;
                _args[1] = mediaKey;
                _args[2] = context;
                System.IAsyncResult _result = base.BeginInvoke("DeleteMediaOnObj", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.StatusAnswer EndDeleteMediaOnObj(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.StatusAnswer _result = ((Services.ServiceReference.StatusAnswer)(base.EndInvoke("DeleteMediaOnObj", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMediaAttribute(string passpoerKey, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = passpoerKey;
                _args[1] = context;
                System.IAsyncResult _result = base.BeginInvoke("GetMediaAttribute", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.DataMediaAttribute_result EndGetMediaAttribute(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.DataMediaAttribute_result _result = ((Services.ServiceReference.DataMediaAttribute_result)(base.EndInvoke("GetMediaAttribute", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDictValueData(string iKeyEntity, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = iKeyEntity;
                _args[1] = context;
                System.IAsyncResult _result = base.BeginInvoke("DictValueData", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.DictDataOnEntityKey EndDictValueData(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.DictDataOnEntityKey _result = ((Services.ServiceReference.DictDataOnEntityKey)(base.EndInvoke("DictValueData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDictDataFiltr(string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = context;
                System.IAsyncResult _result = base.BeginInvoke("DictDataFiltr", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DictDataFiltr> EndDictDataFiltr(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DictDataFiltr> _result = ((System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DictDataFiltr>)(base.EndInvoke("DictDataFiltr", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNameNsiOnKeyNSI(string inKeyNSI, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = inKeyNSI;
                _args[1] = context;
                System.IAsyncResult _result = base.BeginInvoke("GetNameNsiOnKeyNSI", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.nameNSIOnKey EndGetNameNsiOnKeyNSI(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.nameNSIOnKey _result = ((Services.ServiceReference.nameNSIOnKey)(base.EndInvoke("GetNameNsiOnKeyNSI", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveNsi(string i_nKeyNsiValue, string i_cNsiValue, string i_nKeyNsi, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = i_nKeyNsiValue;
                _args[1] = i_cNsiValue;
                _args[2] = i_nKeyNsi;
                _args[3] = context;
                System.IAsyncResult _result = base.BeginInvoke("SaveNsi", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.ListNsiOnSave EndSaveNsi(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.ListNsiOnSave _result = ((Services.ServiceReference.ListNsiOnSave)(base.EndInvoke("SaveNsi", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginOneDictValueData(string iKeyDict, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = iKeyDict;
                _args[1] = context;
                System.IAsyncResult _result = base.BeginInvoke("OneDictValueData", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.DictDataOne EndOneDictValueData(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.DictDataOne _result = ((Services.ServiceReference.DictDataOne)(base.EndInvoke("OneDictValueData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAttrControl(string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = context;
                System.IAsyncResult _result = base.BeginInvoke("AttrControl", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.ControlAttribute EndAttrControl(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.ControlAttribute _result = ((Services.ServiceReference.ControlAttribute)(base.EndInvoke("AttrControl", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAttrOneControl(string iTypeControl, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = iTypeControl;
                _args[1] = context;
                System.IAsyncResult _result = base.BeginInvoke("AttrOneControl", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.AttributOneControl> EndAttrOneControl(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.AttributOneControl> _result = ((System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.AttributOneControl>)(base.EndInvoke("AttrOneControl", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetGridData(string ipassportKey, string inObjKey, string iTypePassport, string inParentKey, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = ipassportKey;
                _args[1] = inObjKey;
                _args[2] = iTypePassport;
                _args[3] = inParentKey;
                _args[4] = context;
                System.IAsyncResult _result = base.BeginInvoke("GetGridData", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.GridData EndGetGridData(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.GridData _result = ((Services.ServiceReference.GridData)(base.EndInvoke("GetGridData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetThumbnailList(string passportKey, int mediaType, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = passportKey;
                _args[1] = mediaType;
                _args[2] = context;
                System.IAsyncResult _result = base.BeginInvoke("GetThumbnailList", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.ThumbnailList EndGetThumbnailList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.ThumbnailList _result = ((Services.ServiceReference.ThumbnailList)(base.EndInvoke("GetThumbnailList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMediaFile(string mediaKey, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = mediaKey;
                _args[1] = context;
                System.IAsyncResult _result = base.BeginInvoke("GetMediaFile", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.ThumbnailListBigMedia EndGetMediaFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.ThumbnailListBigMedia _result = ((Services.ServiceReference.ThumbnailListBigMedia)(base.EndInvoke("GetMediaFile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDataLink(string entityKey, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = entityKey;
                _args[1] = context;
                System.IAsyncResult _result = base.BeginInvoke("GetDataLink", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataLinkList> EndGetDataLink(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataLinkList> _result = ((System.Collections.ObjectModel.ObservableCollection<Services.ServiceReference.DataLinkList>)(base.EndInvoke("GetDataLink", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDataConnect(string entityKey, string fldName, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = entityKey;
                _args[1] = fldName;
                _args[2] = context;
                System.IAsyncResult _result = base.BeginInvoke("GetDataConnect", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.DataConnectList_result EndGetDataConnect(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.DataConnectList_result _result = ((Services.ServiceReference.DataConnectList_result)(base.EndInvoke("GetDataConnect", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDataRelationObj(string inObjKey, string keyFld, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = inObjKey;
                _args[1] = keyFld;
                _args[2] = context;
                System.IAsyncResult _result = base.BeginInvoke("GetDataRelationObj", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.DataListRelationObj EndGetDataRelationObj(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.DataListRelationObj _result = ((Services.ServiceReference.DataListRelationObj)(base.EndInvoke("GetDataRelationObj", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetListLinkedObjects(string objectkey, string entitykey, string fieldname, string linkedentitykey, string linkedobjects, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = objectkey;
                _args[1] = entitykey;
                _args[2] = fieldname;
                _args[3] = linkedentitykey;
                _args[4] = linkedobjects;
                _args[5] = context;
                System.IAsyncResult _result = base.BeginInvoke("GetListLinkedObjects", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.DataListLinkedObjects EndGetListLinkedObjects(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.DataListLinkedObjects _result = ((Services.ServiceReference.DataListLinkedObjects)(base.EndInvoke("GetListLinkedObjects", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveRelationObj(string inObjkey, string keyFld, string keyRelation, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = inObjkey;
                _args[1] = keyFld;
                _args[2] = keyRelation;
                _args[3] = context;
                System.IAsyncResult _result = base.BeginInvoke("SaveRelationObj", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.KeyRelationOnSave EndSaveRelationObj(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.KeyRelationOnSave _result = ((Services.ServiceReference.KeyRelationOnSave)(base.EndInvoke("SaveRelationObj", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDelRelationObj(string inObjkey, string keyFld, string keyRelation, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = inObjkey;
                _args[1] = keyFld;
                _args[2] = keyRelation;
                _args[3] = context;
                System.IAsyncResult _result = base.BeginInvoke("DelRelationObj", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.KeyRelationOnDel EndDelRelationObj(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.KeyRelationOnDel _result = ((Services.ServiceReference.KeyRelationOnDel)(base.EndInvoke("DelRelationObj", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCheckLink(string EntityKey, string ObjParentKey, string LinkType, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = EntityKey;
                _args[1] = ObjParentKey;
                _args[2] = LinkType;
                _args[3] = context;
                System.IAsyncResult _result = base.BeginInvoke("GetCheckLink", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.GetCheckOrganizationLink_result EndGetCheckLink(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.GetCheckOrganizationLink_result _result = ((Services.ServiceReference.GetCheckOrganizationLink_result)(base.EndInvoke("GetCheckLink", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDataChild(string entityKey, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = entityKey;
                _args[1] = context;
                System.IAsyncResult _result = base.BeginInvoke("GetDataChild", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.DataChildList_result EndGetDataChild(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.DataChildList_result _result = ((Services.ServiceReference.DataChildList_result)(base.EndInvoke("GetDataChild", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCountChild(string entityKey, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = entityKey;
                _args[1] = context;
                System.IAsyncResult _result = base.BeginInvoke("GetCountChild", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.CountChild_result EndGetCountChild(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.CountChild_result _result = ((Services.ServiceReference.CountChild_result)(base.EndInvoke("GetCountChild", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNameObj(string entityKey, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = entityKey;
                _args[1] = context;
                System.IAsyncResult _result = base.BeginInvoke("GetNameObj", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.NameObj_result EndGetNameObj(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.NameObj_result _result = ((Services.ServiceReference.NameObj_result)(base.EndInvoke("GetNameObj", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPassportInfo(string inObjKey, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = inObjKey;
                _args[1] = context;
                System.IAsyncResult _result = base.BeginInvoke("GetPassportInfo", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.PassportInfo_result EndGetPassportInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.PassportInfo_result _result = ((Services.ServiceReference.PassportInfo_result)(base.EndInvoke("GetPassportInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDataMGList(string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = context;
                System.IAsyncResult _result = base.BeginInvoke("GetDataMGList", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.DataMGList_result EndGetDataMGList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.DataMGList_result _result = ((Services.ServiceReference.DataMGList_result)(base.EndInvoke("GetDataMGList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDataNitList(string inKeyMg, string context, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = inKeyMg;
                _args[1] = context;
                System.IAsyncResult _result = base.BeginInvoke("GetDataNitList", _args, callback, asyncState);
                return _result;
            }
            
            public Services.ServiceReference.DataNitList_result EndGetDataNitList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Services.ServiceReference.DataNitList_result _result = ((Services.ServiceReference.DataNitList_result)(base.EndInvoke("GetDataNitList", _args, result)));
                return _result;
            }
        }
    }
}
